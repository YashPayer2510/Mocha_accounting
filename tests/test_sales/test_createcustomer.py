import pytest
import logging
from pages.create_customer import CreateCustomer

logger = logging.getLogger(__name__)


@pytest.mark.needs_login
def test_ete_create_customer_sales_flow(setup, createcustomer_test_data):
    driver = setup
    create_customer = CreateCustomer(driver)

    for customer_data in createcustomer_test_data:
        logger.info("Test case started")
        create_customer.cust_submodsales()
        create_customer.cust_submodCustomer()
        create_customer.cust_newCustomer()
        create_customer.cust_title(customer_data)
        logger.info("Title entered")
        create_customer.cust_firstname(customer_data)
        logger.info("firstname entered")
        create_customer.cust_middlename(customer_data)
        logger.info("middlename entered")
        create_customer.cust_lastname(customer_data)
        logger.info("lastname entered")
        created_display_name=create_customer.cust_displayname()
        #created_display_name = create_customer.displayed_display_name
        print(f"Created Customer: {created_display_name}")
        logger.info("display name stored")
        create_customer.cust_email(customer_data)
        logger.info("email entered")
        create_customer.cust_phonenumcountry(customer_data)
        logger.info("phonenumcountry selected")
        create_customer.cust_phonenumber(customer_data)
        logger.info("phonenumber entered")
        create_customer.cust_mobilenumber(customer_data)
        logger.info("mobilenumber entered")
        create_customer.cust_fax(customer_data)
        logger.info("fax entered")
        create_customer.cust_other(customer_data)
        logger.info("other entered")
        create_customer.cust_nametoprintoncheck(customer_data)
        logger.info("nametoprintoncheck entered")
        create_customer.cust_gsttreatment(customer_data)
        logger.info("gsttreatment selected")
        create_customer.cust_gstnumber(customer_data)
        logger.info("gstnumber entered")
        create_customer.cust_close_first_3_alert_tax_msg()
        logger.info("closed the first 3 alert message related to tax")
        create_customer.cust_billing(customer_data)
        logger.info("billing entered")
        create_customer.cust_shipping(customer_data)
        logger.info("shipping entered")
        create_customer.cust_note(customer_data)
        logger.info("note entered")
        create_customer.cust_customertype(customer_data)
        logger.info("customertype selected")
        create_customer.cust_preferreddeliverymethod(customer_data)
        logger.info("preferreddeliverymethod selected")
        create_customer.cust_preferredpaymentmethod(customer_data)
        logger.info("preferredpaymentmethod selected")
        create_customer.cust_creditterms(customer_data)
        logger.info("creditterms selected")
        create_customer.cust_saveandclose()
        logger.info("saveandclose clicked")
        create_customer.cust_customer_saved_successfully()
        logger.info("Test Case completed")
        return created_display_name

@pytest.mark.needs_login
def test_ete_create_customer(setup, createcustomer_test_data):
    driver = setup
    create_customer = CreateCustomer(driver)

    for customer_data in createcustomer_test_data:
        logger.info("Test case started")
        create_customer.cust_submodsales()
        create_customer.cust_submodCustomer()
        create_customer.cust_newCustomer()
        create_customer.cust_title(customer_data)
        logger.info("Title entered")
        create_customer.cust_firstname(customer_data)
        logger.info("firstname entered")
        create_customer.cust_middlename(customer_data)
        logger.info("middlename entered")
        create_customer.cust_lastname(customer_data)
        logger.info("lastname entered")
        create_customer.cust_displayname()
        logger.info("display name stored")
        create_customer.cust_email(customer_data)
        logger.info("email entered")
        create_customer.cust_phonenumcountry(customer_data)
        logger.info("phonenumcountry selected")
        create_customer.cust_phonenumber(customer_data)
        logger.info("phonenumber entered")
        create_customer.cust_mobilenumber(customer_data)
        logger.info("mobilenumber entered")
        create_customer.cust_fax(customer_data)
        logger.info("fax entered")
        create_customer.cust_other(customer_data)
        logger.info("other entered")
        create_customer.cust_nametoprintoncheck(customer_data)
        logger.info("nametoprintoncheck entered")
        create_customer.cust_gsttreatment(customer_data)
        logger.info("gsttreatment selected")
        create_customer.cust_gstnumber(customer_data)
        logger.info("gstnumber entered")
        create_customer.cust_close_first_3_alert_tax_msg()
        logger.info("closed the first 3 alert message related to tax")
        create_customer.cust_billing(customer_data)
        logger.info("billing entered")
        create_customer.cust_shipping(customer_data)
        logger.info("shipping entered")
        create_customer.cust_note(customer_data)
        logger.info("note entered")
        create_customer.cust_customertype(customer_data)
        logger.info("customertype selected")
        create_customer.cust_preferreddeliverymethod(customer_data)
        logger.info("preferreddeliverymethod selected")
        create_customer.cust_preferredpaymentmethod(customer_data)
        logger.info("preferredpaymentmethod selected")
        create_customer.cust_creditterms(customer_data)
        logger.info("creditterms selected")
        create_customer.cust_saveandclose()
        logger.info("saveandclose clicked")
        create_customer.cust_customer_saved_successfully()
        logger.info("Test Case completed")


