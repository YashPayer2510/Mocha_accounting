import logging
import time

from self import driver

from pages.create_product_and_service import CreateProdouct_Service
from tests.conftest import setup
from tests.conftest import setup, create_product_service_test_data
logger = logging.getLogger(__name__)

def test_create_product_service_ete_flow(setup, create_product_service_test_data):
    driver = setup
    create_product_service = CreateProdouct_Service(driver)
    logger.info("Test Cases started")
    create_product_service.create_product_service_sales_module()
    logger.info("Clicked on Sale module")
    create_product_service.create_product_service_submodule()
    logger.info("Clicked on Product and service sub-module")
    create_product_service.create_product_service_new_btn()
    logger.info("Clicked on New button")
    create_product_service.create_product_service_name(create_product_service_test_data)
    logger.info("Enter the name")
    create_product_service.create_product_service_type_dd(create_product_service_test_data)
    logger.info("Selected product type")
    create_product_service.create_product_service_sku(create_product_service_test_data)
    logger.info("Entered the SKU")
    create_product_service.create_product_service_base_unit_dd(create_product_service_test_data)
    logger.info("Selected Base Unit")
    create_product_service.create_product_service_add_secondary_unit_hyperlink()
    logger.info("Clicked on add secondary unit hyperlink")
    create_product_service.create_product_service_secondary_unit_dd(create_product_service_test_data)
    logger.info("Selected Secondary Unit")
    create_product_service.create_product_service_conversion_rate(create_product_service_test_data)
    logger.info("Entered the conversion rate")
    create_product_service.create_product_service_save_unit_conversion()
    logger.info("Clicked on save button on unit conversion")
    create_product_service.create_product_service_hsn_sac_dd(create_product_service_test_data)
    logger.info("Selected Base unit")
    create_product_service.create_product_service_inventory_account_dd(create_product_service_test_data)
    logger.info("Selected inventory account")
    create_product_service.create_product_service_qty_on_hand(create_product_service_test_data)
    logger.info("Entered the quantity on hand")
    create_product_service.create_product_service_recorder_point(create_product_service_test_data)
    logger.info("Entered the recorder point")
    create_product_service.create_product_service_opening_stock_price(create_product_service_test_data)
    logger.info("Entered the opening_stock_price")
    create_product_service.create_product_service_as_of_date(create_product_service_test_data)
    logger.info("Entered the as of date")
    #create_product_service.create_product_service_sale_info_chk_bx()
    #logger.info("Checked the Sale information checkbox")
    create_product_service.create_product_service_income_account_dd(create_product_service_test_data)
    logger.info("Selected income account")
    create_product_service.create_product_service_sale_price(create_product_service_test_data)
    logger.info("Enter the sale price")
    #create_product_service.create_product_service_purchase_info_chk_bx()
    #logger.info("Checked the purchase information checkbox")
    create_product_service.create_product_service_expense_account_dd(create_product_service_test_data)
    logger.info("Selected expense account")
    create_product_service.create_product_service_cost_price(create_product_service_test_data)
    logger.info("Enter the cost price")
    create_product_service.create_product_service_saveandclose()
    logger.info("Clicked on Save and Close")

def test_verify_product_created_successfully(setup,create_product_service_test_data):
    driver = setup
    create_product_service = CreateProdouct_Service(driver)
    logger.info("Test Cases started")
    create_product_service.create_product_service_sales_module()
    logger.info("Clicked on Sale module")
    create_product_service.create_product_service_submodule()
    logger.info("Clicked on Product and service sub-module")
    create_product_service.create_product_service_new_btn()
    logger.info("Clicked on New button")
    create_product_service.create_product_service_name(create_product_service_test_data)
    logger.info("Enter the name")
    create_product_service.create_product_service_store_name()
    logger.info("product name is stored")
    create_product_service.create_product_service_type_dd(create_product_service_test_data)
    logger.info("Selected product type")
    create_product_service.create_product_service_sku(create_product_service_test_data)
    logger.info("Entered the SKU")
    create_product_service.create_product_service_base_unit_dd(create_product_service_test_data)
    logger.info("Selected Base Unit")
    create_product_service.create_product_service_add_secondary_unit_hyperlink()
    logger.info("Clicked on add secondary unit hyperlink")
    create_product_service.create_product_service_secondary_unit_dd(create_product_service_test_data)
    logger.info("Selected Secondary Unit")
    create_product_service.create_product_service_conversion_rate(create_product_service_test_data)
    logger.info("Entered the conversion rate")
    create_product_service.create_product_service_save_unit_conversion()
    logger.info("Clicked on save button on unit conversion")
    create_product_service.create_product_service_hsn_sac_dd(create_product_service_test_data)
    logger.info("Selected Base unit")
    create_product_service.create_product_service_inventory_account_dd(create_product_service_test_data)
    logger.info("Selected inventory account")
    create_product_service.create_product_service_qty_on_hand(create_product_service_test_data)
    logger.info("Entered the quantity on hand")
    create_product_service.create_product_service_recorder_point(create_product_service_test_data)
    logger.info("Entered the recorder point")
    create_product_service.create_product_service_opening_stock_price(create_product_service_test_data)
    logger.info("Entered the opening_stock_price")
    create_product_service.create_product_service_as_of_date(create_product_service_test_data)
    logger.info("Entered the as of date")
    #create_product_service.create_product_service_sale_info_chk_bx()
    #logger.info("Checked the Sale information checkbox")
    create_product_service.create_product_service_income_account_dd(create_product_service_test_data)
    logger.info("Selected income account")
    create_product_service.create_product_service_sale_price(create_product_service_test_data)
    logger.info("Enter the sale price")
    #create_product_service.create_product_service_purchase_info_chk_bx()
    #logger.info("Checked the purchase information checkbox")
    create_product_service.create_product_service_expense_account_dd(create_product_service_test_data)
    logger.info("Selected expense account")
    create_product_service.create_product_service_cost_price(create_product_service_test_data)
    logger.info("Enter the cost price")
    create_product_service.create_product_service_saveandclose()
    logger.info("Clicked on Save and Close")
    time.sleep(9)
    create_product_service.create_product_saved_successfully(create_product_service_test_data)
    logger.info("Verified the created product and service present in product list")





