import logging
import time

from pages.create_invoice import Create_Invoice

from tests.conftest import setup, create_invoice_test_data

logger = logging.getLogger(__name__)


# verify the ete flow of create product
def test_create_invoice(setup, create_invoice_test_data):
    driver = setup
    create_invoice = Create_Invoice(driver)


    logger.info("Test case started for create invoice")
    create_invoice.inv_submod_Sales()
    logger.info("Navigated to Sale module")
    create_invoice.inv_submod_invoice()
    logger.info("Navigated to Invoice submodule")
    create_invoice.inv_create_invoice()
    logger.info("clicked on create invoice button")
    time.sleep(3)
    create_invoice.inv_select_customer(create_invoice_test_data)
    logger.info("customer selected")
    time.sleep(2)
    #create_invoice.inv_select_credit_terms(create_invoice_test_data)
    logger.info("credit terms selected")
    #create_invoice.inv_location_of_sale(create_invoice_test_data)
    logger.info("location of sale selected")
    #create_invoice.inv_dd_billing(create_invoice_test_data)
    logger.info("billing address selected")
    #create_invoice.inv_shippingvia(create_invoice_test_data)
    logger.info("shippingvia address selected")
    #create_invoice.inv_shipping_to(create_invoice_test_data)
    logger.info("shippingto address selected")
    create_invoice.inv_invoice_date(create_invoice_test_data)
    logger.info("invoice date selected")
    create_invoice.inv_shipping_date(create_invoice_test_data)
    logger.info("shipping date selected")
    create_invoice.inv_due_date(create_invoice_test_data)
    logger.info("due date selected")
    create_invoice.inv_click_additems()
    logger.info("add items button clicked")
    create_invoice.inv_select_productservice_no_rate_update(create_invoice_test_data)
    logger.info("product or service selected")
    #create_invoice.inv_product_quantity(create_invoice_test_data)
    #logger.info("product or service quantity added")
    #create_invoice.inv_product_rateperunit(create_invoice_test_data)
    #logger.info("product or service rate added")
    #create_invoice.inv_btn_prod_cancel()
    #logger.info("cancel button click")
    #reate_invoice.inv_selecproduct_save()
    #logger.info("save button click")
    create_invoice.inv_message_on_invoice(create_invoice_test_data)
    logger.info("message given for invoice")
    create_invoice.inv_subtotal()
    logger.info("get subtotal")
    create_invoice.inv_tax()
    logger.info("get tax")
    create_invoice.inv_amount_received()
    logger.info("get amount received")
    create_invoice.inv_balance()
    logger.info("get balance")
    create_invoice.inv_save_and_close()
    logger.info("clicked on Save and Close button")
    create_invoice.inv_x_button()
    logger.info("TC ended")


# verify the weather total amount of all product matches with amount in sub-total
def test_verify_total_matches_with_subtotal(setup, create_invoice_test_data):
    driver = setup
    create_invoice = Create_Invoice(driver)

    logger.info("Test case started for create invoice")
    create_invoice.inv_submod_Sales()
    logger.info("Navigated to Sale module")
    create_invoice.inv_submod_invoice()
    logger.info("Navigated to Invoice submodule")
    create_invoice.inv_create_invoice()
    logger.info("clicked on create invoice button")
    time.sleep(3)
    create_invoice.inv_select_customer(create_invoice_test_data)
    logger.info("customer selected")
    time.sleep(2)
    create_invoice.inv_click_additems()
    logger.info("add items button clicked")
    time.sleep(2)
    create_invoice.inv_select_multiple_productservice(create_invoice_test_data)
    logger.info("product or service selected")
    time.sleep(2)
    #create_invoice.inv_product_quantity(create_invoice_test_data)
    #logger.info("product or service quantity added")
    #time.sleep(2)
    #create_invoice.inv_product_rateperunit(create_invoice_test_data)
    #logger.info("product or service rate added")
    #time.sleep(2)
    #create_invoice.inv_selecproduct_save()
    #logger.info("save button click")
    #time.sleep(2)
    create_invoice.verify_total_matches_with_subtotal()
    logger.info("total of all product matches with sub total amount")


# verify that each product amount is correct according to quanity and rate.
def test_verify_amount_of_each_product_with_rate_and_quantity(setup, create_invoice_test_data):
    driver = setup
    create_invoice = Create_Invoice(driver)

    logger.info("Test case started for create invoice")
    create_invoice.inv_submod_Sales()
    logger.info("Navigated to Sale module")
    create_invoice.inv_submod_invoice()
    logger.info("Navigated to Invoice submodule")
    create_invoice.inv_create_invoice()
    logger.info("clicked on create invoice button")
    time.sleep(3)
    create_invoice.inv_select_customer(create_invoice_test_data)
    logger.info("customer selected")
    time.sleep(2)
    create_invoice.inv_click_additems()
    logger.info("add items button clicked")
    time.sleep(2)
    create_invoice.inv_select_multiple_productservice(create_invoice_test_data)
    logger.info("product or service selected")
    time.sleep(2)
    #create_invoice.inv_product_quantity(create_invoice_test_data)
    #logger.info("product or service quantity added")
    #time.sleep(2)
    #create_invoice.inv_product_rateperunit(create_invoice_test_data)
    #logger.info("product or service rate added")
    #time.sleep(2)
    #create_invoice.inv_selecproduct_save()
    #logger.info("save button click")
    #time.sleep(2)
    create_invoice.verify_amount_of_each_product_with_rate_and_quantity()
    logger.info("product amount matches with calculated amount of quantity multiply by product rate")

    # verify that each product amount is correct according to quantity and rate.
def test_verify_total_matches_with_sum_of_productamount_and_tax(setup, create_invoice_test_data):
        driver = setup
        create_invoice = Create_Invoice(driver)

        logger.info("Test case started for create invoice")
        create_invoice.inv_submod_Sales()
        logger.info("Navigated to Sale module")
        create_invoice.inv_submod_invoice()
        logger.info("Navigated to Invoice submodule")
        create_invoice.inv_create_invoice()
        logger.info("clicked on create invoice button")
        time.sleep(3)
        create_invoice.inv_select_customer(create_invoice_test_data)
        logger.info("customer selected")
        time.sleep(2)
        create_invoice.inv_click_additems()
        logger.info("add items button clicked")
        time.sleep(2)
        create_invoice.inv_select_multiple_productservice(create_invoice_test_data)
        logger.info("product or service selected")
        time.sleep(2)
        # create_invoice.inv_product_quantity(create_invoice_test_data)
        # logger.info("product or service quantity added")
        # time.sleep(2)
        # create_invoice.inv_product_rateperunit(create_invoice_test_data)
        # logger.info("product or service rate added")
        # time.sleep(2)
        # create_invoice.inv_selecproduct_save()
        # logger.info("save button click")
        # time.sleep(2)
        create_invoice.verify_total_matches_with_sum_of_productamount_and_tax()
        logger.info("total amount matches with sum of producty amount and tax")


def test_verify_created_invoice_displayed_in_invoice_list(setup, create_invoice_test_data):
    driver = setup
    create_invoice = Create_Invoice(driver)

    logger.info("Test case started for create invoice")
    create_invoice.inv_submod_Sales()
    logger.info("Navigated to Sale module")
    create_invoice.inv_submod_invoice()
    logger.info("Navigated to Invoice submodule")
    create_invoice.inv_create_invoice()
    logger.info("clicked on create invoice button")
    time.sleep(3)
    create_invoice.inv_select_customer(create_invoice_test_data)
    logger.info("customer selected")
    time.sleep(2)
    create_invoice.inv_get_invoice_no()
    logger.info("invoice number stored")
    # create_invoice.inv_select_credit_terms(create_invoice_test_data)
    logger.info("shippingto address selected")
    create_invoice.inv_invoice_date(create_invoice_test_data)
    logger.info("invoice date selected")
    create_invoice.inv_shipping_date(create_invoice_test_data)
    logger.info("shipping date selected")
    create_invoice.inv_due_date(create_invoice_test_data)
    logger.info("due date selected")
    create_invoice.inv_click_additems()
    logger.info("add items button clicked")
    create_invoice.inv_select_productservice(create_invoice_test_data)
    logger.info("product or service selected")
    create_invoice.inv_product_quantity(create_invoice_test_data)
    logger.info("product or service quantity added")
    create_invoice.inv_product_rateperunit(create_invoice_test_data)
    logger.info("product or service rate added")
    create_invoice.inv_selecproduct_save()
    logger.info("save button click")
    create_invoice.inv_message_on_invoice(create_invoice_test_data)
    logger.info("message given for invoice")
    create_invoice.inv_subtotal()
    logger.info("get subtotal")
    create_invoice.inv_tax()
    logger.info("get tax")
    create_invoice.inv_amount_received()
    logger.info("get amount received")
    create_invoice.inv_balance()
    logger.info("get balance")
    create_invoice.inv_save_and_close()
    logger.info("clicked on Save and Close button")
    create_invoice.verify_created_invoice_displayed_in_invoice_list()
    logger.info("invoice created succesfully")
    logger.info("TC ended")




