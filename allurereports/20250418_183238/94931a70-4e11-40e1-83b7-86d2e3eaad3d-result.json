{"name": "test_create_invoice", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x004C8073+60707]\n\tGetHandleVerifier [0x004C80B4+60772]\n\t(No symbol) [0x002F0683]\n\t(No symbol) [0x00338660]\n\t(No symbol) [0x003389FB]\n\t(No symbol) [0x00381022]\n\t(No symbol) [0x0035D094]\n\t(No symbol) [0x0037E824]\n\t(No symbol) [0x0035CE46]\n\t(No symbol) [0x0032C5D3]\n\t(No symbol) [0x0032D424]\n\tGetHandleVerifier [0x0070BB53+2435075]\n\tGetHandleVerifier [0x007070F3+2416035]\n\tGetHandleVerifier [0x0072349C+2531660]\n\tGetHandleVerifier [0x004DF145+155125]\n\tGetHandleVerifier [0x004E5AED+182173]\n\tGetHandleVerifier [0x004CF948+91640]\n\tGetHandleVerifier [0x004CFAF0+92064]\n\tGetHandleVerifier [0x004BA5B0+4704]\n\tBaseThreadInitThunk [0x75EB7BA9+25]\n\tRtlInitializeExceptionChain [0x7727C2EB+107]\n\tRtlClearBits [0x7727C26F+191]", "trace": "setup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"eae0eb3708e7d4353489989a096d93dd\")>\ncreate_invoice_test_data = {'customer_name': 'Sachin Tendulkar', 'due_date': 'April 2025, April 10, 2025', 'invoice_date': 'March 2025, March 4, 2025', 'message_on_invoice': 'automation test', ...}\n\n    def test_create_invoice(setup, create_invoice_test_data):\n        driver = setup\n        create_invoice = Create_Invoice(driver)\n    \n        logger.info(\"Test case started for create invoice\")\n        create_invoice.inv_submod_Sales()\n        logger.info(\"Navigated to Sale module\")\n        create_invoice.inv_submod_invoice()\n        logger.info(\"Navigated to Invoice submodule\")\n        create_invoice.inv_create_invoice()\n        logger.info(\"clicked on create invoice button\")\n        time.sleep(3)\n        create_invoice.inv_select_customer(create_invoice_test_data)\n        logger.info(\"customer selected\")\n        time.sleep(2)\n        #create_invoice.inv_select_credit_terms(create_invoice_test_data)\n        logger.info(\"credit terms selected\")\n        #create_invoice.inv_location_of_sale(create_invoice_test_data)\n        logger.info(\"location of sale selected\")\n        #create_invoice.inv_dd_billing(create_invoice_test_data)\n        logger.info(\"billing address selected\")\n        #create_invoice.inv_shippingvia(create_invoice_test_data)\n        logger.info(\"shippingvia address selected\")\n        #create_invoice.inv_shipping_to(create_invoice_test_data)\n        logger.info(\"shippingto address selected\")\n        create_invoice.inv_invoice_date(create_invoice_test_data)\n        logger.info(\"invoice date selected\")\n        create_invoice.inv_shipping_date(create_invoice_test_data)\n        logger.info(\"shipping date selected\")\n        create_invoice.inv_due_date(create_invoice_test_data)\n        logger.info(\"due date selected\")\n        create_invoice.inv_click_additems()\n        logger.info(\"add items button clicked\")\n>       create_invoice.inv_select_productservice(create_invoice_test_data)\n\ntest_create_invoice.py:43: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\pages\\create_invoice.py:125: in inv_select_productservice\n    self.actions.wait_for_element(self.inv_dd_select_product)\n..\\actions\\actions.py:68: in wait_for_element\n    WebDriverWait(self.driver, timeout).until(EC.visibility_of_element_located(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"eae0eb3708e7d4353489989a096d93dd\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x00000193B3D12B60>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        ----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x004C8073+60707]\nE       \tGetHandleVerifier [0x004C80B4+60772]\nE       \t(No symbol) [0x002F0683]\nE       \t(No symbol) [0x00338660]\nE       \t(No symbol) [0x003389FB]\nE       \t(No symbol) [0x00381022]\nE       \t(No symbol) [0x0035D094]\nE       \t(No symbol) [0x0037E824]\nE       \t(No symbol) [0x0035CE46]\nE       \t(No symbol) [0x0032C5D3]\nE       \t(No symbol) [0x0032D424]\nE       \tGetHandleVerifier [0x0070BB53+2435075]\nE       \tGetHandleVerifier [0x007070F3+2416035]\nE       \tGetHandleVerifier [0x0072349C+2531660]\nE       \tGetHandleVerifier [0x004DF145+155125]\nE       \tGetHandleVerifier [0x004E5AED+182173]\nE       \tGetHandleVerifier [0x004CF948+91640]\nE       \tGetHandleVerifier [0x004CFAF0+92064]\nE       \tGetHandleVerifier [0x004BA5B0+4704]\nE       \tBaseThreadInitThunk [0x75EB7BA9+25]\nE       \tRtlInitializeExceptionChain [0x7727C2EB+107]\nE       \tRtlClearBits [0x7727C26F+191]\n\n..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:146: TimeoutException"}, "attachments": [{"name": "log", "source": "7770a4fb-0c9a-4bad-8ce2-2cbd64205fec-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "5b98d428-4927-47f3-b039-ae05ad4eaaa2-attachment.txt", "type": "text/plain"}], "start": 1744981364504, "stop": 1744981421507, "uuid": "115f9452-08b2-4f02-8c2e-8340530937a3", "historyId": "fc7b2251192f1c8c226df9a8539342f9", "testCaseId": "fc7b2251192f1c8c226df9a8539342f9", "fullName": "test_create_invoice#test_create_invoice", "labels": [{"name": "suite", "value": "test_create_invoice"}, {"name": "host", "value": "LAPTOP-R01C5SG4"}, {"name": "thread", "value": "51352-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_create_invoice"}]}