{"uuid": "15c71fe7-aa10-4b34-9970-1a01730541c1", "children": ["1f27c492-a897-40ec-8de2-58d5a45cf496"], "befores": [{"name": "setup", "status": "broken", "statusDetails": {"message": "urllib3.exceptions.MaxRetryError: HTTPConnectionPool(host='localhost', port=64510): Max retries exceeded with url: /session/eb0237378e059d0d2a269a4a2dfe69a8/element (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x0000028E15BE5040>: Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it'))\n", "trace": "  File \"C:\\Users\\Taurus13\\PycharmProjects\\PythonProject\\.venv\\Lib\\site-packages\\pluggy\\_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Taurus13\\PycharmProjects\\PythonProject\\.venv\\Lib\\site-packages\\_pytest\\setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"C:\\Users\\Taurus13\\PycharmProjects\\PythonProject\\.venv\\Lib\\site-packages\\pluggy\\_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n  File \"C:\\Users\\Taurus13\\PycharmProjects\\PythonProject\\.venv\\Lib\\site-packages\\_pytest\\fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"C:\\Users\\Taurus13\\PycharmProjects\\PythonProject\\.venv\\Lib\\site-packages\\_pytest\\fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n  File \"C:\\Users\\Taurus13\\PycharmProjects\\PythonProject\\tests\\conftest.py\", line 141, in setup\n    logout(driver)\n    ~~~~~~^^^^^^^^\n  File \"C:\\Users\\Taurus13\\PycharmProjects\\PythonProject\\tests\\conftest.py\", line 163, in logout\n    logout_page.click_logged_out_profile()\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^\n  File \"C:\\Users\\Taurus13\\PycharmProjects\\PythonProject\\pages\\login_page.py\", line 50, in click_logged_out_profile\n    self.actions.wait_for_element(self.logged_out_profile)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Taurus13\\PycharmProjects\\PythonProject\\actions\\actions.py\", line 68, in wait_for_element\n    WebDriverWait(self.driver, timeout).until(EC.visibility_of_element_located(locator))\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Taurus13\\PycharmProjects\\PythonProject\\.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 137, in until\n    value = method(self._driver)\n  File \"C:\\Users\\Taurus13\\PycharmProjects\\PythonProject\\.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py\", line 224, in _predicate\n    return _element_if_visible(driver.find_element(*locator))\n                               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^\n  File \"C:\\Users\\Taurus13\\PycharmProjects\\PythonProject\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 898, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n           ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Taurus13\\PycharmProjects\\PythonProject\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 427, in execute\n    response = self.command_executor.execute(driver_command, params)\n  File \"C:\\Users\\Taurus13\\PycharmProjects\\PythonProject\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\remote_connection.py\", line 404, in execute\n    return self._request(command_info[0], url, body=data)\n           ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Taurus13\\PycharmProjects\\PythonProject\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\remote_connection.py\", line 428, in _request\n    response = self._conn.request(method, url, body=body, headers=headers, timeout=self._client_config.timeout)\n  File \"C:\\Users\\Taurus13\\PycharmProjects\\PythonProject\\.venv\\Lib\\site-packages\\urllib3\\_request_methods.py\", line 143, in request\n    return self.request_encode_body(\n           ~~~~~~~~~~~~~~~~~~~~~~~~^\n        method, url, fields=fields, headers=headers, **urlopen_kw\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    )\n    ^\n  File \"C:\\Users\\Taurus13\\PycharmProjects\\PythonProject\\.venv\\Lib\\site-packages\\urllib3\\_request_methods.py\", line 278, in request_encode_body\n    return self.urlopen(method, url, **extra_kw)\n           ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Taurus13\\PycharmProjects\\PythonProject\\.venv\\Lib\\site-packages\\urllib3\\poolmanager.py\", line 443, in urlopen\n    response = conn.urlopen(method, u.request_uri, **kw)\n  File \"C:\\Users\\Taurus13\\PycharmProjects\\PythonProject\\.venv\\Lib\\site-packages\\urllib3\\connectionpool.py\", line 871, in urlopen\n    return self.urlopen(\n           ~~~~~~~~~~~~^\n        method,\n        ^^^^^^^\n    ...<13 lines>...\n        **response_kw,\n        ^^^^^^^^^^^^^^\n    )\n    ^\n  File \"C:\\Users\\Taurus13\\PycharmProjects\\PythonProject\\.venv\\Lib\\site-packages\\urllib3\\connectionpool.py\", line 871, in urlopen\n    return self.urlopen(\n           ~~~~~~~~~~~~^\n        method,\n        ^^^^^^^\n    ...<13 lines>...\n        **response_kw,\n        ^^^^^^^^^^^^^^\n    )\n    ^\n  File \"C:\\Users\\Taurus13\\PycharmProjects\\PythonProject\\.venv\\Lib\\site-packages\\urllib3\\connectionpool.py\", line 871, in urlopen\n    return self.urlopen(\n           ~~~~~~~~~~~~^\n        method,\n        ^^^^^^^\n    ...<13 lines>...\n        **response_kw,\n        ^^^^^^^^^^^^^^\n    )\n    ^\n  File \"C:\\Users\\Taurus13\\PycharmProjects\\PythonProject\\.venv\\Lib\\site-packages\\urllib3\\connectionpool.py\", line 841, in urlopen\n    retries = retries.increment(\n        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]\n    )\n  File \"C:\\Users\\Taurus13\\PycharmProjects\\PythonProject\\.venv\\Lib\\site-packages\\urllib3\\util\\retry.py\", line 519, in increment\n    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n"}, "start": 1745242669124, "stop": 1745242688977}], "start": 1745242669124, "stop": 1745242693288}