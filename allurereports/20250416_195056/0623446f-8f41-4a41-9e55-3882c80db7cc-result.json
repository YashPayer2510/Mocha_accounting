{"name": "test_create_invoice", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x00548073+60707]\n\tGetHandleVerifier [0x005480B4+60772]\n\t(No symbol) [0x00370683]\n\t(No symbol) [0x003B8660]\n\t(No symbol) [0x003B89FB]\n\t(No symbol) [0x00401022]\n\t(No symbol) [0x003DD094]\n\t(No symbol) [0x003FE824]\n\t(No symbol) [0x003DCE46]\n\t(No symbol) [0x003AC5D3]\n\t(No symbol) [0x003AD424]\n\tGetHandleVerifier [0x0078BB53+2435075]\n\tGetHandleVerifier [0x007870F3+2416035]\n\tGetHandleVerifier [0x007A349C+2531660]\n\tGetHandleVerifier [0x0055F145+155125]\n\tGetHandleVerifier [0x00565AED+182173]\n\tGetHandleVerifier [0x0054F948+91640]\n\tGetHandleVerifier [0x0054FAF0+92064]\n\tGetHandleVerifier [0x0053A5B0+4704]\n\tBaseThreadInitThunk [0x75EB7BA9+25]\n\tRtlInitializeExceptionChain [0x7727C2EB+107]\n\tRtlClearBits [0x7727C26F+191]", "trace": "setup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"7caf0b07ef3728e61c3eb7f687f6ffb1\")>\ncreate_invoice_test_data = {'as_of_date': 'March 2025, March 4, 2025', 'customer_name': 'Sachin Tendulkar'}\n\n    def test_create_invoice(setup, create_invoice_test_data):\n        driver = setup\n        create_invoice = Create_Invoice(driver)\n    \n        create_invoice.inv_submod_Sales()\n        create_invoice.inv_submod_invoice()\n        create_invoice.inv_create_invoice()\n>       create_invoice.inv_select_customer(create_invoice_test_data)\n\ntest_create_invoice.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\pages\\create_invoice.py:70: in inv_select_customer\n    self.actions.dropdown_equals(self.inv_dd_customer, self.inv_options_customer,create_invoice_test_data[\"customer_name\"])\n..\\actions\\actions.py:221: in dropdown_equals\n    wait.until(EC.visibility_of_element_located(de_options_locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"7caf0b07ef3728e61c3eb7f687f6ffb1\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x00000271BF27A480>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        ----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x00548073+60707]\nE       \tGetHandleVerifier [0x005480B4+60772]\nE       \t(No symbol) [0x00370683]\nE       \t(No symbol) [0x003B8660]\nE       \t(No symbol) [0x003B89FB]\nE       \t(No symbol) [0x00401022]\nE       \t(No symbol) [0x003DD094]\nE       \t(No symbol) [0x003FE824]\nE       \t(No symbol) [0x003DCE46]\nE       \t(No symbol) [0x003AC5D3]\nE       \t(No symbol) [0x003AD424]\nE       \tGetHandleVerifier [0x0078BB53+2435075]\nE       \tGetHandleVerifier [0x007870F3+2416035]\nE       \tGetHandleVerifier [0x007A349C+2531660]\nE       \tGetHandleVerifier [0x0055F145+155125]\nE       \tGetHandleVerifier [0x00565AED+182173]\nE       \tGetHandleVerifier [0x0054F948+91640]\nE       \tGetHandleVerifier [0x0054FAF0+92064]\nE       \tGetHandleVerifier [0x0053A5B0+4704]\nE       \tBaseThreadInitThunk [0x75EB7BA9+25]\nE       \tRtlInitializeExceptionChain [0x7727C2EB+107]\nE       \tRtlClearBits [0x7727C26F+191]\n\n..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:146: TimeoutException"}, "attachments": [{"name": "log", "source": "ba4977c1-444a-4f0c-9e33-2fa251d9279e-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "ee88065b-e690-4692-9dd9-f01f279eee6d-attachment.txt", "type": "text/plain"}], "start": 1744813262200, "stop": 1744813308886, "uuid": "576f242b-886f-4397-9608-ff9017819e52", "historyId": "fc7b2251192f1c8c226df9a8539342f9", "testCaseId": "fc7b2251192f1c8c226df9a8539342f9", "fullName": "test_create_invoice#test_create_invoice", "labels": [{"name": "suite", "value": "test_create_invoice"}, {"name": "host", "value": "LAPTOP-R01C5SG4"}, {"name": "thread", "value": "63448-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_create_invoice"}]}