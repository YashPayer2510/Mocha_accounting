{"name": "test_blank_username_validation", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x00CB7FD3+60707]\n\tGetHandleVerifier [0x00CB8014+60772]\n\t(No symbol) [0x00AE0683]\n\t(No symbol) [0x00B28660]\n\t(No symbol) [0x00B289FB]\n\t(No symbol) [0x00B71022]\n\t(No symbol) [0x00B4D094]\n\t(No symbol) [0x00B6E824]\n\t(No symbol) [0x00B4CE46]\n\t(No symbol) [0x00B1C5D3]\n\t(No symbol) [0x00B1D424]\n\tGetHandleVerifier [0x00EFBAB3+2435075]\n\tGetHandleVerifier [0x00EF7053+2416035]\n\tGetHandleVerifier [0x00F133FC+2531660]\n\tGetHandleVerifier [0x00CCF0A5+155125]\n\tGetHandleVerifier [0x00CD5A4D+182173]\n\tGetHandleVerifier [0x00CBF8A8+91640]\n\tGetHandleVerifier [0x00CBFA50+92064]\n\tGetHandleVerifier [0x00CAA510+4704]\n\tBaseThreadInitThunk [0x75EB7BA9+25]\n\tRtlInitializeExceptionChain [0x7727C2EB+107]\n\tRtlClearBits [0x7727C26F+191]", "trace": "setup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"75155f3da074a13fa3ca277e724a2493\")>\nlogin_test_data = {'expected_password_validation': 'Password is required', 'expected_username_validation': 'Email is required.', 'expect...lid_email_verification_msg': \"Please check your email address. If you don't have an account, you can create one.\", ...}\n\n    def test_blank_username_validation(setup, login_test_data):\n        driver = setup\n        login_page = LoginPage(driver)\n        #login_page.enter_password(valid_password[0])\n        login_page.click_username()\n>       login_page.click_loginbutton()\n\ntest_login.py:71: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\pages\\login_page.py:42: in click_loginbutton\n    self.actions.wait_for_element(self.login_button)\n..\\actions\\actions.py:68: in wait_for_element\n    WebDriverWait(self.driver, timeout).until(EC.visibility_of_element_located(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"75155f3da074a13fa3ca277e724a2493\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x00000270936B9800>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        ----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x00CB7FD3+60707]\nE       \tGetHandleVerifier [0x00CB8014+60772]\nE       \t(No symbol) [0x00AE0683]\nE       \t(No symbol) [0x00B28660]\nE       \t(No symbol) [0x00B289FB]\nE       \t(No symbol) [0x00B71022]\nE       \t(No symbol) [0x00B4D094]\nE       \t(No symbol) [0x00B6E824]\nE       \t(No symbol) [0x00B4CE46]\nE       \t(No symbol) [0x00B1C5D3]\nE       \t(No symbol) [0x00B1D424]\nE       \tGetHandleVerifier [0x00EFBAB3+2435075]\nE       \tGetHandleVerifier [0x00EF7053+2416035]\nE       \tGetHandleVerifier [0x00F133FC+2531660]\nE       \tGetHandleVerifier [0x00CCF0A5+155125]\nE       \tGetHandleVerifier [0x00CD5A4D+182173]\nE       \tGetHandleVerifier [0x00CBF8A8+91640]\nE       \tGetHandleVerifier [0x00CBFA50+92064]\nE       \tGetHandleVerifier [0x00CAA510+4704]\nE       \tBaseThreadInitThunk [0x75EB7BA9+25]\nE       \tRtlInitializeExceptionChain [0x7727C2EB+107]\nE       \tRtlClearBits [0x7727C26F+191]\n\n..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:146: TimeoutException"}, "attachments": [{"name": "log", "source": "fc295334-4cac-4834-9682-c414e0676087-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "1a5f3107-9d32-4fc2-974d-278c49dfa604-attachment.txt", "type": "text/plain"}], "start": 1745419629706, "stop": 1745419659884, "uuid": "c99fda6d-c207-4c43-b813-d4e5b75c5bb2", "historyId": "680dcc6ee33f3a3e87e84deb123b29c8", "testCaseId": "680dcc6ee33f3a3e87e84deb123b29c8", "fullName": "test_login#test_blank_username_validation", "labels": [{"name": "suite", "value": "test_login"}, {"name": "host", "value": "LAPTOP-R01C5SG4"}, {"name": "thread", "value": "93756-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_login"}]}