========== Linting Errors ==========
0
========== End of Linting ==========
============================================
Test Run Started: 2025-07-05 03:56:58
--------------------------------------------
============================= test session starts ==============================
platform linux -- Python 3.13.5, pytest-8.3.5, pluggy-1.6.0 -- /opt/hostedtoolcache/Python/3.13.5/x64/bin/python
cachedir: .pytest_cache
metadata: {'Python': '3.13.5', 'Platform': 'Linux-6.11.0-1015-azure-x86_64-with-glibc2.39', 'Packages': {'pytest': '8.3.5', 'pluggy': '1.6.0'}, 'Plugins': {'metadata': '3.1.1', 'rerunfailures': '15.1', 'html': '4.1.1', 'Faker': '37.4.0', 'xdist': '3.8.0'}, 'CI': 'true', 'JAVA_HOME': '/usr/lib/jvm/temurin-17-jdk-amd64'}
rootdir: /home/runner/work/Mocha_accounting/Mocha_accounting
plugins: metadata-3.1.1, rerunfailures-15.1, html-4.1.1, Faker-37.4.0, xdist-3.8.0
collecting ... collected 19 items

tests/test_login.py::test_valid_login[ranjeet.gupta@mochatechnologies.com-Ais@1234] FAILED [  5%]
tests/test_login.py::test_valid_login[samatakamble9@gmail.com-Samata@16] FAILED [ 10%]
tests/test_login.py::test_valid_login[shubhamdabir07@gmail.com-Shubham@1234] FAILED [ 15%]
tests/test_login.py::test_valid_login[hrishikesh.shinde1607@gmail.com-Hrishikesh@1234] FAILED [ 21%]
tests/test_login.py::test_invalid_email_login[username0] FAILED          [ 26%]
tests/test_login.py::test_invalid_email_login[username1] FAILED          [ 31%]
tests/test_login.py::test_invalid_email_login[username2] FAILED          [ 36%]
tests/test_login.py::test_invalid_email_login[username3] FAILED          [ 42%]
tests/test_login.py::test_invalid_password_login[ranjeet.gupta@mochatechnologies.com-Password@123] FAILED [ 47%]
tests/test_login.py::test_invalid_password_login[samatakamble9@gmail.com-Password@12] FAILED [ 52%]
tests/test_login.py::test_invalid_password_login[shubhamdabir07@gmail.com-Password] FAILED [ 57%]
tests/test_login.py::test_invalid_password_login[hrishikesh.shinde1607@gmail.com-payer@1234] FAILED [ 63%]
tests/test_login.py::test_blank_username_validation FAILED               [ 68%]
tests/test_login.py::test_blank_password_validation FAILED               [ 73%]
tests/test_login.py::test_invalid_email_validation[username0] FAILED     [ 78%]
tests/test_login.py::test_invalid_email_validation[username1] FAILED     [ 84%]
tests/test_login.py::test_invalid_email_validation[username2] FAILED     [ 89%]
tests/test_login.py::test_invalid_email_validation[username3] FAILED     [ 94%]
tests/test_login.py::test_invalid_email_validation[username4] FAILED     [100%]

=================================== FAILURES ===================================
________ test_valid_login[ranjeet.gupta@mochatechnologies.com-Ais@1234] ________

setup = <selenium.webdriver.chrome.webdriver.WebDriver (session="5ece762a778ab70184bf2bd323d7a573")>
login_test_data = {'expected_password_validation': 'Password is required', 'expected_username_validation': 'Email is required.', 'expect...ect_email_verification_msg': "Please check your email address. If you don't have an account, you can create one.", ...}
username = 'ranjeet.gupta@mochatechnologies.com', password = 'Ais@1234'

    @pytest.mark.parametrize("username, password", zip(valid_username, valid_password))
    def test_valid_login(setup, login_test_data, username, password):
       # expectedmessage = login_test_data['expectederrormsg']
        driver = setup
        login_page = LoginPage(driver)
        logger.info("Starting the test case for valid credentials")
>       login_page.enter_username(username)

tests/test_login.py:37: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pages/login_page.py:28: in enter_username
    self.actions.wait_for_element(self.login_username)
actions/actions.py:71: in wait_for_element
    WebDriverWait(self.driver, timeout).until(EC.visibility_of_element_located(locator))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <selenium.webdriver.support.wait.WebDriverWait (session="5ece762a778ab70184bf2bd323d7a573")>
method = <function visibility_of_element_located.<locals>._predicate at 0x7f231b6091c0>
message = ''

    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = "") -> T:
        """Wait until the method returns a value that is not False.
    
        Calls the method provided with the driver as an argument until the
        return value does not evaluate to ``False``.
    
        Parameters:
        ----------
        method: callable(WebDriver)
            - A callable object that takes a WebDriver instance as an argument.
    
        message: str
            - Optional message for :exc:`TimeoutException`
    
        Return:
        -------
        object: T
            - The result of the last call to `method`
    
        Raises:
        -------
        TimeoutException
            - If 'method' does not return a truthy value within the WebDriverWait
            object's timeout
    
        Example:
        --------
        >>> from selenium.webdriver.common.by import By
        >>> from selenium.webdriver.support.ui import WebDriverWait
        >>> from selenium.webdriver.support import expected_conditions as EC
    
        # Wait until an element is visible on the page
        >>> wait = WebDriverWait(driver, 10)
        >>> element = wait.until(EC.visibility_of_element_located((By.ID, "exampleId")))
        >>> print(element.text)
        """
        screen = None
        stacktrace = None
    
        end_time = time.monotonic() + self._timeout
        while True:
            try:
                value = method(self._driver)
                if value:
                    return value
            except self._ignored_exceptions as exc:
                screen = getattr(exc, "screen", None)
                stacktrace = getattr(exc, "stacktrace", None)
            if time.monotonic() > end_time:
                break
            time.sleep(self._poll)
>       raise TimeoutException(message, screen, stacktrace)
E       selenium.common.exceptions.TimeoutException: Message: 
E       Stacktrace:
E       #0 0x55db16a3345a <unknown>
E       #1 0x55db164d8760 <unknown>
E       #2 0x55db1652a127 <unknown>
E       #3 0x55db1652a321 <unknown>
E       #4 0x55db16578e94 <unknown>
E       #5 0x55db1654fe7d <unknown>
E       #6 0x55db1657630b <unknown>
E       #7 0x55db1654fc23 <unknown>
E       #8 0x55db1651c4a5 <unknown>
E       #9 0x55db1651d111 <unknown>
E       #10 0x55db169f7f1b <unknown>
E       #11 0x55db169fbe19 <unknown>
E       #12 0x55db169deac9 <unknown>
E       #13 0x55db169fc9c8 <unknown>
E       #14 0x55db169c334f <unknown>
E       #15 0x55db16a20a28 <unknown>
E       #16 0x55db16a20c06 <unknown>
E       #17 0x55db16a32336 <unknown>
E       #18 0x7f56ac89caa4 <unknown>
E       #19 0x7f56ac929c3c <unknown>

/opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/selenium/webdriver/support/wait.py:146: TimeoutException
---------------------------- Captured stderr setup -----------------------------
2025-07-05 03:57:00,827 - INFO - Test data loaded successfully.
2025-07-05 03:57:00,828 - INFO - Starting test with Chrome browser
2025-07-05 03:57:00,828 - INFO - ====== WebDriver manager ======
2025-07-05 03:57:05,197 - INFO - Get LATEST chromedriver version for google-chrome
2025-07-05 03:57:05,211 - INFO - Get LATEST chromedriver version for google-chrome
2025-07-05 03:57:05,223 - INFO - There is no [linux64] chromedriver "137.0.7151.119" for browser google-chrome "137.0.7151" in cache
2025-07-05 03:57:05,223 - INFO - Get LATEST chromedriver version for google-chrome
2025-07-05 03:57:05,265 - INFO - WebDriver version 137.0.7151.119 selected
2025-07-05 03:57:05,268 - INFO - Modern chrome version https://storage.googleapis.com/chrome-for-testing-public/137.0.7151.119/linux64/chromedriver-linux64.zip
2025-07-05 03:57:05,268 - INFO - About to download new driver from https://storage.googleapis.com/chrome-for-testing-public/137.0.7151.119/linux64/chromedriver-linux64.zip
2025-07-05 03:57:05,313 - INFO - Driver downloading response is 200
2025-07-05 03:57:05,372 - INFO - Get LATEST chromedriver version for google-chrome
2025-07-05 03:57:05,492 - INFO - Driver has been saved in cache [/home/runner/.wdm/drivers/chromedriver/linux64/137.0.7151.119]
2025-07-05 03:57:11,307 - INFO - Navigated to URL: https://app.mochaaccounting.com/login
------------------------------ Captured log setup ------------------------------
INFO     conftest:conftest.py:79 Test data loaded successfully.
INFO     conftest:conftest.py:90 Starting test with Chrome browser
INFO     WDM:logger.py:11 ====== WebDriver manager ======
INFO     WDM:logger.py:11 Get LATEST chromedriver version for google-chrome
INFO     WDM:logger.py:11 Get LATEST chromedriver version for google-chrome
INFO     WDM:logger.py:11 There is no [linux64] chromedriver "137.0.7151.119" for browser google-chrome "137.0.7151" in cache
INFO     WDM:logger.py:11 Get LATEST chromedriver version for google-chrome
INFO     WDM:logger.py:11 WebDriver version 137.0.7151.119 selected
INFO     WDM:logger.py:11 Modern chrome version https://storage.googleapis.com/chrome-for-testing-public/137.0.7151.119/linux64/chromedriver-linux64.zip
INFO     WDM:logger.py:11 About to download new driver from https://storage.googleapis.com/chrome-for-testing-public/137.0.7151.119/linux64/chromedriver-linux64.zip
INFO     WDM:logger.py:11 Driver downloading response is 200
INFO     WDM:logger.py:11 Get LATEST chromedriver version for google-chrome
INFO     WDM:logger.py:11 Driver has been saved in cache [/home/runner/.wdm/drivers/chromedriver/linux64/137.0.7151.119]
INFO     conftest:conftest.py:118 Navigated to URL: https://app.mochaaccounting.com/login
----------------------------- Captured stderr call -----------------------------
2025-07-05 03:57:11,307 - INFO - Starting the test case for valid credentials
------------------------------ Captured log call -------------------------------
INFO     tests.test_login:test_login.py:36 Starting the test case for valid credentials
--------------------------- Captured stderr teardown ---------------------------
2025-07-05 03:59:12,967 - INFO - Closing browser
---------------------------- Captured log teardown -----------------------------
INFO     conftest:conftest.py:132 Closing browser
_____________ test_valid_login[samatakamble9@gmail.com-Samata@16] ______________

setup = <selenium.webdriver.chrome.webdriver.WebDriver (session="326326be78b30571f4d6c11cfe828dc3")>
login_test_data = {'expected_password_validation': 'Password is required', 'expected_username_validation': 'Email is required.', 'expect...ect_email_verification_msg': "Please check your email address. If you don't have an account, you can create one.", ...}
username = 'samatakamble9@gmail.com', password = 'Samata@16'

    @pytest.mark.parametrize("username, password", zip(valid_username, valid_password))
    def test_valid_login(setup, login_test_data, username, password):
       # expectedmessage = login_test_data['expectederrormsg']
        driver = setup
        login_page = LoginPage(driver)
        logger.info("Starting the test case for valid credentials")
>       login_page.enter_username(username)

tests/test_login.py:37: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pages/login_page.py:28: in enter_username
    self.actions.wait_for_element(self.login_username)
actions/actions.py:71: in wait_for_element
    WebDriverWait(self.driver, timeout).until(EC.visibility_of_element_located(locator))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <selenium.webdriver.support.wait.WebDriverWait (session="326326be78b30571f4d6c11cfe828dc3")>
method = <function visibility_of_element_located.<locals>._predicate at 0x7f231b64d260>
message = ''

    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = "") -> T:
        """Wait until the method returns a value that is not False.
    
        Calls the method provided with the driver as an argument until the
        return value does not evaluate to ``False``.
    
        Parameters:
        ----------
        method: callable(WebDriver)
            - A callable object that takes a WebDriver instance as an argument.
    
        message: str
            - Optional message for :exc:`TimeoutException`
    
        Return:
        -------
        object: T
            - The result of the last call to `method`
    
        Raises:
        -------
        TimeoutException
            - If 'method' does not return a truthy value within the WebDriverWait
            object's timeout
    
        Example:
        --------
        >>> from selenium.webdriver.common.by import By
        >>> from selenium.webdriver.support.ui import WebDriverWait
        >>> from selenium.webdriver.support import expected_conditions as EC
    
        # Wait until an element is visible on the page
        >>> wait = WebDriverWait(driver, 10)
        >>> element = wait.until(EC.visibility_of_element_located((By.ID, "exampleId")))
        >>> print(element.text)
        """
        screen = None
        stacktrace = None
    
        end_time = time.monotonic() + self._timeout
        while True:
            try:
                value = method(self._driver)
                if value:
                    return value
            except self._ignored_exceptions as exc:
                screen = getattr(exc, "screen", None)
                stacktrace = getattr(exc, "stacktrace", None)
            if time.monotonic() > end_time:
                break
            time.sleep(self._poll)
>       raise TimeoutException(message, screen, stacktrace)
E       selenium.common.exceptions.TimeoutException: Message: 
E       Stacktrace:
E       #0 0x5638d33f445a <unknown>
E       #1 0x5638d2e99760 <unknown>
E       #2 0x5638d2eeb127 <unknown>
E       #3 0x5638d2eeb321 <unknown>
E       #4 0x5638d2f39e94 <unknown>
E       #5 0x5638d2f10e7d <unknown>
E       #6 0x5638d2f3730b <unknown>
E       #7 0x5638d2f10c23 <unknown>
E       #8 0x5638d2edd4a5 <unknown>
E       #9 0x5638d2ede111 <unknown>
E       #10 0x5638d33b8f1b <unknown>
E       #11 0x5638d33bce19 <unknown>
E       #12 0x5638d339fac9 <unknown>
E       #13 0x5638d33bd9c8 <unknown>
E       #14 0x5638d338434f <unknown>
E       #15 0x5638d33e1a28 <unknown>
E       #16 0x5638d33e1c06 <unknown>
E       #17 0x5638d33f3336 <unknown>
E       #18 0x7fd94ea9caa4 <unknown>
E       #19 0x7fd94eb29c3c <unknown>

/opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/selenium/webdriver/support/wait.py:146: TimeoutException
---------------------------- Captured stderr setup -----------------------------
2025-07-05 03:59:13,086 - INFO - Starting test with Chrome browser
2025-07-05 03:59:13,087 - INFO - ====== WebDriver manager ======
2025-07-05 03:59:13,195 - INFO - Get LATEST chromedriver version for google-chrome
2025-07-05 03:59:13,207 - INFO - Get LATEST chromedriver version for google-chrome
2025-07-05 03:59:13,231 - INFO - Driver [/home/runner/.wdm/drivers/chromedriver/linux64/137.0.7151.119/chromedriver-linux64/chromedriver] found in cache
2025-07-05 03:59:13,749 - INFO - Navigated to URL: https://app.mochaaccounting.com/login
------------------------------ Captured log setup ------------------------------
INFO     conftest:conftest.py:90 Starting test with Chrome browser
INFO     WDM:logger.py:11 ====== WebDriver manager ======
INFO     WDM:logger.py:11 Get LATEST chromedriver version for google-chrome
INFO     WDM:logger.py:11 Get LATEST chromedriver version for google-chrome
INFO     WDM:logger.py:11 Driver [/home/runner/.wdm/drivers/chromedriver/linux64/137.0.7151.119/chromedriver-linux64/chromedriver] found in cache
INFO     conftest:conftest.py:118 Navigated to URL: https://app.mochaaccounting.com/login
----------------------------- Captured stderr call -----------------------------
2025-07-05 03:59:13,750 - INFO - Starting the test case for valid credentials
------------------------------ Captured log call -------------------------------
INFO     tests.test_login:test_login.py:36 Starting the test case for valid credentials
--------------------------- Captured stderr teardown ---------------------------
2025-07-05 04:01:15,396 - INFO - Closing browser
---------------------------- Captured log teardown -----------------------------
INFO     conftest:conftest.py:132 Closing browser
___________ test_valid_login[shubhamdabir07@gmail.com-Shubham@1234] ____________

setup = <selenium.webdriver.chrome.webdriver.WebDriver (session="a01f422fe12d8ef696061b2328eda803")>
login_test_data = {'expected_password_validation': 'Password is required', 'expected_username_validation': 'Email is required.', 'expect...ect_email_verification_msg': "Please check your email address. If you don't have an account, you can create one.", ...}
username = 'shubhamdabir07@gmail.com', password = 'Shubham@1234'

    @pytest.mark.parametrize("username, password", zip(valid_username, valid_password))
    def test_valid_login(setup, login_test_data, username, password):
       # expectedmessage = login_test_data['expectederrormsg']
        driver = setup
        login_page = LoginPage(driver)
        logger.info("Starting the test case for valid credentials")
>       login_page.enter_username(username)

tests/test_login.py:37: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pages/login_page.py:28: in enter_username
    self.actions.wait_for_element(self.login_username)
actions/actions.py:71: in wait_for_element
    WebDriverWait(self.driver, timeout).until(EC.visibility_of_element_located(locator))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <selenium.webdriver.support.wait.WebDriverWait (session="a01f422fe12d8ef696061b2328eda803")>
method = <function visibility_of_element_located.<locals>._predicate at 0x7f231c5e9e40>
message = ''

    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = "") -> T:
        """Wait until the method returns a value that is not False.
    
        Calls the method provided with the driver as an argument until the
        return value does not evaluate to ``False``.
    
        Parameters:
        ----------
        method: callable(WebDriver)
            - A callable object that takes a WebDriver instance as an argument.
    
        message: str
            - Optional message for :exc:`TimeoutException`
    
        Return:
        -------
        object: T
            - The result of the last call to `method`
    
        Raises:
        -------
        TimeoutException
            - If 'method' does not return a truthy value within the WebDriverWait
            object's timeout
    
        Example:
        --------
        >>> from selenium.webdriver.common.by import By
        >>> from selenium.webdriver.support.ui import WebDriverWait
        >>> from selenium.webdriver.support import expected_conditions as EC
    
        # Wait until an element is visible on the page
        >>> wait = WebDriverWait(driver, 10)
        >>> element = wait.until(EC.visibility_of_element_located((By.ID, "exampleId")))
        >>> print(element.text)
        """
        screen = None
        stacktrace = None
    
        end_time = time.monotonic() + self._timeout
        while True:
            try:
                value = method(self._driver)
                if value:
                    return value
            except self._ignored_exceptions as exc:
                screen = getattr(exc, "screen", None)
                stacktrace = getattr(exc, "stacktrace", None)
            if time.monotonic() > end_time:
                break
            time.sleep(self._poll)
>       raise TimeoutException(message, screen, stacktrace)
E       selenium.common.exceptions.TimeoutException: Message: 
E       Stacktrace:
E       #0 0x55d34448d45a <unknown>
E       #1 0x55d343f32760 <unknown>
E       #2 0x55d343f84127 <unknown>
E       #3 0x55d343f84321 <unknown>
E       #4 0x55d343fd2e94 <unknown>
E       #5 0x55d343fa9e7d <unknown>
E       #6 0x55d343fd030b <unknown>
E       #7 0x55d343fa9c23 <unknown>
E       #8 0x55d343f764a5 <unknown>
E       #9 0x55d343f77111 <unknown>
E       #10 0x55d344451f1b <unknown>
E       #11 0x55d344455e19 <unknown>
E       #12 0x55d344438ac9 <unknown>
E       #13 0x55d3444569c8 <unknown>
E       #14 0x55d34441d34f <unknown>
E       #15 0x55d34447aa28 <unknown>
E       #16 0x55d34447ac06 <unknown>
E       #17 0x55d34448c336 <unknown>
E       #18 0x7f4e3649caa4 <unknown>
E       #19 0x7f4e36529c3c <unknown>

/opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/selenium/webdriver/support/wait.py:146: TimeoutException
---------------------------- Captured stderr setup -----------------------------
2025-07-05 04:01:15,453 - INFO - Starting test with Chrome browser
2025-07-05 04:01:15,453 - INFO - ====== WebDriver manager ======
2025-07-05 04:01:15,561 - INFO - Get LATEST chromedriver version for google-chrome
2025-07-05 04:01:15,575 - INFO - Get LATEST chromedriver version for google-chrome
2025-07-05 04:01:15,587 - INFO - Driver [/home/runner/.wdm/drivers/chromedriver/linux64/137.0.7151.119/chromedriver-linux64/chromedriver] found in cache
2025-07-05 04:01:16,149 - INFO - Navigated to URL: https://app.mochaaccounting.com/login
------------------------------ Captured log setup ------------------------------
INFO     conftest:conftest.py:90 Starting test with Chrome browser
INFO     WDM:logger.py:11 ====== WebDriver manager ======
INFO     WDM:logger.py:11 Get LATEST chromedriver version for google-chrome
INFO     WDM:logger.py:11 Get LATEST chromedriver version for google-chrome
INFO     WDM:logger.py:11 Driver [/home/runner/.wdm/drivers/chromedriver/linux64/137.0.7151.119/chromedriver-linux64/chromedriver] found in cache
INFO     conftest:conftest.py:118 Navigated to URL: https://app.mochaaccounting.com/login
----------------------------- Captured stderr call -----------------------------
2025-07-05 04:01:16,149 - INFO - Starting the test case for valid credentials
------------------------------ Captured log call -------------------------------
INFO     tests.test_login:test_login.py:36 Starting the test case for valid credentials
--------------------------- Captured stderr teardown ---------------------------
2025-07-05 04:03:17,846 - INFO - Closing browser
---------------------------- Captured log teardown -----------------------------
INFO     conftest:conftest.py:132 Closing browser
______ test_valid_login[hrishikesh.shinde1607@gmail.com-Hrishikesh@1234] _______

setup = <selenium.webdriver.chrome.webdriver.WebDriver (session="0ef9122d08cf27c0accd5f04b51ecd65")>
login_test_data = {'expected_password_validation': 'Password is required', 'expected_username_validation': 'Email is required.', 'expect...ect_email_verification_msg': "Please check your email address. If you don't have an account, you can create one.", ...}
username = 'hrishikesh.shinde1607@gmail.com', password = 'Hrishikesh@1234'

    @pytest.mark.parametrize("username, password", zip(valid_username, valid_password))
    def test_valid_login(setup, login_test_data, username, password):
       # expectedmessage = login_test_data['expectederrormsg']
        driver = setup
        login_page = LoginPage(driver)
        logger.info("Starting the test case for valid credentials")
>       login_page.enter_username(username)

tests/test_login.py:37: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pages/login_page.py:28: in enter_username
    self.actions.wait_for_element(self.login_username)
actions/actions.py:71: in wait_for_element
    WebDriverWait(self.driver, timeout).until(EC.visibility_of_element_located(locator))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <selenium.webdriver.support.wait.WebDriverWait (session="0ef9122d08cf27c0accd5f04b51ecd65")>
method = <function visibility_of_element_located.<locals>._predicate at 0x7f231b64d1c0>
message = ''

    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = "") -> T:
        """Wait until the method returns a value that is not False.
    
        Calls the method provided with the driver as an argument until the
        return value does not evaluate to ``False``.
    
        Parameters:
        ----------
        method: callable(WebDriver)
            - A callable object that takes a WebDriver instance as an argument.
    
        message: str
            - Optional message for :exc:`TimeoutException`
    
        Return:
        -------
        object: T
            - The result of the last call to `method`
    
        Raises:
        -------
        TimeoutException
            - If 'method' does not return a truthy value within the WebDriverWait
            object's timeout
    
        Example:
        --------
        >>> from selenium.webdriver.common.by import By
        >>> from selenium.webdriver.support.ui import WebDriverWait
        >>> from selenium.webdriver.support import expected_conditions as EC
    
        # Wait until an element is visible on the page
        >>> wait = WebDriverWait(driver, 10)
        >>> element = wait.until(EC.visibility_of_element_located((By.ID, "exampleId")))
        >>> print(element.text)
        """
        screen = None
        stacktrace = None
    
        end_time = time.monotonic() + self._timeout
        while True:
            try:
                value = method(self._driver)
                if value:
                    return value
            except self._ignored_exceptions as exc:
                screen = getattr(exc, "screen", None)
                stacktrace = getattr(exc, "stacktrace", None)
            if time.monotonic() > end_time:
                break
            time.sleep(self._poll)
>       raise TimeoutException(message, screen, stacktrace)
E       selenium.common.exceptions.TimeoutException: Message: 
E       Stacktrace:
E       #0 0x562eaf04145a <unknown>
E       #1 0x562eaeae6760 <unknown>
E       #2 0x562eaeb38127 <unknown>
E       #3 0x562eaeb38321 <unknown>
E       #4 0x562eaeb86e94 <unknown>
E       #5 0x562eaeb5de7d <unknown>
E       #6 0x562eaeb8430b <unknown>
E       #7 0x562eaeb5dc23 <unknown>
E       #8 0x562eaeb2a4a5 <unknown>
E       #9 0x562eaeb2b111 <unknown>
E       #10 0x562eaf005f1b <unknown>
E       #11 0x562eaf009e19 <unknown>
E       #12 0x562eaefecac9 <unknown>
E       #13 0x562eaf00a9c8 <unknown>
E       #14 0x562eaefd134f <unknown>
E       #15 0x562eaf02ea28 <unknown>
E       #16 0x562eaf02ec06 <unknown>
E       #17 0x562eaf040336 <unknown>
E       #18 0x7f0f7189caa4 <unknown>
E       #19 0x7f0f71929c3c <unknown>

/opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/selenium/webdriver/support/wait.py:146: TimeoutException
---------------------------- Captured stderr setup -----------------------------
2025-07-05 04:03:17,903 - INFO - Starting test with Chrome browser
2025-07-05 04:03:17,903 - INFO - ====== WebDriver manager ======
2025-07-05 04:03:18,011 - INFO - Get LATEST chromedriver version for google-chrome
2025-07-05 04:03:18,024 - INFO - Get LATEST chromedriver version for google-chrome
2025-07-05 04:03:18,036 - INFO - Driver [/home/runner/.wdm/drivers/chromedriver/linux64/137.0.7151.119/chromedriver-linux64/chromedriver] found in cache
2025-07-05 04:03:18,591 - INFO - Navigated to URL: https://app.mochaaccounting.com/login
------------------------------ Captured log setup ------------------------------
INFO     conftest:conftest.py:90 Starting test with Chrome browser
INFO     WDM:logger.py:11 ====== WebDriver manager ======
INFO     WDM:logger.py:11 Get LATEST chromedriver version for google-chrome
INFO     WDM:logger.py:11 Get LATEST chromedriver version for google-chrome
INFO     WDM:logger.py:11 Driver [/home/runner/.wdm/drivers/chromedriver/linux64/137.0.7151.119/chromedriver-linux64/chromedriver] found in cache
INFO     conftest:conftest.py:118 Navigated to URL: https://app.mochaaccounting.com/login
----------------------------- Captured stderr call -----------------------------
2025-07-05 04:03:18,592 - INFO - Starting the test case for valid credentials
------------------------------ Captured log call -------------------------------
INFO     tests.test_login:test_login.py:36 Starting the test case for valid credentials
--------------------------- Captured stderr teardown ---------------------------
2025-07-05 04:05:20,247 - INFO - Closing browser
---------------------------- Captured log teardown -----------------------------
INFO     conftest:conftest.py:132 Closing browser
_____________________ test_invalid_email_login[username0] ______________________

setup = <selenium.webdriver.chrome.webdriver.WebDriver (session="66e3fa09bdd06a58a3e566a699be7c76")>
login_test_data = {'expected_password_validation': 'Password is required', 'expected_username_validation': 'Email is required.', 'expect...ect_email_verification_msg': "Please check your email address. If you don't have an account, you can create one.", ...}
username = ('yash10@gmail.com',)

    @pytest.mark.parametrize("username", zip(invalid_username))
    def test_invalid_email_login(setup, login_test_data,username):
        driver= setup
        login_page = LoginPage(driver)
>       login_page.enter_username(username)

tests/test_login.py:51: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pages/login_page.py:28: in enter_username
    self.actions.wait_for_element(self.login_username)
actions/actions.py:71: in wait_for_element
    WebDriverWait(self.driver, timeout).until(EC.visibility_of_element_located(locator))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <selenium.webdriver.support.wait.WebDriverWait (session="66e3fa09bdd06a58a3e566a699be7c76")>
method = <function visibility_of_element_located.<locals>._predicate at 0x7f231b64cfe0>
message = ''

    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = "") -> T:
        """Wait until the method returns a value that is not False.
    
        Calls the method provided with the driver as an argument until the
        return value does not evaluate to ``False``.
    
        Parameters:
        ----------
        method: callable(WebDriver)
            - A callable object that takes a WebDriver instance as an argument.
    
        message: str
            - Optional message for :exc:`TimeoutException`
    
        Return:
        -------
        object: T
            - The result of the last call to `method`
    
        Raises:
        -------
        TimeoutException
            - If 'method' does not return a truthy value within the WebDriverWait
            object's timeout
    
        Example:
        --------
        >>> from selenium.webdriver.common.by import By
        >>> from selenium.webdriver.support.ui import WebDriverWait
        >>> from selenium.webdriver.support import expected_conditions as EC
    
        # Wait until an element is visible on the page
        >>> wait = WebDriverWait(driver, 10)
        >>> element = wait.until(EC.visibility_of_element_located((By.ID, "exampleId")))
        >>> print(element.text)
        """
        screen = None
        stacktrace = None
    
        end_time = time.monotonic() + self._timeout
        while True:
            try:
                value = method(self._driver)
                if value:
                    return value
            except self._ignored_exceptions as exc:
                screen = getattr(exc, "screen", None)
                stacktrace = getattr(exc, "stacktrace", None)
            if time.monotonic() > end_time:
                break
            time.sleep(self._poll)
>       raise TimeoutException(message, screen, stacktrace)
E       selenium.common.exceptions.TimeoutException: Message: 
E       Stacktrace:
E       #0 0x56189472345a <unknown>
E       #1 0x5618941c8760 <unknown>
E       #2 0x56189421a127 <unknown>
E       #3 0x56189421a321 <unknown>
E       #4 0x561894268e94 <unknown>
E       #5 0x56189423fe7d <unknown>
E       #6 0x56189426630b <unknown>
E       #7 0x56189423fc23 <unknown>
E       #8 0x56189420c4a5 <unknown>
E       #9 0x56189420d111 <unknown>
E       #10 0x5618946e7f1b <unknown>
E       #11 0x5618946ebe19 <unknown>
E       #12 0x5618946ceac9 <unknown>
E       #13 0x5618946ec9c8 <unknown>
E       #14 0x5618946b334f <unknown>
E       #15 0x561894710a28 <unknown>
E       #16 0x561894710c06 <unknown>
E       #17 0x561894722336 <unknown>
E       #18 0x7ff8dd09caa4 <unknown>
E       #19 0x7ff8dd129c3c <unknown>

/opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/selenium/webdriver/support/wait.py:146: TimeoutException
---------------------------- Captured stderr setup -----------------------------
2025-07-05 04:05:20,311 - INFO - Starting test with Chrome browser
2025-07-05 04:05:20,311 - INFO - ====== WebDriver manager ======
2025-07-05 04:05:20,420 - INFO - Get LATEST chromedriver version for google-chrome
2025-07-05 04:05:20,433 - INFO - Get LATEST chromedriver version for google-chrome
2025-07-05 04:05:20,444 - INFO - Driver [/home/runner/.wdm/drivers/chromedriver/linux64/137.0.7151.119/chromedriver-linux64/chromedriver] found in cache
2025-07-05 04:05:21,037 - INFO - Navigated to URL: https://app.mochaaccounting.com/login
------------------------------ Captured log setup ------------------------------
INFO     conftest:conftest.py:90 Starting test with Chrome browser
INFO     WDM:logger.py:11 ====== WebDriver manager ======
INFO     WDM:logger.py:11 Get LATEST chromedriver version for google-chrome
INFO     WDM:logger.py:11 Get LATEST chromedriver version for google-chrome
INFO     WDM:logger.py:11 Driver [/home/runner/.wdm/drivers/chromedriver/linux64/137.0.7151.119/chromedriver-linux64/chromedriver] found in cache
INFO     conftest:conftest.py:118 Navigated to URL: https://app.mochaaccounting.com/login
--------------------------- Captured stderr teardown ---------------------------
2025-07-05 04:07:22,633 - INFO - Closing browser
---------------------------- Captured log teardown -----------------------------
INFO     conftest:conftest.py:132 Closing browser
_____________________ test_invalid_email_login[username1] ______________________

setup = <selenium.webdriver.chrome.webdriver.WebDriver (session="f213ff63547824cfbbec024656dd829c")>
login_test_data = {'expected_password_validation': 'Password is required', 'expected_username_validation': 'Email is required.', 'expect...ect_email_verification_msg': "Please check your email address. If you don't have an account, you can create one.", ...}
username = ('payeryash@1gmail.com',)

    @pytest.mark.parametrize("username", zip(invalid_username))
    def test_invalid_email_login(setup, login_test_data,username):
        driver= setup
        login_page = LoginPage(driver)
>       login_page.enter_username(username)

tests/test_login.py:51: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pages/login_page.py:28: in enter_username
    self.actions.wait_for_element(self.login_username)
actions/actions.py:71: in wait_for_element
    WebDriverWait(self.driver, timeout).until(EC.visibility_of_element_located(locator))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <selenium.webdriver.support.wait.WebDriverWait (session="f213ff63547824cfbbec024656dd829c")>
method = <function visibility_of_element_located.<locals>._predicate at 0x7f231b64d6c0>
message = ''

    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = "") -> T:
        """Wait until the method returns a value that is not False.
    
        Calls the method provided with the driver as an argument until the
        return value does not evaluate to ``False``.
    
        Parameters:
        ----------
        method: callable(WebDriver)
            - A callable object that takes a WebDriver instance as an argument.
    
        message: str
            - Optional message for :exc:`TimeoutException`
    
        Return:
        -------
        object: T
            - The result of the last call to `method`
    
        Raises:
        -------
        TimeoutException
            - If 'method' does not return a truthy value within the WebDriverWait
            object's timeout
    
        Example:
        --------
        >>> from selenium.webdriver.common.by import By
        >>> from selenium.webdriver.support.ui import WebDriverWait
        >>> from selenium.webdriver.support import expected_conditions as EC
    
        # Wait until an element is visible on the page
        >>> wait = WebDriverWait(driver, 10)
        >>> element = wait.until(EC.visibility_of_element_located((By.ID, "exampleId")))
        >>> print(element.text)
        """
        screen = None
        stacktrace = None
    
        end_time = time.monotonic() + self._timeout
        while True:
            try:
                value = method(self._driver)
                if value:
                    return value
            except self._ignored_exceptions as exc:
                screen = getattr(exc, "screen", None)
                stacktrace = getattr(exc, "stacktrace", None)
            if time.monotonic() > end_time:
                break
            time.sleep(self._poll)
>       raise TimeoutException(message, screen, stacktrace)
E       selenium.common.exceptions.TimeoutException: Message: 
E       Stacktrace:
E       #0 0x56003aeaf45a <unknown>
E       #1 0x56003a954760 <unknown>
E       #2 0x56003a9a6127 <unknown>
E       #3 0x56003a9a6321 <unknown>
E       #4 0x56003a9f4e94 <unknown>
E       #5 0x56003a9cbe7d <unknown>
E       #6 0x56003a9f230b <unknown>
E       #7 0x56003a9cbc23 <unknown>
E       #8 0x56003a9984a5 <unknown>
E       #9 0x56003a999111 <unknown>
E       #10 0x56003ae73f1b <unknown>
E       #11 0x56003ae77e19 <unknown>
E       #12 0x56003ae5aac9 <unknown>
E       #13 0x56003ae789c8 <unknown>
E       #14 0x56003ae3f34f <unknown>
E       #15 0x56003ae9ca28 <unknown>
E       #16 0x56003ae9cc06 <unknown>
E       #17 0x56003aeae336 <unknown>
E       #18 0x7fac5e69caa4 <unknown>
E       #19 0x7fac5e729c3c <unknown>

/opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/selenium/webdriver/support/wait.py:146: TimeoutException
---------------------------- Captured stderr setup -----------------------------
2025-07-05 04:07:22,689 - INFO - Starting test with Chrome browser
2025-07-05 04:07:22,689 - INFO - ====== WebDriver manager ======
2025-07-05 04:07:22,797 - INFO - Get LATEST chromedriver version for google-chrome
2025-07-05 04:07:22,811 - INFO - Get LATEST chromedriver version for google-chrome
2025-07-05 04:07:22,822 - INFO - Driver [/home/runner/.wdm/drivers/chromedriver/linux64/137.0.7151.119/chromedriver-linux64/chromedriver] found in cache
2025-07-05 04:07:23,375 - INFO - Navigated to URL: https://app.mochaaccounting.com/login
------------------------------ Captured log setup ------------------------------
INFO     conftest:conftest.py:90 Starting test with Chrome browser
INFO     WDM:logger.py:11 ====== WebDriver manager ======
INFO     WDM:logger.py:11 Get LATEST chromedriver version for google-chrome
INFO     WDM:logger.py:11 Get LATEST chromedriver version for google-chrome
INFO     WDM:logger.py:11 Driver [/home/runner/.wdm/drivers/chromedriver/linux64/137.0.7151.119/chromedriver-linux64/chromedriver] found in cache
INFO     conftest:conftest.py:118 Navigated to URL: https://app.mochaaccounting.com/login
--------------------------- Captured stderr teardown ---------------------------
2025-07-05 04:09:25,062 - INFO - Closing browser
---------------------------- Captured log teardown -----------------------------
INFO     conftest:conftest.py:132 Closing browser
_____________________ test_invalid_email_login[username2] ______________________

setup = <selenium.webdriver.chrome.webdriver.WebDriver (session="4fb8f66d7264e1600f3da39249687a48")>
login_test_data = {'expected_password_validation': 'Password is required', 'expected_username_validation': 'Email is required.', 'expect...ect_email_verification_msg': "Please check your email address. If you don't have an account, you can create one.", ...}
username = ('payerash10@gmail.com',)

    @pytest.mark.parametrize("username", zip(invalid_username))
    def test_invalid_email_login(setup, login_test_data,username):
        driver= setup
        login_page = LoginPage(driver)
>       login_page.enter_username(username)

tests/test_login.py:51: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pages/login_page.py:28: in enter_username
    self.actions.wait_for_element(self.login_username)
actions/actions.py:71: in wait_for_element
    WebDriverWait(self.driver, timeout).until(EC.visibility_of_element_located(locator))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <selenium.webdriver.support.wait.WebDriverWait (session="4fb8f66d7264e1600f3da39249687a48")>
method = <function visibility_of_element_located.<locals>._predicate at 0x7f231b64dee0>
message = ''

    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = "") -> T:
        """Wait until the method returns a value that is not False.
    
        Calls the method provided with the driver as an argument until the
        return value does not evaluate to ``False``.
    
        Parameters:
        ----------
        method: callable(WebDriver)
            - A callable object that takes a WebDriver instance as an argument.
    
        message: str
            - Optional message for :exc:`TimeoutException`
    
        Return:
        -------
        object: T
            - The result of the last call to `method`
    
        Raises:
        -------
        TimeoutException
            - If 'method' does not return a truthy value within the WebDriverWait
            object's timeout
    
        Example:
        --------
        >>> from selenium.webdriver.common.by import By
        >>> from selenium.webdriver.support.ui import WebDriverWait
        >>> from selenium.webdriver.support import expected_conditions as EC
    
        # Wait until an element is visible on the page
        >>> wait = WebDriverWait(driver, 10)
        >>> element = wait.until(EC.visibility_of_element_located((By.ID, "exampleId")))
        >>> print(element.text)
        """
        screen = None
        stacktrace = None
    
        end_time = time.monotonic() + self._timeout
        while True:
            try:
                value = method(self._driver)
                if value:
                    return value
            except self._ignored_exceptions as exc:
                screen = getattr(exc, "screen", None)
                stacktrace = getattr(exc, "stacktrace", None)
            if time.monotonic() > end_time:
                break
            time.sleep(self._poll)
>       raise TimeoutException(message, screen, stacktrace)
E       selenium.common.exceptions.TimeoutException: Message: 
E       Stacktrace:
E       #0 0x559a6675d45a <unknown>
E       #1 0x559a66202760 <unknown>
E       #2 0x559a66254127 <unknown>
E       #3 0x559a66254321 <unknown>
E       #4 0x559a662a2e94 <unknown>
E       #5 0x559a66279e7d <unknown>
E       #6 0x559a662a030b <unknown>
E       #7 0x559a66279c23 <unknown>
E       #8 0x559a662464a5 <unknown>
E       #9 0x559a66247111 <unknown>
E       #10 0x559a66721f1b <unknown>
E       #11 0x559a66725e19 <unknown>
E       #12 0x559a66708ac9 <unknown>
E       #13 0x559a667269c8 <unknown>
E       #14 0x559a666ed34f <unknown>
E       #15 0x559a6674aa28 <unknown>
E       #16 0x559a6674ac06 <unknown>
E       #17 0x559a6675c336 <unknown>
E       #18 0x7f672ec9caa4 <unknown>
E       #19 0x7f672ed29c3c <unknown>

/opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/selenium/webdriver/support/wait.py:146: TimeoutException
---------------------------- Captured stderr setup -----------------------------
2025-07-05 04:09:25,126 - INFO - Starting test with Chrome browser
2025-07-05 04:09:25,127 - INFO - ====== WebDriver manager ======
2025-07-05 04:09:25,234 - INFO - Get LATEST chromedriver version for google-chrome
2025-07-05 04:09:25,246 - INFO - Get LATEST chromedriver version for google-chrome
2025-07-05 04:09:25,257 - INFO - Driver [/home/runner/.wdm/drivers/chromedriver/linux64/137.0.7151.119/chromedriver-linux64/chromedriver] found in cache
2025-07-05 04:09:25,804 - INFO - Navigated to URL: https://app.mochaaccounting.com/login
------------------------------ Captured log setup ------------------------------
INFO     conftest:conftest.py:90 Starting test with Chrome browser
INFO     WDM:logger.py:11 ====== WebDriver manager ======
INFO     WDM:logger.py:11 Get LATEST chromedriver version for google-chrome
INFO     WDM:logger.py:11 Get LATEST chromedriver version for google-chrome
INFO     WDM:logger.py:11 Driver [/home/runner/.wdm/drivers/chromedriver/linux64/137.0.7151.119/chromedriver-linux64/chromedriver] found in cache
INFO     conftest:conftest.py:118 Navigated to URL: https://app.mochaaccounting.com/login
--------------------------- Captured stderr teardown ---------------------------
2025-07-05 04:11:27,444 - INFO - Closing browser
---------------------------- Captured log teardown -----------------------------
INFO     conftest:conftest.py:132 Closing browser
_____________________ test_invalid_email_login[username3] ______________________

setup = <selenium.webdriver.chrome.webdriver.WebDriver (session="b48bf1f4a0a783f5f748eeabaf23ffe0")>
login_test_data = {'expected_password_validation': 'Password is required', 'expected_username_validation': 'Email is required.', 'expect...ect_email_verification_msg': "Please check your email address. If you don't have an account, you can create one.", ...}
username = ('payer@gmail.com',)

    @pytest.mark.parametrize("username", zip(invalid_username))
    def test_invalid_email_login(setup, login_test_data,username):
        driver= setup
        login_page = LoginPage(driver)
>       login_page.enter_username(username)

tests/test_login.py:51: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pages/login_page.py:28: in enter_username
    self.actions.wait_for_element(self.login_username)
actions/actions.py:71: in wait_for_element
    WebDriverWait(self.driver, timeout).until(EC.visibility_of_element_located(locator))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <selenium.webdriver.support.wait.WebDriverWait (session="b48bf1f4a0a783f5f748eeabaf23ffe0")>
method = <function visibility_of_element_located.<locals>._predicate at 0x7f231b64e200>
message = ''

    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = "") -> T:
        """Wait until the method returns a value that is not False.
    
        Calls the method provided with the driver as an argument until the
        return value does not evaluate to ``False``.
    
        Parameters:
        ----------
        method: callable(WebDriver)
            - A callable object that takes a WebDriver instance as an argument.
    
        message: str
            - Optional message for :exc:`TimeoutException`
    
        Return:
        -------
        object: T
            - The result of the last call to `method`
    
        Raises:
        -------
        TimeoutException
            - If 'method' does not return a truthy value within the WebDriverWait
            object's timeout
    
        Example:
        --------
        >>> from selenium.webdriver.common.by import By
        >>> from selenium.webdriver.support.ui import WebDriverWait
        >>> from selenium.webdriver.support import expected_conditions as EC
    
        # Wait until an element is visible on the page
        >>> wait = WebDriverWait(driver, 10)
        >>> element = wait.until(EC.visibility_of_element_located((By.ID, "exampleId")))
        >>> print(element.text)
        """
        screen = None
        stacktrace = None
    
        end_time = time.monotonic() + self._timeout
        while True:
            try:
                value = method(self._driver)
                if value:
                    return value
            except self._ignored_exceptions as exc:
                screen = getattr(exc, "screen", None)
                stacktrace = getattr(exc, "stacktrace", None)
            if time.monotonic() > end_time:
                break
            time.sleep(self._poll)
>       raise TimeoutException(message, screen, stacktrace)
E       selenium.common.exceptions.TimeoutException: Message: 
E       Stacktrace:
E       #0 0x55ad17c1c45a <unknown>
E       #1 0x55ad176c1760 <unknown>
E       #2 0x55ad17713127 <unknown>
E       #3 0x55ad17713321 <unknown>
E       #4 0x55ad17761e94 <unknown>
E       #5 0x55ad17738e7d <unknown>
E       #6 0x55ad1775f30b <unknown>
E       #7 0x55ad17738c23 <unknown>
E       #8 0x55ad177054a5 <unknown>
E       #9 0x55ad17706111 <unknown>
E       #10 0x55ad17be0f1b <unknown>
E       #11 0x55ad17be4e19 <unknown>
E       #12 0x55ad17bc7ac9 <unknown>
E       #13 0x55ad17be59c8 <unknown>
E       #14 0x55ad17bac34f <unknown>
E       #15 0x55ad17c09a28 <unknown>
E       #16 0x55ad17c09c06 <unknown>
E       #17 0x55ad17c1b336 <unknown>
E       #18 0x7f95f2c9caa4 <unknown>
E       #19 0x7f95f2d29c3c <unknown>

/opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/selenium/webdriver/support/wait.py:146: TimeoutException
---------------------------- Captured stderr setup -----------------------------
2025-07-05 04:11:27,501 - INFO - Starting test with Chrome browser
2025-07-05 04:11:27,502 - INFO - ====== WebDriver manager ======
2025-07-05 04:11:27,611 - INFO - Get LATEST chromedriver version for google-chrome
2025-07-05 04:11:27,624 - INFO - Get LATEST chromedriver version for google-chrome
2025-07-05 04:11:27,635 - INFO - Driver [/home/runner/.wdm/drivers/chromedriver/linux64/137.0.7151.119/chromedriver-linux64/chromedriver] found in cache
2025-07-05 04:11:28,179 - INFO - Navigated to URL: https://app.mochaaccounting.com/login
------------------------------ Captured log setup ------------------------------
INFO     conftest:conftest.py:90 Starting test with Chrome browser
INFO     WDM:logger.py:11 ====== WebDriver manager ======
INFO     WDM:logger.py:11 Get LATEST chromedriver version for google-chrome
INFO     WDM:logger.py:11 Get LATEST chromedriver version for google-chrome
INFO     WDM:logger.py:11 Driver [/home/runner/.wdm/drivers/chromedriver/linux64/137.0.7151.119/chromedriver-linux64/chromedriver] found in cache
INFO     conftest:conftest.py:118 Navigated to URL: https://app.mochaaccounting.com/login
--------------------------- Captured stderr teardown ---------------------------
2025-07-05 04:13:29,847 - INFO - Closing browser
---------------------------- Captured log teardown -----------------------------
INFO     conftest:conftest.py:132 Closing browser
_ test_invalid_password_login[ranjeet.gupta@mochatechnologies.com-Password@123] _

setup = <selenium.webdriver.chrome.webdriver.WebDriver (session="920ff34808f126c64b64006a332d3945")>
login_test_data = {'expected_password_validation': 'Password is required', 'expected_username_validation': 'Email is required.', 'expect...ect_email_verification_msg': "Please check your email address. If you don't have an account, you can create one.", ...}
username = 'ranjeet.gupta@mochatechnologies.com', password = 'Password@123'

    @pytest.mark.parametrize("username, password", zip(valid_username, invalid_password))
    def test_invalid_password_login(setup, login_test_data,username, password ):
        driver = setup
        login_page = LoginPage(driver)
>       login_page.enter_username(username)

tests/test_login.py:60: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pages/login_page.py:28: in enter_username
    self.actions.wait_for_element(self.login_username)
actions/actions.py:71: in wait_for_element
    WebDriverWait(self.driver, timeout).until(EC.visibility_of_element_located(locator))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <selenium.webdriver.support.wait.WebDriverWait (session="920ff34808f126c64b64006a332d3945")>
method = <function visibility_of_element_located.<locals>._predicate at 0x7f231b64e340>
message = ''

    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = "") -> T:
        """Wait until the method returns a value that is not False.
    
        Calls the method provided with the driver as an argument until the
        return value does not evaluate to ``False``.
    
        Parameters:
        ----------
        method: callable(WebDriver)
            - A callable object that takes a WebDriver instance as an argument.
    
        message: str
            - Optional message for :exc:`TimeoutException`
    
        Return:
        -------
        object: T
            - The result of the last call to `method`
    
        Raises:
        -------
        TimeoutException
            - If 'method' does not return a truthy value within the WebDriverWait
            object's timeout
    
        Example:
        --------
        >>> from selenium.webdriver.common.by import By
        >>> from selenium.webdriver.support.ui import WebDriverWait
        >>> from selenium.webdriver.support import expected_conditions as EC
    
        # Wait until an element is visible on the page
        >>> wait = WebDriverWait(driver, 10)
        >>> element = wait.until(EC.visibility_of_element_located((By.ID, "exampleId")))
        >>> print(element.text)
        """
        screen = None
        stacktrace = None
    
        end_time = time.monotonic() + self._timeout
        while True:
            try:
                value = method(self._driver)
                if value:
                    return value
            except self._ignored_exceptions as exc:
                screen = getattr(exc, "screen", None)
                stacktrace = getattr(exc, "stacktrace", None)
            if time.monotonic() > end_time:
                break
            time.sleep(self._poll)
>       raise TimeoutException(message, screen, stacktrace)
E       selenium.common.exceptions.TimeoutException: Message: 
E       Stacktrace:
E       #0 0x55946b2bd45a <unknown>
E       #1 0x55946ad62760 <unknown>
E       #2 0x55946adb4127 <unknown>
E       #3 0x55946adb4321 <unknown>
E       #4 0x55946ae02e94 <unknown>
E       #5 0x55946add9e7d <unknown>
E       #6 0x55946ae0030b <unknown>
E       #7 0x55946add9c23 <unknown>
E       #8 0x55946ada64a5 <unknown>
E       #9 0x55946ada7111 <unknown>
E       #10 0x55946b281f1b <unknown>
E       #11 0x55946b285e19 <unknown>
E       #12 0x55946b268ac9 <unknown>
E       #13 0x55946b2869c8 <unknown>
E       #14 0x55946b24d34f <unknown>
E       #15 0x55946b2aaa28 <unknown>
E       #16 0x55946b2aac06 <unknown>
E       #17 0x55946b2bc336 <unknown>
E       #18 0x7f859609caa4 <unknown>
E       #19 0x7f8596129c3c <unknown>

/opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/selenium/webdriver/support/wait.py:146: TimeoutException
---------------------------- Captured stderr setup -----------------------------
2025-07-05 04:13:30,903 - INFO - Starting test with Chrome browser
2025-07-05 04:13:30,904 - INFO - ====== WebDriver manager ======
2025-07-05 04:13:31,013 - INFO - Get LATEST chromedriver version for google-chrome
2025-07-05 04:13:31,027 - INFO - Get LATEST chromedriver version for google-chrome
2025-07-05 04:13:31,041 - INFO - Driver [/home/runner/.wdm/drivers/chromedriver/linux64/137.0.7151.119/chromedriver-linux64/chromedriver] found in cache
2025-07-05 04:13:31,566 - INFO - Navigated to URL: https://app.mochaaccounting.com/login
------------------------------ Captured log setup ------------------------------
INFO     conftest:conftest.py:90 Starting test with Chrome browser
INFO     WDM:logger.py:11 ====== WebDriver manager ======
INFO     WDM:logger.py:11 Get LATEST chromedriver version for google-chrome
INFO     WDM:logger.py:11 Get LATEST chromedriver version for google-chrome
INFO     WDM:logger.py:11 Driver [/home/runner/.wdm/drivers/chromedriver/linux64/137.0.7151.119/chromedriver-linux64/chromedriver] found in cache
INFO     conftest:conftest.py:118 Navigated to URL: https://app.mochaaccounting.com/login
--------------------------- Captured stderr teardown ---------------------------
2025-07-05 04:15:33,245 - INFO - Closing browser
---------------------------- Captured log teardown -----------------------------
INFO     conftest:conftest.py:132 Closing browser
_______ test_invalid_password_login[samatakamble9@gmail.com-Password@12] _______

setup = <selenium.webdriver.chrome.webdriver.WebDriver (session="86f299aaa8dde631412588a28cdf72e0")>
login_test_data = {'expected_password_validation': 'Password is required', 'expected_username_validation': 'Email is required.', 'expect...ect_email_verification_msg': "Please check your email address. If you don't have an account, you can create one.", ...}
username = 'samatakamble9@gmail.com', password = 'Password@12'

    @pytest.mark.parametrize("username, password", zip(valid_username, invalid_password))
    def test_invalid_password_login(setup, login_test_data,username, password ):
        driver = setup
        login_page = LoginPage(driver)
>       login_page.enter_username(username)

tests/test_login.py:60: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pages/login_page.py:28: in enter_username
    self.actions.wait_for_element(self.login_username)
actions/actions.py:71: in wait_for_element
    WebDriverWait(self.driver, timeout).until(EC.visibility_of_element_located(locator))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <selenium.webdriver.support.wait.WebDriverWait (session="86f299aaa8dde631412588a28cdf72e0")>
method = <function visibility_of_element_located.<locals>._predicate at 0x7f231b64e160>
message = ''

    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = "") -> T:
        """Wait until the method returns a value that is not False.
    
        Calls the method provided with the driver as an argument until the
        return value does not evaluate to ``False``.
    
        Parameters:
        ----------
        method: callable(WebDriver)
            - A callable object that takes a WebDriver instance as an argument.
    
        message: str
            - Optional message for :exc:`TimeoutException`
    
        Return:
        -------
        object: T
            - The result of the last call to `method`
    
        Raises:
        -------
        TimeoutException
            - If 'method' does not return a truthy value within the WebDriverWait
            object's timeout
    
        Example:
        --------
        >>> from selenium.webdriver.common.by import By
        >>> from selenium.webdriver.support.ui import WebDriverWait
        >>> from selenium.webdriver.support import expected_conditions as EC
    
        # Wait until an element is visible on the page
        >>> wait = WebDriverWait(driver, 10)
        >>> element = wait.until(EC.visibility_of_element_located((By.ID, "exampleId")))
        >>> print(element.text)
        """
        screen = None
        stacktrace = None
    
        end_time = time.monotonic() + self._timeout
        while True:
            try:
                value = method(self._driver)
                if value:
                    return value
            except self._ignored_exceptions as exc:
                screen = getattr(exc, "screen", None)
                stacktrace = getattr(exc, "stacktrace", None)
            if time.monotonic() > end_time:
                break
            time.sleep(self._poll)
>       raise TimeoutException(message, screen, stacktrace)
E       selenium.common.exceptions.TimeoutException: Message: 
E       Stacktrace:
E       #0 0x5585e86bc45a <unknown>
E       #1 0x5585e8161760 <unknown>
E       #2 0x5585e81b3127 <unknown>
E       #3 0x5585e81b3321 <unknown>
E       #4 0x5585e8201e94 <unknown>
E       #5 0x5585e81d8e7d <unknown>
E       #6 0x5585e81ff30b <unknown>
E       #7 0x5585e81d8c23 <unknown>
E       #8 0x5585e81a54a5 <unknown>
E       #9 0x5585e81a6111 <unknown>
E       #10 0x5585e8680f1b <unknown>
E       #11 0x5585e8684e19 <unknown>
E       #12 0x5585e8667ac9 <unknown>
E       #13 0x5585e86859c8 <unknown>
E       #14 0x5585e864c34f <unknown>
E       #15 0x5585e86a9a28 <unknown>
E       #16 0x5585e86a9c06 <unknown>
E       #17 0x5585e86bb336 <unknown>
E       #18 0x7f36aa09caa4 <unknown>
E       #19 0x7f36aa129c3c <unknown>

/opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/selenium/webdriver/support/wait.py:146: TimeoutException
---------------------------- Captured stderr setup -----------------------------
2025-07-05 04:15:34,300 - INFO - Starting test with Chrome browser
2025-07-05 04:15:34,301 - INFO - ====== WebDriver manager ======
2025-07-05 04:15:34,408 - INFO - Get LATEST chromedriver version for google-chrome
2025-07-05 04:15:34,427 - INFO - Get LATEST chromedriver version for google-chrome
2025-07-05 04:15:34,439 - INFO - Driver [/home/runner/.wdm/drivers/chromedriver/linux64/137.0.7151.119/chromedriver-linux64/chromedriver] found in cache
2025-07-05 04:15:34,994 - INFO - Navigated to URL: https://app.mochaaccounting.com/login
------------------------------ Captured log setup ------------------------------
INFO     conftest:conftest.py:90 Starting test with Chrome browser
INFO     WDM:logger.py:11 ====== WebDriver manager ======
INFO     WDM:logger.py:11 Get LATEST chromedriver version for google-chrome
INFO     WDM:logger.py:11 Get LATEST chromedriver version for google-chrome
INFO     WDM:logger.py:11 Driver [/home/runner/.wdm/drivers/chromedriver/linux64/137.0.7151.119/chromedriver-linux64/chromedriver] found in cache
INFO     conftest:conftest.py:118 Navigated to URL: https://app.mochaaccounting.com/login
--------------------------- Captured stderr teardown ---------------------------
2025-07-05 04:17:36,635 - INFO - Closing browser
---------------------------- Captured log teardown -----------------------------
INFO     conftest:conftest.py:132 Closing browser
________ test_invalid_password_login[shubhamdabir07@gmail.com-Password] ________

setup = <selenium.webdriver.chrome.webdriver.WebDriver (session="c39b3010fd3cf99b761b5d5c07526562")>
login_test_data = {'expected_password_validation': 'Password is required', 'expected_username_validation': 'Email is required.', 'expect...ect_email_verification_msg': "Please check your email address. If you don't have an account, you can create one.", ...}
username = 'shubhamdabir07@gmail.com', password = 'Password'

    @pytest.mark.parametrize("username, password", zip(valid_username, invalid_password))
    def test_invalid_password_login(setup, login_test_data,username, password ):
        driver = setup
        login_page = LoginPage(driver)
>       login_page.enter_username(username)

tests/test_login.py:60: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pages/login_page.py:28: in enter_username
    self.actions.wait_for_element(self.login_username)
actions/actions.py:71: in wait_for_element
    WebDriverWait(self.driver, timeout).until(EC.visibility_of_element_located(locator))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <selenium.webdriver.support.wait.WebDriverWait (session="c39b3010fd3cf99b761b5d5c07526562")>
method = <function visibility_of_element_located.<locals>._predicate at 0x7f231b64dda0>
message = ''

    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = "") -> T:
        """Wait until the method returns a value that is not False.
    
        Calls the method provided with the driver as an argument until the
        return value does not evaluate to ``False``.
    
        Parameters:
        ----------
        method: callable(WebDriver)
            - A callable object that takes a WebDriver instance as an argument.
    
        message: str
            - Optional message for :exc:`TimeoutException`
    
        Return:
        -------
        object: T
            - The result of the last call to `method`
    
        Raises:
        -------
        TimeoutException
            - If 'method' does not return a truthy value within the WebDriverWait
            object's timeout
    
        Example:
        --------
        >>> from selenium.webdriver.common.by import By
        >>> from selenium.webdriver.support.ui import WebDriverWait
        >>> from selenium.webdriver.support import expected_conditions as EC
    
        # Wait until an element is visible on the page
        >>> wait = WebDriverWait(driver, 10)
        >>> element = wait.until(EC.visibility_of_element_located((By.ID, "exampleId")))
        >>> print(element.text)
        """
        screen = None
        stacktrace = None
    
        end_time = time.monotonic() + self._timeout
        while True:
            try:
                value = method(self._driver)
                if value:
                    return value
            except self._ignored_exceptions as exc:
                screen = getattr(exc, "screen", None)
                stacktrace = getattr(exc, "stacktrace", None)
            if time.monotonic() > end_time:
                break
            time.sleep(self._poll)
>       raise TimeoutException(message, screen, stacktrace)
E       selenium.common.exceptions.TimeoutException: Message: 
E       Stacktrace:
E       #0 0x55b3aa6a645a <unknown>
E       #1 0x55b3aa14b760 <unknown>
E       #2 0x55b3aa19d127 <unknown>
E       #3 0x55b3aa19d321 <unknown>
E       #4 0x55b3aa1ebe94 <unknown>
E       #5 0x55b3aa1c2e7d <unknown>
E       #6 0x55b3aa1e930b <unknown>
E       #7 0x55b3aa1c2c23 <unknown>
E       #8 0x55b3aa18f4a5 <unknown>
E       #9 0x55b3aa190111 <unknown>
E       #10 0x55b3aa66af1b <unknown>
E       #11 0x55b3aa66ee19 <unknown>
E       #12 0x55b3aa651ac9 <unknown>
E       #13 0x55b3aa66f9c8 <unknown>
E       #14 0x55b3aa63634f <unknown>
E       #15 0x55b3aa693a28 <unknown>
E       #16 0x55b3aa693c06 <unknown>
E       #17 0x55b3aa6a5336 <unknown>
E       #18 0x7f6a6249caa4 <unknown>
E       #19 0x7f6a62529c3c <unknown>

/opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/selenium/webdriver/support/wait.py:146: TimeoutException
---------------------------- Captured stderr setup -----------------------------
2025-07-05 04:17:36,699 - INFO - Starting test with Chrome browser
2025-07-05 04:17:36,699 - INFO - ====== WebDriver manager ======
2025-07-05 04:17:36,808 - INFO - Get LATEST chromedriver version for google-chrome
2025-07-05 04:17:36,820 - INFO - Get LATEST chromedriver version for google-chrome
2025-07-05 04:17:36,845 - INFO - Driver [/home/runner/.wdm/drivers/chromedriver/linux64/137.0.7151.119/chromedriver-linux64/chromedriver] found in cache
2025-07-05 04:17:37,353 - INFO - Navigated to URL: https://app.mochaaccounting.com/login
------------------------------ Captured log setup ------------------------------
INFO     conftest:conftest.py:90 Starting test with Chrome browser
INFO     WDM:logger.py:11 ====== WebDriver manager ======
INFO     WDM:logger.py:11 Get LATEST chromedriver version for google-chrome
INFO     WDM:logger.py:11 Get LATEST chromedriver version for google-chrome
INFO     WDM:logger.py:11 Driver [/home/runner/.wdm/drivers/chromedriver/linux64/137.0.7151.119/chromedriver-linux64/chromedriver] found in cache
INFO     conftest:conftest.py:118 Navigated to URL: https://app.mochaaccounting.com/login
--------------------------- Captured stderr teardown ---------------------------
2025-07-05 04:19:38,981 - INFO - Closing browser
---------------------------- Captured log teardown -----------------------------
INFO     conftest:conftest.py:132 Closing browser
___ test_invalid_password_login[hrishikesh.shinde1607@gmail.com-payer@1234] ____

setup = <selenium.webdriver.chrome.webdriver.WebDriver (session="c51fd92769d0306ff0ffa7f9e2297a7f")>
login_test_data = {'expected_password_validation': 'Password is required', 'expected_username_validation': 'Email is required.', 'expect...ect_email_verification_msg': "Please check your email address. If you don't have an account, you can create one.", ...}
username = 'hrishikesh.shinde1607@gmail.com', password = 'payer@1234'

    @pytest.mark.parametrize("username, password", zip(valid_username, invalid_password))
    def test_invalid_password_login(setup, login_test_data,username, password ):
        driver = setup
        login_page = LoginPage(driver)
>       login_page.enter_username(username)

tests/test_login.py:60: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pages/login_page.py:28: in enter_username
    self.actions.wait_for_element(self.login_username)
actions/actions.py:71: in wait_for_element
    WebDriverWait(self.driver, timeout).until(EC.visibility_of_element_located(locator))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <selenium.webdriver.support.wait.WebDriverWait (session="c51fd92769d0306ff0ffa7f9e2297a7f")>
method = <function visibility_of_element_located.<locals>._predicate at 0x7f231b64d1c0>
message = ''

    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = "") -> T:
        """Wait until the method returns a value that is not False.
    
        Calls the method provided with the driver as an argument until the
        return value does not evaluate to ``False``.
    
        Parameters:
        ----------
        method: callable(WebDriver)
            - A callable object that takes a WebDriver instance as an argument.
    
        message: str
            - Optional message for :exc:`TimeoutException`
    
        Return:
        -------
        object: T
            - The result of the last call to `method`
    
        Raises:
        -------
        TimeoutException
            - If 'method' does not return a truthy value within the WebDriverWait
            object's timeout
    
        Example:
        --------
        >>> from selenium.webdriver.common.by import By
        >>> from selenium.webdriver.support.ui import WebDriverWait
        >>> from selenium.webdriver.support import expected_conditions as EC
    
        # Wait until an element is visible on the page
        >>> wait = WebDriverWait(driver, 10)
        >>> element = wait.until(EC.visibility_of_element_located((By.ID, "exampleId")))
        >>> print(element.text)
        """
        screen = None
        stacktrace = None
    
        end_time = time.monotonic() + self._timeout
        while True:
            try:
                value = method(self._driver)
                if value:
                    return value
            except self._ignored_exceptions as exc:
                screen = getattr(exc, "screen", None)
                stacktrace = getattr(exc, "stacktrace", None)
            if time.monotonic() > end_time:
                break
            time.sleep(self._poll)
>       raise TimeoutException(message, screen, stacktrace)
E       selenium.common.exceptions.TimeoutException: Message: 
E       Stacktrace:
E       #0 0x556bf256845a <unknown>
E       #1 0x556bf200d760 <unknown>
E       #2 0x556bf205f127 <unknown>
E       #3 0x556bf205f321 <unknown>
E       #4 0x556bf20ade94 <unknown>
E       #5 0x556bf2084e7d <unknown>
E       #6 0x556bf20ab30b <unknown>
E       #7 0x556bf2084c23 <unknown>
E       #8 0x556bf20514a5 <unknown>
E       #9 0x556bf2052111 <unknown>
E       #10 0x556bf252cf1b <unknown>
E       #11 0x556bf2530e19 <unknown>
E       #12 0x556bf2513ac9 <unknown>
E       #13 0x556bf25319c8 <unknown>
E       #14 0x556bf24f834f <unknown>
E       #15 0x556bf2555a28 <unknown>
E       #16 0x556bf2555c06 <unknown>
E       #17 0x556bf2567336 <unknown>
E       #18 0x7f5ee669caa4 <unknown>
E       #19 0x7f5ee6729c3c <unknown>

/opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/selenium/webdriver/support/wait.py:146: TimeoutException
---------------------------- Captured stderr setup -----------------------------
2025-07-05 04:19:39,037 - INFO - Starting test with Chrome browser
2025-07-05 04:19:39,037 - INFO - ====== WebDriver manager ======
2025-07-05 04:19:39,146 - INFO - Get LATEST chromedriver version for google-chrome
2025-07-05 04:19:39,160 - INFO - Get LATEST chromedriver version for google-chrome
2025-07-05 04:19:39,170 - INFO - Driver [/home/runner/.wdm/drivers/chromedriver/linux64/137.0.7151.119/chromedriver-linux64/chromedriver] found in cache
2025-07-05 04:19:39,704 - INFO - Navigated to URL: https://app.mochaaccounting.com/login
------------------------------ Captured log setup ------------------------------
INFO     conftest:conftest.py:90 Starting test with Chrome browser
INFO     WDM:logger.py:11 ====== WebDriver manager ======
INFO     WDM:logger.py:11 Get LATEST chromedriver version for google-chrome
INFO     WDM:logger.py:11 Get LATEST chromedriver version for google-chrome
INFO     WDM:logger.py:11 Driver [/home/runner/.wdm/drivers/chromedriver/linux64/137.0.7151.119/chromedriver-linux64/chromedriver] found in cache
INFO     conftest:conftest.py:118 Navigated to URL: https://app.mochaaccounting.com/login
--------------------------- Captured stderr teardown ---------------------------
2025-07-05 04:21:41,338 - INFO - Closing browser
---------------------------- Captured log teardown -----------------------------
INFO     conftest:conftest.py:132 Closing browser
________________________ test_blank_username_validation ________________________

setup = <selenium.webdriver.chrome.webdriver.WebDriver (session="6ec45055a55a745102f57133034949a5")>
login_test_data = {'expected_password_validation': 'Password is required', 'expected_username_validation': 'Email is required.', 'expect...ect_email_verification_msg': "Please check your email address. If you don't have an account, you can create one.", ...}

    def test_blank_username_validation(setup, login_test_data):
        driver = setup
        login_page = LoginPage(driver)
        #login_page.enter_password(valid_password[0])
>       login_page.click_username()

tests/test_login.py:71: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pages/login_page.py:32: in click_username
    self.actions.wait_for_element(self.login_username)
actions/actions.py:71: in wait_for_element
    WebDriverWait(self.driver, timeout).until(EC.visibility_of_element_located(locator))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <selenium.webdriver.support.wait.WebDriverWait (session="6ec45055a55a745102f57133034949a5")>
method = <function visibility_of_element_located.<locals>._predicate at 0x7f231b64d6c0>
message = ''

    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = "") -> T:
        """Wait until the method returns a value that is not False.
    
        Calls the method provided with the driver as an argument until the
        return value does not evaluate to ``False``.
    
        Parameters:
        ----------
        method: callable(WebDriver)
            - A callable object that takes a WebDriver instance as an argument.
    
        message: str
            - Optional message for :exc:`TimeoutException`
    
        Return:
        -------
        object: T
            - The result of the last call to `method`
    
        Raises:
        -------
        TimeoutException
            - If 'method' does not return a truthy value within the WebDriverWait
            object's timeout
    
        Example:
        --------
        >>> from selenium.webdriver.common.by import By
        >>> from selenium.webdriver.support.ui import WebDriverWait
        >>> from selenium.webdriver.support import expected_conditions as EC
    
        # Wait until an element is visible on the page
        >>> wait = WebDriverWait(driver, 10)
        >>> element = wait.until(EC.visibility_of_element_located((By.ID, "exampleId")))
        >>> print(element.text)
        """
        screen = None
        stacktrace = None
    
        end_time = time.monotonic() + self._timeout
        while True:
            try:
                value = method(self._driver)
                if value:
                    return value
            except self._ignored_exceptions as exc:
                screen = getattr(exc, "screen", None)
                stacktrace = getattr(exc, "stacktrace", None)
            if time.monotonic() > end_time:
                break
            time.sleep(self._poll)
>       raise TimeoutException(message, screen, stacktrace)
E       selenium.common.exceptions.TimeoutException: Message: 
E       Stacktrace:
E       #0 0x55703b98045a <unknown>
E       #1 0x55703b425760 <unknown>
E       #2 0x55703b477127 <unknown>
E       #3 0x55703b477321 <unknown>
E       #4 0x55703b4c5e94 <unknown>
E       #5 0x55703b49ce7d <unknown>
E       #6 0x55703b4c330b <unknown>
E       #7 0x55703b49cc23 <unknown>
E       #8 0x55703b4694a5 <unknown>
E       #9 0x55703b46a111 <unknown>
E       #10 0x55703b944f1b <unknown>
E       #11 0x55703b948e19 <unknown>
E       #12 0x55703b92bac9 <unknown>
E       #13 0x55703b9499c8 <unknown>
E       #14 0x55703b91034f <unknown>
E       #15 0x55703b96da28 <unknown>
E       #16 0x55703b96dc06 <unknown>
E       #17 0x55703b97f336 <unknown>
E       #18 0x7f1e5069caa4 <unknown>
E       #19 0x7f1e50729c3c <unknown>

/opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/selenium/webdriver/support/wait.py:146: TimeoutException
---------------------------- Captured stderr setup -----------------------------
2025-07-05 04:21:41,397 - INFO - Starting test with Chrome browser
2025-07-05 04:21:41,397 - INFO - ====== WebDriver manager ======
2025-07-05 04:21:41,505 - INFO - Get LATEST chromedriver version for google-chrome
2025-07-05 04:21:41,518 - INFO - Get LATEST chromedriver version for google-chrome
2025-07-05 04:21:41,529 - INFO - Driver [/home/runner/.wdm/drivers/chromedriver/linux64/137.0.7151.119/chromedriver-linux64/chromedriver] found in cache
2025-07-05 04:21:42,055 - INFO - Navigated to URL: https://app.mochaaccounting.com/login
------------------------------ Captured log setup ------------------------------
INFO     conftest:conftest.py:90 Starting test with Chrome browser
INFO     WDM:logger.py:11 ====== WebDriver manager ======
INFO     WDM:logger.py:11 Get LATEST chromedriver version for google-chrome
INFO     WDM:logger.py:11 Get LATEST chromedriver version for google-chrome
INFO     WDM:logger.py:11 Driver [/home/runner/.wdm/drivers/chromedriver/linux64/137.0.7151.119/chromedriver-linux64/chromedriver] found in cache
INFO     conftest:conftest.py:118 Navigated to URL: https://app.mochaaccounting.com/login
--------------------------- Captured stderr teardown ---------------------------
2025-07-05 04:23:43,626 - INFO - Closing browser
---------------------------- Captured log teardown -----------------------------
INFO     conftest:conftest.py:132 Closing browser
________________________ test_blank_password_validation ________________________

setup = <selenium.webdriver.chrome.webdriver.WebDriver (session="c9bb21e839014cb4d2a88bdf4d30d5f3")>
login_test_data = {'expected_password_validation': 'Password is required', 'expected_username_validation': 'Email is required.', 'expect...ect_email_verification_msg': "Please check your email address. If you don't have an account, you can create one.", ...}

    def test_blank_password_validation(setup,login_test_data):
        driver = setup
        login_page = LoginPage(driver)
>       login_page.enter_username(valid_username[0])

tests/test_login.py:79: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pages/login_page.py:28: in enter_username
    self.actions.wait_for_element(self.login_username)
actions/actions.py:71: in wait_for_element
    WebDriverWait(self.driver, timeout).until(EC.visibility_of_element_located(locator))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <selenium.webdriver.support.wait.WebDriverWait (session="c9bb21e839014cb4d2a88bdf4d30d5f3")>
method = <function visibility_of_element_located.<locals>._predicate at 0x7f231b64eca0>
message = ''

    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = "") -> T:
        """Wait until the method returns a value that is not False.
    
        Calls the method provided with the driver as an argument until the
        return value does not evaluate to ``False``.
    
        Parameters:
        ----------
        method: callable(WebDriver)
            - A callable object that takes a WebDriver instance as an argument.
    
        message: str
            - Optional message for :exc:`TimeoutException`
    
        Return:
        -------
        object: T
            - The result of the last call to `method`
    
        Raises:
        -------
        TimeoutException
            - If 'method' does not return a truthy value within the WebDriverWait
            object's timeout
    
        Example:
        --------
        >>> from selenium.webdriver.common.by import By
        >>> from selenium.webdriver.support.ui import WebDriverWait
        >>> from selenium.webdriver.support import expected_conditions as EC
    
        # Wait until an element is visible on the page
        >>> wait = WebDriverWait(driver, 10)
        >>> element = wait.until(EC.visibility_of_element_located((By.ID, "exampleId")))
        >>> print(element.text)
        """
        screen = None
        stacktrace = None
    
        end_time = time.monotonic() + self._timeout
        while True:
            try:
                value = method(self._driver)
                if value:
                    return value
            except self._ignored_exceptions as exc:
                screen = getattr(exc, "screen", None)
                stacktrace = getattr(exc, "stacktrace", None)
            if time.monotonic() > end_time:
                break
            time.sleep(self._poll)
>       raise TimeoutException(message, screen, stacktrace)
E       selenium.common.exceptions.TimeoutException: Message: 
E       Stacktrace:
E       #0 0x5638924ec45a <unknown>
E       #1 0x563891f91760 <unknown>
E       #2 0x563891fe3127 <unknown>
E       #3 0x563891fe3321 <unknown>
E       #4 0x563892031e94 <unknown>
E       #5 0x563892008e7d <unknown>
E       #6 0x56389202f30b <unknown>
E       #7 0x563892008c23 <unknown>
E       #8 0x563891fd54a5 <unknown>
E       #9 0x563891fd6111 <unknown>
E       #10 0x5638924b0f1b <unknown>
E       #11 0x5638924b4e19 <unknown>
E       #12 0x563892497ac9 <unknown>
E       #13 0x5638924b59c8 <unknown>
E       #14 0x56389247c34f <unknown>
E       #15 0x5638924d9a28 <unknown>
E       #16 0x5638924d9c06 <unknown>
E       #17 0x5638924eb336 <unknown>
E       #18 0x7fa953c9caa4 <unknown>
E       #19 0x7fa953d29c3c <unknown>

/opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/selenium/webdriver/support/wait.py:146: TimeoutException
---------------------------- Captured stderr setup -----------------------------
2025-07-05 04:23:43,690 - INFO - Starting test with Chrome browser
2025-07-05 04:23:43,691 - INFO - ====== WebDriver manager ======
2025-07-05 04:23:43,799 - INFO - Get LATEST chromedriver version for google-chrome
2025-07-05 04:23:43,842 - INFO - Get LATEST chromedriver version for google-chrome
2025-07-05 04:23:43,852 - INFO - Driver [/home/runner/.wdm/drivers/chromedriver/linux64/137.0.7151.119/chromedriver-linux64/chromedriver] found in cache
2025-07-05 04:23:44,376 - INFO - Navigated to URL: https://app.mochaaccounting.com/login
------------------------------ Captured log setup ------------------------------
INFO     conftest:conftest.py:90 Starting test with Chrome browser
INFO     WDM:logger.py:11 ====== WebDriver manager ======
INFO     WDM:logger.py:11 Get LATEST chromedriver version for google-chrome
INFO     WDM:logger.py:11 Get LATEST chromedriver version for google-chrome
INFO     WDM:logger.py:11 Driver [/home/runner/.wdm/drivers/chromedriver/linux64/137.0.7151.119/chromedriver-linux64/chromedriver] found in cache
INFO     conftest:conftest.py:118 Navigated to URL: https://app.mochaaccounting.com/login
--------------------------- Captured stderr teardown ---------------------------
2025-07-05 04:25:46,032 - INFO - Closing browser
---------------------------- Captured log teardown -----------------------------
INFO     conftest:conftest.py:132 Closing browser
___________________ test_invalid_email_validation[username0] ___________________

setup = <selenium.webdriver.chrome.webdriver.WebDriver (session="3841017cd07793e00c71357a07046089")>
login_test_data = {'expected_password_validation': 'Password is required', 'expected_username_validation': 'Email is required.', 'expect...ect_email_verification_msg': "Please check your email address. If you don't have an account, you can create one.", ...}
username = ('yash10%gmail.com',)

    @pytest.mark.parametrize("username", zip(invalid_format_username))
    def test_invalid_email_validation(setup, login_test_data, username):
        driver = setup
        login_page = LoginPage(driver)
>       login_page.enter_username(username)

tests/test_login.py:96: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pages/login_page.py:28: in enter_username
    self.actions.wait_for_element(self.login_username)
actions/actions.py:71: in wait_for_element
    WebDriverWait(self.driver, timeout).until(EC.visibility_of_element_located(locator))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <selenium.webdriver.support.wait.WebDriverWait (session="3841017cd07793e00c71357a07046089")>
method = <function visibility_of_element_located.<locals>._predicate at 0x7f231b64ec00>
message = ''

    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = "") -> T:
        """Wait until the method returns a value that is not False.
    
        Calls the method provided with the driver as an argument until the
        return value does not evaluate to ``False``.
    
        Parameters:
        ----------
        method: callable(WebDriver)
            - A callable object that takes a WebDriver instance as an argument.
    
        message: str
            - Optional message for :exc:`TimeoutException`
    
        Return:
        -------
        object: T
            - The result of the last call to `method`
    
        Raises:
        -------
        TimeoutException
            - If 'method' does not return a truthy value within the WebDriverWait
            object's timeout
    
        Example:
        --------
        >>> from selenium.webdriver.common.by import By
        >>> from selenium.webdriver.support.ui import WebDriverWait
        >>> from selenium.webdriver.support import expected_conditions as EC
    
        # Wait until an element is visible on the page
        >>> wait = WebDriverWait(driver, 10)
        >>> element = wait.until(EC.visibility_of_element_located((By.ID, "exampleId")))
        >>> print(element.text)
        """
        screen = None
        stacktrace = None
    
        end_time = time.monotonic() + self._timeout
        while True:
            try:
                value = method(self._driver)
                if value:
                    return value
            except self._ignored_exceptions as exc:
                screen = getattr(exc, "screen", None)
                stacktrace = getattr(exc, "stacktrace", None)
            if time.monotonic() > end_time:
                break
            time.sleep(self._poll)
>       raise TimeoutException(message, screen, stacktrace)
E       selenium.common.exceptions.TimeoutException: Message: 
E       Stacktrace:
E       #0 0x55c08313c45a <unknown>
E       #1 0x55c082be1760 <unknown>
E       #2 0x55c082c33127 <unknown>
E       #3 0x55c082c33321 <unknown>
E       #4 0x55c082c81e94 <unknown>
E       #5 0x55c082c58e7d <unknown>
E       #6 0x55c082c7f30b <unknown>
E       #7 0x55c082c58c23 <unknown>
E       #8 0x55c082c254a5 <unknown>
E       #9 0x55c082c26111 <unknown>
E       #10 0x55c083100f1b <unknown>
E       #11 0x55c083104e19 <unknown>
E       #12 0x55c0830e7ac9 <unknown>
E       #13 0x55c0831059c8 <unknown>
E       #14 0x55c0830cc34f <unknown>
E       #15 0x55c083129a28 <unknown>
E       #16 0x55c083129c06 <unknown>
E       #17 0x55c08313b336 <unknown>
E       #18 0x7fabcda9caa4 <unknown>
E       #19 0x7fabcdb29c3c <unknown>

/opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/selenium/webdriver/support/wait.py:146: TimeoutException
---------------------------- Captured stderr setup -----------------------------
2025-07-05 04:25:46,095 - INFO - Starting test with Chrome browser
2025-07-05 04:25:46,096 - INFO - ====== WebDriver manager ======
2025-07-05 04:25:46,204 - INFO - Get LATEST chromedriver version for google-chrome
2025-07-05 04:25:46,216 - INFO - Get LATEST chromedriver version for google-chrome
2025-07-05 04:25:46,227 - INFO - Driver [/home/runner/.wdm/drivers/chromedriver/linux64/137.0.7151.119/chromedriver-linux64/chromedriver] found in cache
2025-07-05 04:25:46,800 - INFO - Navigated to URL: https://app.mochaaccounting.com/login
------------------------------ Captured log setup ------------------------------
INFO     conftest:conftest.py:90 Starting test with Chrome browser
INFO     WDM:logger.py:11 ====== WebDriver manager ======
INFO     WDM:logger.py:11 Get LATEST chromedriver version for google-chrome
INFO     WDM:logger.py:11 Get LATEST chromedriver version for google-chrome
INFO     WDM:logger.py:11 Driver [/home/runner/.wdm/drivers/chromedriver/linux64/137.0.7151.119/chromedriver-linux64/chromedriver] found in cache
INFO     conftest:conftest.py:118 Navigated to URL: https://app.mochaaccounting.com/login
--------------------------- Captured stderr teardown ---------------------------
2025-07-05 04:27:48,455 - INFO - Closing browser
---------------------------- Captured log teardown -----------------------------
INFO     conftest:conftest.py:132 Closing browser
___________________ test_invalid_email_validation[username1] ___________________

setup = <selenium.webdriver.chrome.webdriver.WebDriver (session="a436859cf6884d13a2b164118850e9f4")>
login_test_data = {'expected_password_validation': 'Password is required', 'expected_username_validation': 'Email is required.', 'expect...ect_email_verification_msg': "Please check your email address. If you don't have an account, you can create one.", ...}
username = ('payeryash1gmail.com',)

    @pytest.mark.parametrize("username", zip(invalid_format_username))
    def test_invalid_email_validation(setup, login_test_data, username):
        driver = setup
        login_page = LoginPage(driver)
>       login_page.enter_username(username)

tests/test_login.py:96: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pages/login_page.py:28: in enter_username
    self.actions.wait_for_element(self.login_username)
actions/actions.py:71: in wait_for_element
    WebDriverWait(self.driver, timeout).until(EC.visibility_of_element_located(locator))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <selenium.webdriver.support.wait.WebDriverWait (session="a436859cf6884d13a2b164118850e9f4")>
method = <function visibility_of_element_located.<locals>._predicate at 0x7f231b64e700>
message = ''

    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = "") -> T:
        """Wait until the method returns a value that is not False.
    
        Calls the method provided with the driver as an argument until the
        return value does not evaluate to ``False``.
    
        Parameters:
        ----------
        method: callable(WebDriver)
            - A callable object that takes a WebDriver instance as an argument.
    
        message: str
            - Optional message for :exc:`TimeoutException`
    
        Return:
        -------
        object: T
            - The result of the last call to `method`
    
        Raises:
        -------
        TimeoutException
            - If 'method' does not return a truthy value within the WebDriverWait
            object's timeout
    
        Example:
        --------
        >>> from selenium.webdriver.common.by import By
        >>> from selenium.webdriver.support.ui import WebDriverWait
        >>> from selenium.webdriver.support import expected_conditions as EC
    
        # Wait until an element is visible on the page
        >>> wait = WebDriverWait(driver, 10)
        >>> element = wait.until(EC.visibility_of_element_located((By.ID, "exampleId")))
        >>> print(element.text)
        """
        screen = None
        stacktrace = None
    
        end_time = time.monotonic() + self._timeout
        while True:
            try:
                value = method(self._driver)
                if value:
                    return value
            except self._ignored_exceptions as exc:
                screen = getattr(exc, "screen", None)
                stacktrace = getattr(exc, "stacktrace", None)
            if time.monotonic() > end_time:
                break
            time.sleep(self._poll)
>       raise TimeoutException(message, screen, stacktrace)
E       selenium.common.exceptions.TimeoutException: Message: 
E       Stacktrace:
E       #0 0x55c77f54745a <unknown>
E       #1 0x55c77efec760 <unknown>
E       #2 0x55c77f03e127 <unknown>
E       #3 0x55c77f03e321 <unknown>
E       #4 0x55c77f08ce94 <unknown>
E       #5 0x55c77f063e7d <unknown>
E       #6 0x55c77f08a30b <unknown>
E       #7 0x55c77f063c23 <unknown>
E       #8 0x55c77f0304a5 <unknown>
E       #9 0x55c77f031111 <unknown>
E       #10 0x55c77f50bf1b <unknown>
E       #11 0x55c77f50fe19 <unknown>
E       #12 0x55c77f4f2ac9 <unknown>
E       #13 0x55c77f5109c8 <unknown>
E       #14 0x55c77f4d734f <unknown>
E       #15 0x55c77f534a28 <unknown>
E       #16 0x55c77f534c06 <unknown>
E       #17 0x55c77f546336 <unknown>
E       #18 0x7f6d4ea9caa4 <unknown>
E       #19 0x7f6d4eb29c3c <unknown>

/opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/selenium/webdriver/support/wait.py:146: TimeoutException
---------------------------- Captured stderr setup -----------------------------
2025-07-05 04:27:49,510 - INFO - Starting test with Chrome browser
2025-07-05 04:27:49,511 - INFO - ====== WebDriver manager ======
2025-07-05 04:27:49,619 - INFO - Get LATEST chromedriver version for google-chrome
2025-07-05 04:27:49,631 - INFO - Get LATEST chromedriver version for google-chrome
2025-07-05 04:27:49,642 - INFO - Driver [/home/runner/.wdm/drivers/chromedriver/linux64/137.0.7151.119/chromedriver-linux64/chromedriver] found in cache
2025-07-05 04:27:50,191 - INFO - Navigated to URL: https://app.mochaaccounting.com/login
------------------------------ Captured log setup ------------------------------
INFO     conftest:conftest.py:90 Starting test with Chrome browser
INFO     WDM:logger.py:11 ====== WebDriver manager ======
INFO     WDM:logger.py:11 Get LATEST chromedriver version for google-chrome
INFO     WDM:logger.py:11 Get LATEST chromedriver version for google-chrome
INFO     WDM:logger.py:11 Driver [/home/runner/.wdm/drivers/chromedriver/linux64/137.0.7151.119/chromedriver-linux64/chromedriver] found in cache
INFO     conftest:conftest.py:118 Navigated to URL: https://app.mochaaccounting.com/login
--------------------------- Captured stderr teardown ---------------------------
2025-07-05 04:29:51,836 - INFO - Closing browser
---------------------------- Captured log teardown -----------------------------
INFO     conftest:conftest.py:132 Closing browser
___________________ test_invalid_email_validation[username2] ___________________

setup = <selenium.webdriver.chrome.webdriver.WebDriver (session="d6175b92a26267c11b69affcf26050b6")>
login_test_data = {'expected_password_validation': 'Password is required', 'expected_username_validation': 'Email is required.', 'expect...ect_email_verification_msg': "Please check your email address. If you don't have an account, you can create one.", ...}
username = (' payeryash10@gmai|com',)

    @pytest.mark.parametrize("username", zip(invalid_format_username))
    def test_invalid_email_validation(setup, login_test_data, username):
        driver = setup
        login_page = LoginPage(driver)
>       login_page.enter_username(username)

tests/test_login.py:96: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pages/login_page.py:28: in enter_username
    self.actions.wait_for_element(self.login_username)
actions/actions.py:71: in wait_for_element
    WebDriverWait(self.driver, timeout).until(EC.visibility_of_element_located(locator))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <selenium.webdriver.support.wait.WebDriverWait (session="d6175b92a26267c11b69affcf26050b6")>
method = <function visibility_of_element_located.<locals>._predicate at 0x7f231b64d620>
message = ''

    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = "") -> T:
        """Wait until the method returns a value that is not False.
    
        Calls the method provided with the driver as an argument until the
        return value does not evaluate to ``False``.
    
        Parameters:
        ----------
        method: callable(WebDriver)
            - A callable object that takes a WebDriver instance as an argument.
    
        message: str
            - Optional message for :exc:`TimeoutException`
    
        Return:
        -------
        object: T
            - The result of the last call to `method`
    
        Raises:
        -------
        TimeoutException
            - If 'method' does not return a truthy value within the WebDriverWait
            object's timeout
    
        Example:
        --------
        >>> from selenium.webdriver.common.by import By
        >>> from selenium.webdriver.support.ui import WebDriverWait
        >>> from selenium.webdriver.support import expected_conditions as EC
    
        # Wait until an element is visible on the page
        >>> wait = WebDriverWait(driver, 10)
        >>> element = wait.until(EC.visibility_of_element_located((By.ID, "exampleId")))
        >>> print(element.text)
        """
        screen = None
        stacktrace = None
    
        end_time = time.monotonic() + self._timeout
        while True:
            try:
                value = method(self._driver)
                if value:
                    return value
            except self._ignored_exceptions as exc:
                screen = getattr(exc, "screen", None)
                stacktrace = getattr(exc, "stacktrace", None)
            if time.monotonic() > end_time:
                break
            time.sleep(self._poll)
>       raise TimeoutException(message, screen, stacktrace)
E       selenium.common.exceptions.TimeoutException: Message: 
E       Stacktrace:
E       #0 0x564debd1d45a <unknown>
E       #1 0x564deb7c2760 <unknown>
E       #2 0x564deb814127 <unknown>
E       #3 0x564deb814321 <unknown>
E       #4 0x564deb862e94 <unknown>
E       #5 0x564deb839e7d <unknown>
E       #6 0x564deb86030b <unknown>
E       #7 0x564deb839c23 <unknown>
E       #8 0x564deb8064a5 <unknown>
E       #9 0x564deb807111 <unknown>
E       #10 0x564debce1f1b <unknown>
E       #11 0x564debce5e19 <unknown>
E       #12 0x564debcc8ac9 <unknown>
E       #13 0x564debce69c8 <unknown>
E       #14 0x564debcad34f <unknown>
E       #15 0x564debd0aa28 <unknown>
E       #16 0x564debd0ac06 <unknown>
E       #17 0x564debd1c336 <unknown>
E       #18 0x7fcc8f49caa4 <unknown>
E       #19 0x7fcc8f529c3c <unknown>

/opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/selenium/webdriver/support/wait.py:146: TimeoutException
---------------------------- Captured stderr setup -----------------------------
2025-07-05 04:29:51,900 - INFO - Starting test with Chrome browser
2025-07-05 04:29:51,900 - INFO - ====== WebDriver manager ======
2025-07-05 04:29:52,008 - INFO - Get LATEST chromedriver version for google-chrome
2025-07-05 04:29:52,019 - INFO - Get LATEST chromedriver version for google-chrome
2025-07-05 04:29:52,030 - INFO - Driver [/home/runner/.wdm/drivers/chromedriver/linux64/137.0.7151.119/chromedriver-linux64/chromedriver] found in cache
2025-07-05 04:29:52,563 - INFO - Navigated to URL: https://app.mochaaccounting.com/login
------------------------------ Captured log setup ------------------------------
INFO     conftest:conftest.py:90 Starting test with Chrome browser
INFO     WDM:logger.py:11 ====== WebDriver manager ======
INFO     WDM:logger.py:11 Get LATEST chromedriver version for google-chrome
INFO     WDM:logger.py:11 Get LATEST chromedriver version for google-chrome
INFO     WDM:logger.py:11 Driver [/home/runner/.wdm/drivers/chromedriver/linux64/137.0.7151.119/chromedriver-linux64/chromedriver] found in cache
INFO     conftest:conftest.py:118 Navigated to URL: https://app.mochaaccounting.com/login
--------------------------- Captured stderr teardown ---------------------------
2025-07-05 04:31:54,159 - INFO - Closing browser
---------------------------- Captured log teardown -----------------------------
INFO     conftest:conftest.py:132 Closing browser
___________________ test_invalid_email_validation[username3] ___________________

setup = <selenium.webdriver.chrome.webdriver.WebDriver (session="627c06f33f6995a4e0c25f286ceeff35")>
login_test_data = {'expected_password_validation': 'Password is required', 'expected_username_validation': 'Email is required.', 'expect...ect_email_verification_msg': "Please check your email address. If you don't have an account, you can create one.", ...}
username = ('payergmail.com',)

    @pytest.mark.parametrize("username", zip(invalid_format_username))
    def test_invalid_email_validation(setup, login_test_data, username):
        driver = setup
        login_page = LoginPage(driver)
>       login_page.enter_username(username)

tests/test_login.py:96: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pages/login_page.py:28: in enter_username
    self.actions.wait_for_element(self.login_username)
actions/actions.py:71: in wait_for_element
    WebDriverWait(self.driver, timeout).until(EC.visibility_of_element_located(locator))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <selenium.webdriver.support.wait.WebDriverWait (session="627c06f33f6995a4e0c25f286ceeff35")>
method = <function visibility_of_element_located.<locals>._predicate at 0x7f231b64e340>
message = ''

    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = "") -> T:
        """Wait until the method returns a value that is not False.
    
        Calls the method provided with the driver as an argument until the
        return value does not evaluate to ``False``.
    
        Parameters:
        ----------
        method: callable(WebDriver)
            - A callable object that takes a WebDriver instance as an argument.
    
        message: str
            - Optional message for :exc:`TimeoutException`
    
        Return:
        -------
        object: T
            - The result of the last call to `method`
    
        Raises:
        -------
        TimeoutException
            - If 'method' does not return a truthy value within the WebDriverWait
            object's timeout
    
        Example:
        --------
        >>> from selenium.webdriver.common.by import By
        >>> from selenium.webdriver.support.ui import WebDriverWait
        >>> from selenium.webdriver.support import expected_conditions as EC
    
        # Wait until an element is visible on the page
        >>> wait = WebDriverWait(driver, 10)
        >>> element = wait.until(EC.visibility_of_element_located((By.ID, "exampleId")))
        >>> print(element.text)
        """
        screen = None
        stacktrace = None
    
        end_time = time.monotonic() + self._timeout
        while True:
            try:
                value = method(self._driver)
                if value:
                    return value
            except self._ignored_exceptions as exc:
                screen = getattr(exc, "screen", None)
                stacktrace = getattr(exc, "stacktrace", None)
            if time.monotonic() > end_time:
                break
            time.sleep(self._poll)
>       raise TimeoutException(message, screen, stacktrace)
E       selenium.common.exceptions.TimeoutException: Message: 
E       Stacktrace:
E       #0 0x55bd2f8da45a <unknown>
E       #1 0x55bd2f37f760 <unknown>
E       #2 0x55bd2f3d1127 <unknown>
E       #3 0x55bd2f3d1321 <unknown>
E       #4 0x55bd2f41fe94 <unknown>
E       #5 0x55bd2f3f6e7d <unknown>
E       #6 0x55bd2f41d30b <unknown>
E       #7 0x55bd2f3f6c23 <unknown>
E       #8 0x55bd2f3c34a5 <unknown>
E       #9 0x55bd2f3c4111 <unknown>
E       #10 0x55bd2f89ef1b <unknown>
E       #11 0x55bd2f8a2e19 <unknown>
E       #12 0x55bd2f885ac9 <unknown>
E       #13 0x55bd2f8a39c8 <unknown>
E       #14 0x55bd2f86a34f <unknown>
E       #15 0x55bd2f8c7a28 <unknown>
E       #16 0x55bd2f8c7c06 <unknown>
E       #17 0x55bd2f8d9336 <unknown>
E       #18 0x7fe676e9caa4 <unknown>
E       #19 0x7fe676f29c3c <unknown>

/opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/selenium/webdriver/support/wait.py:146: TimeoutException
---------------------------- Captured stderr setup -----------------------------
2025-07-05 04:31:54,215 - INFO - Starting test with Chrome browser
2025-07-05 04:31:54,215 - INFO - ====== WebDriver manager ======
2025-07-05 04:31:54,325 - INFO - Get LATEST chromedriver version for google-chrome
2025-07-05 04:31:54,337 - INFO - Get LATEST chromedriver version for google-chrome
2025-07-05 04:31:54,348 - INFO - Driver [/home/runner/.wdm/drivers/chromedriver/linux64/137.0.7151.119/chromedriver-linux64/chromedriver] found in cache
2025-07-05 04:31:54,987 - INFO - Navigated to URL: https://app.mochaaccounting.com/login
------------------------------ Captured log setup ------------------------------
INFO     conftest:conftest.py:90 Starting test with Chrome browser
INFO     WDM:logger.py:11 ====== WebDriver manager ======
INFO     WDM:logger.py:11 Get LATEST chromedriver version for google-chrome
INFO     WDM:logger.py:11 Get LATEST chromedriver version for google-chrome
INFO     WDM:logger.py:11 Driver [/home/runner/.wdm/drivers/chromedriver/linux64/137.0.7151.119/chromedriver-linux64/chromedriver] found in cache
INFO     conftest:conftest.py:118 Navigated to URL: https://app.mochaaccounting.com/login
--------------------------- Captured stderr teardown ---------------------------
2025-07-05 04:33:56,635 - INFO - Closing browser
---------------------------- Captured log teardown -----------------------------
INFO     conftest:conftest.py:132 Closing browser
___________________ test_invalid_email_validation[username4] ___________________

setup = <selenium.webdriver.chrome.webdriver.WebDriver (session="2c6bf774220f38b399eb7dafe41549bc")>
login_test_data = {'expected_password_validation': 'Password is required', 'expected_username_validation': 'Email is required.', 'expect...ect_email_verification_msg': "Please check your email address. If you don't have an account, you can create one.", ...}
username = ('payeryash10@gmail/com',)

    @pytest.mark.parametrize("username", zip(invalid_format_username))
    def test_invalid_email_validation(setup, login_test_data, username):
        driver = setup
        login_page = LoginPage(driver)
>       login_page.enter_username(username)

tests/test_login.py:96: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pages/login_page.py:28: in enter_username
    self.actions.wait_for_element(self.login_username)
actions/actions.py:71: in wait_for_element
    WebDriverWait(self.driver, timeout).until(EC.visibility_of_element_located(locator))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <selenium.webdriver.support.wait.WebDriverWait (session="2c6bf774220f38b399eb7dafe41549bc")>
method = <function visibility_of_element_located.<locals>._predicate at 0x7f231b64f100>
message = ''

    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = "") -> T:
        """Wait until the method returns a value that is not False.
    
        Calls the method provided with the driver as an argument until the
        return value does not evaluate to ``False``.
    
        Parameters:
        ----------
        method: callable(WebDriver)
            - A callable object that takes a WebDriver instance as an argument.
    
        message: str
            - Optional message for :exc:`TimeoutException`
    
        Return:
        -------
        object: T
            - The result of the last call to `method`
    
        Raises:
        -------
        TimeoutException
            - If 'method' does not return a truthy value within the WebDriverWait
            object's timeout
    
        Example:
        --------
        >>> from selenium.webdriver.common.by import By
        >>> from selenium.webdriver.support.ui import WebDriverWait
        >>> from selenium.webdriver.support import expected_conditions as EC
    
        # Wait until an element is visible on the page
        >>> wait = WebDriverWait(driver, 10)
        >>> element = wait.until(EC.visibility_of_element_located((By.ID, "exampleId")))
        >>> print(element.text)
        """
        screen = None
        stacktrace = None
    
        end_time = time.monotonic() + self._timeout
        while True:
            try:
                value = method(self._driver)
                if value:
                    return value
            except self._ignored_exceptions as exc:
                screen = getattr(exc, "screen", None)
                stacktrace = getattr(exc, "stacktrace", None)
            if time.monotonic() > end_time:
                break
            time.sleep(self._poll)
>       raise TimeoutException(message, screen, stacktrace)
E       selenium.common.exceptions.TimeoutException: Message: 
E       Stacktrace:
E       #0 0x555ea9dc545a <unknown>
E       #1 0x555ea986a760 <unknown>
E       #2 0x555ea98bc127 <unknown>
E       #3 0x555ea98bc321 <unknown>
E       #4 0x555ea990ae94 <unknown>
E       #5 0x555ea98e1e7d <unknown>
E       #6 0x555ea990830b <unknown>
E       #7 0x555ea98e1c23 <unknown>
E       #8 0x555ea98ae4a5 <unknown>
E       #9 0x555ea98af111 <unknown>
E       #10 0x555ea9d89f1b <unknown>
E       #11 0x555ea9d8de19 <unknown>
E       #12 0x555ea9d70ac9 <unknown>
E       #13 0x555ea9d8e9c8 <unknown>
E       #14 0x555ea9d5534f <unknown>
E       #15 0x555ea9db2a28 <unknown>
E       #16 0x555ea9db2c06 <unknown>
E       #17 0x555ea9dc4336 <unknown>
E       #18 0x7f2b27c9caa4 <unknown>
E       #19 0x7f2b27d29c3c <unknown>

/opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/selenium/webdriver/support/wait.py:146: TimeoutException
---------------------------- Captured stderr setup -----------------------------
2025-07-05 04:33:56,699 - INFO - Starting test with Chrome browser
2025-07-05 04:33:56,700 - INFO - ====== WebDriver manager ======
2025-07-05 04:33:56,810 - INFO - Get LATEST chromedriver version for google-chrome
2025-07-05 04:33:56,826 - INFO - Get LATEST chromedriver version for google-chrome
2025-07-05 04:33:56,844 - INFO - Driver [/home/runner/.wdm/drivers/chromedriver/linux64/137.0.7151.119/chromedriver-linux64/chromedriver] found in cache
2025-07-05 04:33:57,421 - INFO - Navigated to URL: https://app.mochaaccounting.com/login
------------------------------ Captured log setup ------------------------------
INFO     conftest:conftest.py:90 Starting test with Chrome browser
INFO     WDM:logger.py:11 ====== WebDriver manager ======
INFO     WDM:logger.py:11 Get LATEST chromedriver version for google-chrome
INFO     WDM:logger.py:11 Get LATEST chromedriver version for google-chrome
INFO     WDM:logger.py:11 Driver [/home/runner/.wdm/drivers/chromedriver/linux64/137.0.7151.119/chromedriver-linux64/chromedriver] found in cache
INFO     conftest:conftest.py:118 Navigated to URL: https://app.mochaaccounting.com/login
--------------------------- Captured stderr teardown ---------------------------
2025-07-05 04:35:59,065 - INFO - Closing browser
---------------------------- Captured log teardown -----------------------------
INFO     conftest:conftest.py:132 Closing browser
- Generated html report: file:///home/runner/work/Mocha_accounting/Mocha_accounting/C%3A%5CUsers%5CTaurus13%5CPycharmProjects%5CPythonProject%5Creports/20250705_035700/report.html -
=========================== short test summary info ============================
FAILED tests/test_login.py::test_valid_login[ranjeet.gupta@mochatechnologies.com-Ais@1234] - selenium.common.exceptions.TimeoutException: Message: 
Stacktrace:
#0 0x55db16a3345a <unknown>
#1 0x55db164d8760 <unknown>
#2 0x55db1652a127 <unknown>
#3 0x55db1652a321 <unknown>
#4 0x55db16578e94 <unknown>
#5 0x55db1654fe7d <unknown>
#6 0x55db1657630b <unknown>
#7 0x55db1654fc23 <unknown>
#8 0x55db1651c4a5 <unknown>
#9 0x55db1651d111 <unknown>
#10 0x55db169f7f1b <unknown>
#11 0x55db169fbe19 <unknown>
#12 0x55db169deac9 <unknown>
#13 0x55db169fc9c8 <unknown>
#14 0x55db169c334f <unknown>
#15 0x55db16a20a28 <unknown>
#16 0x55db16a20c06 <unknown>
#17 0x55db16a32336 <unknown>
#18 0x7f56ac89caa4 <unknown>
#19 0x7f56ac929c3c <unknown>
FAILED tests/test_login.py::test_valid_login[samatakamble9@gmail.com-Samata@16] - selenium.common.exceptions.TimeoutException: Message: 
Stacktrace:
#0 0x5638d33f445a <unknown>
#1 0x5638d2e99760 <unknown>
#2 0x5638d2eeb127 <unknown>
#3 0x5638d2eeb321 <unknown>
#4 0x5638d2f39e94 <unknown>
#5 0x5638d2f10e7d <unknown>
#6 0x5638d2f3730b <unknown>
#7 0x5638d2f10c23 <unknown>
#8 0x5638d2edd4a5 <unknown>
#9 0x5638d2ede111 <unknown>
#10 0x5638d33b8f1b <unknown>
#11 0x5638d33bce19 <unknown>
#12 0x5638d339fac9 <unknown>
#13 0x5638d33bd9c8 <unknown>
#14 0x5638d338434f <unknown>
#15 0x5638d33e1a28 <unknown>
#16 0x5638d33e1c06 <unknown>
#17 0x5638d33f3336 <unknown>
#18 0x7fd94ea9caa4 <unknown>
#19 0x7fd94eb29c3c <unknown>
FAILED tests/test_login.py::test_valid_login[shubhamdabir07@gmail.com-Shubham@1234] - selenium.common.exceptions.TimeoutException: Message: 
Stacktrace:
#0 0x55d34448d45a <unknown>
#1 0x55d343f32760 <unknown>
#2 0x55d343f84127 <unknown>
#3 0x55d343f84321 <unknown>
#4 0x55d343fd2e94 <unknown>
#5 0x55d343fa9e7d <unknown>
#6 0x55d343fd030b <unknown>
#7 0x55d343fa9c23 <unknown>
#8 0x55d343f764a5 <unknown>
#9 0x55d343f77111 <unknown>
#10 0x55d344451f1b <unknown>
#11 0x55d344455e19 <unknown>
#12 0x55d344438ac9 <unknown>
#13 0x55d3444569c8 <unknown>
#14 0x55d34441d34f <unknown>
#15 0x55d34447aa28 <unknown>
#16 0x55d34447ac06 <unknown>
#17 0x55d34448c336 <unknown>
#18 0x7f4e3649caa4 <unknown>
#19 0x7f4e36529c3c <unknown>
FAILED tests/test_login.py::test_valid_login[hrishikesh.shinde1607@gmail.com-Hrishikesh@1234] - selenium.common.exceptions.TimeoutException: Message: 
Stacktrace:
#0 0x562eaf04145a <unknown>
#1 0x562eaeae6760 <unknown>
#2 0x562eaeb38127 <unknown>
#3 0x562eaeb38321 <unknown>
#4 0x562eaeb86e94 <unknown>
#5 0x562eaeb5de7d <unknown>
#6 0x562eaeb8430b <unknown>
#7 0x562eaeb5dc23 <unknown>
#8 0x562eaeb2a4a5 <unknown>
#9 0x562eaeb2b111 <unknown>
#10 0x562eaf005f1b <unknown>
#11 0x562eaf009e19 <unknown>
#12 0x562eaefecac9 <unknown>
#13 0x562eaf00a9c8 <unknown>
#14 0x562eaefd134f <unknown>
#15 0x562eaf02ea28 <unknown>
#16 0x562eaf02ec06 <unknown>
#17 0x562eaf040336 <unknown>
#18 0x7f0f7189caa4 <unknown>
#19 0x7f0f71929c3c <unknown>
FAILED tests/test_login.py::test_invalid_email_login[username0] - selenium.common.exceptions.TimeoutException: Message: 
Stacktrace:
#0 0x56189472345a <unknown>
#1 0x5618941c8760 <unknown>
#2 0x56189421a127 <unknown>
#3 0x56189421a321 <unknown>
#4 0x561894268e94 <unknown>
#5 0x56189423fe7d <unknown>
#6 0x56189426630b <unknown>
#7 0x56189423fc23 <unknown>
#8 0x56189420c4a5 <unknown>
#9 0x56189420d111 <unknown>
#10 0x5618946e7f1b <unknown>
#11 0x5618946ebe19 <unknown>
#12 0x5618946ceac9 <unknown>
#13 0x5618946ec9c8 <unknown>
#14 0x5618946b334f <unknown>
#15 0x561894710a28 <unknown>
#16 0x561894710c06 <unknown>
#17 0x561894722336 <unknown>
#18 0x7ff8dd09caa4 <unknown>
#19 0x7ff8dd129c3c <unknown>
FAILED tests/test_login.py::test_invalid_email_login[username1] - selenium.common.exceptions.TimeoutException: Message: 
Stacktrace:
#0 0x56003aeaf45a <unknown>
#1 0x56003a954760 <unknown>
#2 0x56003a9a6127 <unknown>
#3 0x56003a9a6321 <unknown>
#4 0x56003a9f4e94 <unknown>
#5 0x56003a9cbe7d <unknown>
#6 0x56003a9f230b <unknown>
#7 0x56003a9cbc23 <unknown>
#8 0x56003a9984a5 <unknown>
#9 0x56003a999111 <unknown>
#10 0x56003ae73f1b <unknown>
#11 0x56003ae77e19 <unknown>
#12 0x56003ae5aac9 <unknown>
#13 0x56003ae789c8 <unknown>
#14 0x56003ae3f34f <unknown>
#15 0x56003ae9ca28 <unknown>
#16 0x56003ae9cc06 <unknown>
#17 0x56003aeae336 <unknown>
#18 0x7fac5e69caa4 <unknown>
#19 0x7fac5e729c3c <unknown>
FAILED tests/test_login.py::test_invalid_email_login[username2] - selenium.common.exceptions.TimeoutException: Message: 
Stacktrace:
#0 0x559a6675d45a <unknown>
#1 0x559a66202760 <unknown>
#2 0x559a66254127 <unknown>
#3 0x559a66254321 <unknown>
#4 0x559a662a2e94 <unknown>
#5 0x559a66279e7d <unknown>
#6 0x559a662a030b <unknown>
#7 0x559a66279c23 <unknown>
#8 0x559a662464a5 <unknown>
#9 0x559a66247111 <unknown>
#10 0x559a66721f1b <unknown>
#11 0x559a66725e19 <unknown>
#12 0x559a66708ac9 <unknown>
#13 0x559a667269c8 <unknown>
#14 0x559a666ed34f <unknown>
#15 0x559a6674aa28 <unknown>
#16 0x559a6674ac06 <unknown>
#17 0x559a6675c336 <unknown>
#18 0x7f672ec9caa4 <unknown>
#19 0x7f672ed29c3c <unknown>
FAILED tests/test_login.py::test_invalid_email_login[username3] - selenium.common.exceptions.TimeoutException: Message: 
Stacktrace:
#0 0x55ad17c1c45a <unknown>
#1 0x55ad176c1760 <unknown>
#2 0x55ad17713127 <unknown>
#3 0x55ad17713321 <unknown>
#4 0x55ad17761e94 <unknown>
#5 0x55ad17738e7d <unknown>
#6 0x55ad1775f30b <unknown>
#7 0x55ad17738c23 <unknown>
#8 0x55ad177054a5 <unknown>
#9 0x55ad17706111 <unknown>
#10 0x55ad17be0f1b <unknown>
#11 0x55ad17be4e19 <unknown>
#12 0x55ad17bc7ac9 <unknown>
#13 0x55ad17be59c8 <unknown>
#14 0x55ad17bac34f <unknown>
#15 0x55ad17c09a28 <unknown>
#16 0x55ad17c09c06 <unknown>
#17 0x55ad17c1b336 <unknown>
#18 0x7f95f2c9caa4 <unknown>
#19 0x7f95f2d29c3c <unknown>
FAILED tests/test_login.py::test_invalid_password_login[ranjeet.gupta@mochatechnologies.com-Password@123] - selenium.common.exceptions.TimeoutException: Message: 
Stacktrace:
#0 0x55946b2bd45a <unknown>
#1 0x55946ad62760 <unknown>
#2 0x55946adb4127 <unknown>
#3 0x55946adb4321 <unknown>
#4 0x55946ae02e94 <unknown>
#5 0x55946add9e7d <unknown>
#6 0x55946ae0030b <unknown>
#7 0x55946add9c23 <unknown>
#8 0x55946ada64a5 <unknown>
#9 0x55946ada7111 <unknown>
#10 0x55946b281f1b <unknown>
#11 0x55946b285e19 <unknown>
#12 0x55946b268ac9 <unknown>
#13 0x55946b2869c8 <unknown>
#14 0x55946b24d34f <unknown>
#15 0x55946b2aaa28 <unknown>
#16 0x55946b2aac06 <unknown>
#17 0x55946b2bc336 <unknown>
#18 0x7f859609caa4 <unknown>
#19 0x7f8596129c3c <unknown>
FAILED tests/test_login.py::test_invalid_password_login[samatakamble9@gmail.com-Password@12] - selenium.common.exceptions.TimeoutException: Message: 
Stacktrace:
#0 0x5585e86bc45a <unknown>
#1 0x5585e8161760 <unknown>
#2 0x5585e81b3127 <unknown>
#3 0x5585e81b3321 <unknown>
#4 0x5585e8201e94 <unknown>
#5 0x5585e81d8e7d <unknown>
#6 0x5585e81ff30b <unknown>
#7 0x5585e81d8c23 <unknown>
#8 0x5585e81a54a5 <unknown>
#9 0x5585e81a6111 <unknown>
#10 0x5585e8680f1b <unknown>
#11 0x5585e8684e19 <unknown>
#12 0x5585e8667ac9 <unknown>
#13 0x5585e86859c8 <unknown>
#14 0x5585e864c34f <unknown>
#15 0x5585e86a9a28 <unknown>
#16 0x5585e86a9c06 <unknown>
#17 0x5585e86bb336 <unknown>
#18 0x7f36aa09caa4 <unknown>
#19 0x7f36aa129c3c <unknown>
FAILED tests/test_login.py::test_invalid_password_login[shubhamdabir07@gmail.com-Password] - selenium.common.exceptions.TimeoutException: Message: 
Stacktrace:
#0 0x55b3aa6a645a <unknown>
#1 0x55b3aa14b760 <unknown>
#2 0x55b3aa19d127 <unknown>
#3 0x55b3aa19d321 <unknown>
#4 0x55b3aa1ebe94 <unknown>
#5 0x55b3aa1c2e7d <unknown>
#6 0x55b3aa1e930b <unknown>
#7 0x55b3aa1c2c23 <unknown>
#8 0x55b3aa18f4a5 <unknown>
#9 0x55b3aa190111 <unknown>
#10 0x55b3aa66af1b <unknown>
#11 0x55b3aa66ee19 <unknown>
#12 0x55b3aa651ac9 <unknown>
#13 0x55b3aa66f9c8 <unknown>
#14 0x55b3aa63634f <unknown>
#15 0x55b3aa693a28 <unknown>
#16 0x55b3aa693c06 <unknown>
#17 0x55b3aa6a5336 <unknown>
#18 0x7f6a6249caa4 <unknown>
#19 0x7f6a62529c3c <unknown>
FAILED tests/test_login.py::test_invalid_password_login[hrishikesh.shinde1607@gmail.com-payer@1234] - selenium.common.exceptions.TimeoutException: Message: 
Stacktrace:
#0 0x556bf256845a <unknown>
#1 0x556bf200d760 <unknown>
#2 0x556bf205f127 <unknown>
#3 0x556bf205f321 <unknown>
#4 0x556bf20ade94 <unknown>
#5 0x556bf2084e7d <unknown>
#6 0x556bf20ab30b <unknown>
#7 0x556bf2084c23 <unknown>
#8 0x556bf20514a5 <unknown>
#9 0x556bf2052111 <unknown>
#10 0x556bf252cf1b <unknown>
#11 0x556bf2530e19 <unknown>
#12 0x556bf2513ac9 <unknown>
#13 0x556bf25319c8 <unknown>
#14 0x556bf24f834f <unknown>
#15 0x556bf2555a28 <unknown>
#16 0x556bf2555c06 <unknown>
#17 0x556bf2567336 <unknown>
#18 0x7f5ee669caa4 <unknown>
#19 0x7f5ee6729c3c <unknown>
FAILED tests/test_login.py::test_blank_username_validation - selenium.common.exceptions.TimeoutException: Message: 
Stacktrace:
#0 0x55703b98045a <unknown>
#1 0x55703b425760 <unknown>
#2 0x55703b477127 <unknown>
#3 0x55703b477321 <unknown>
#4 0x55703b4c5e94 <unknown>
#5 0x55703b49ce7d <unknown>
#6 0x55703b4c330b <unknown>
#7 0x55703b49cc23 <unknown>
#8 0x55703b4694a5 <unknown>
#9 0x55703b46a111 <unknown>
#10 0x55703b944f1b <unknown>
#11 0x55703b948e19 <unknown>
#12 0x55703b92bac9 <unknown>
#13 0x55703b9499c8 <unknown>
#14 0x55703b91034f <unknown>
#15 0x55703b96da28 <unknown>
#16 0x55703b96dc06 <unknown>
#17 0x55703b97f336 <unknown>
#18 0x7f1e5069caa4 <unknown>
#19 0x7f1e50729c3c <unknown>
FAILED tests/test_login.py::test_blank_password_validation - selenium.common.exceptions.TimeoutException: Message: 
Stacktrace:
#0 0x5638924ec45a <unknown>
#1 0x563891f91760 <unknown>
#2 0x563891fe3127 <unknown>
#3 0x563891fe3321 <unknown>
#4 0x563892031e94 <unknown>
#5 0x563892008e7d <unknown>
#6 0x56389202f30b <unknown>
#7 0x563892008c23 <unknown>
#8 0x563891fd54a5 <unknown>
#9 0x563891fd6111 <unknown>
#10 0x5638924b0f1b <unknown>
#11 0x5638924b4e19 <unknown>
#12 0x563892497ac9 <unknown>
#13 0x5638924b59c8 <unknown>
#14 0x56389247c34f <unknown>
#15 0x5638924d9a28 <unknown>
#16 0x5638924d9c06 <unknown>
#17 0x5638924eb336 <unknown>
#18 0x7fa953c9caa4 <unknown>
#19 0x7fa953d29c3c <unknown>
FAILED tests/test_login.py::test_invalid_email_validation[username0] - selenium.common.exceptions.TimeoutException: Message: 
Stacktrace:
#0 0x55c08313c45a <unknown>
#1 0x55c082be1760 <unknown>
#2 0x55c082c33127 <unknown>
#3 0x55c082c33321 <unknown>
#4 0x55c082c81e94 <unknown>
#5 0x55c082c58e7d <unknown>
#6 0x55c082c7f30b <unknown>
#7 0x55c082c58c23 <unknown>
#8 0x55c082c254a5 <unknown>
#9 0x55c082c26111 <unknown>
#10 0x55c083100f1b <unknown>
#11 0x55c083104e19 <unknown>
#12 0x55c0830e7ac9 <unknown>
#13 0x55c0831059c8 <unknown>
#14 0x55c0830cc34f <unknown>
#15 0x55c083129a28 <unknown>
#16 0x55c083129c06 <unknown>
#17 0x55c08313b336 <unknown>
#18 0x7fabcda9caa4 <unknown>
#19 0x7fabcdb29c3c <unknown>
FAILED tests/test_login.py::test_invalid_email_validation[username1] - selenium.common.exceptions.TimeoutException: Message: 
Stacktrace:
#0 0x55c77f54745a <unknown>
#1 0x55c77efec760 <unknown>
#2 0x55c77f03e127 <unknown>
#3 0x55c77f03e321 <unknown>
#4 0x55c77f08ce94 <unknown>
#5 0x55c77f063e7d <unknown>
#6 0x55c77f08a30b <unknown>
#7 0x55c77f063c23 <unknown>
#8 0x55c77f0304a5 <unknown>
#9 0x55c77f031111 <unknown>
#10 0x55c77f50bf1b <unknown>
#11 0x55c77f50fe19 <unknown>
#12 0x55c77f4f2ac9 <unknown>
#13 0x55c77f5109c8 <unknown>
#14 0x55c77f4d734f <unknown>
#15 0x55c77f534a28 <unknown>
#16 0x55c77f534c06 <unknown>
#17 0x55c77f546336 <unknown>
#18 0x7f6d4ea9caa4 <unknown>
#19 0x7f6d4eb29c3c <unknown>
FAILED tests/test_login.py::test_invalid_email_validation[username2] - selenium.common.exceptions.TimeoutException: Message: 
Stacktrace:
#0 0x564debd1d45a <unknown>
#1 0x564deb7c2760 <unknown>
#2 0x564deb814127 <unknown>
#3 0x564deb814321 <unknown>
#4 0x564deb862e94 <unknown>
#5 0x564deb839e7d <unknown>
#6 0x564deb86030b <unknown>
#7 0x564deb839c23 <unknown>
#8 0x564deb8064a5 <unknown>
#9 0x564deb807111 <unknown>
#10 0x564debce1f1b <unknown>
#11 0x564debce5e19 <unknown>
#12 0x564debcc8ac9 <unknown>
#13 0x564debce69c8 <unknown>
#14 0x564debcad34f <unknown>
#15 0x564debd0aa28 <unknown>
#16 0x564debd0ac06 <unknown>
#17 0x564debd1c336 <unknown>
#18 0x7fcc8f49caa4 <unknown>
#19 0x7fcc8f529c3c <unknown>
FAILED tests/test_login.py::test_invalid_email_validation[username3] - selenium.common.exceptions.TimeoutException: Message: 
Stacktrace:
#0 0x55bd2f8da45a <unknown>
#1 0x55bd2f37f760 <unknown>
#2 0x55bd2f3d1127 <unknown>
#3 0x55bd2f3d1321 <unknown>
#4 0x55bd2f41fe94 <unknown>
#5 0x55bd2f3f6e7d <unknown>
#6 0x55bd2f41d30b <unknown>
#7 0x55bd2f3f6c23 <unknown>
#8 0x55bd2f3c34a5 <unknown>
#9 0x55bd2f3c4111 <unknown>
#10 0x55bd2f89ef1b <unknown>
#11 0x55bd2f8a2e19 <unknown>
#12 0x55bd2f885ac9 <unknown>
#13 0x55bd2f8a39c8 <unknown>
#14 0x55bd2f86a34f <unknown>
#15 0x55bd2f8c7a28 <unknown>
#16 0x55bd2f8c7c06 <unknown>
#17 0x55bd2f8d9336 <unknown>
#18 0x7fe676e9caa4 <unknown>
#19 0x7fe676f29c3c <unknown>
FAILED tests/test_login.py::test_invalid_email_validation[username4] - selenium.common.exceptions.TimeoutException: Message: 
Stacktrace:
#0 0x555ea9dc545a <unknown>
#1 0x555ea986a760 <unknown>
#2 0x555ea98bc127 <unknown>
#3 0x555ea98bc321 <unknown>
#4 0x555ea990ae94 <unknown>
#5 0x555ea98e1e7d <unknown>
#6 0x555ea990830b <unknown>
#7 0x555ea98e1c23 <unknown>
#8 0x555ea98ae4a5 <unknown>
#9 0x555ea98af111 <unknown>
#10 0x555ea9d89f1b <unknown>
#11 0x555ea9d8de19 <unknown>
#12 0x555ea9d70ac9 <unknown>
#13 0x555ea9d8e9c8 <unknown>
#14 0x555ea9d5534f <unknown>
#15 0x555ea9db2a28 <unknown>
#16 0x555ea9db2c06 <unknown>
#17 0x555ea9dc4336 <unknown>
#18 0x7f2b27c9caa4 <unknown>
#19 0x7f2b27d29c3c <unknown>
======================= 19 failed in 2338.39s (0:38:58) ========================
--------------------------------------------
Test Run Finished: 2025-07-05 04:35:59
Duration: 2341 seconds
Status: FAILURE
Exit Code: 1
============================================
