=== LOGIN TESTS STARTED: 2025-10-25 03:49:05 ===
============================= test session starts ==============================
platform linux -- Python 3.13.7, pytest-8.3.5, pluggy-1.6.0 -- /opt/hostedtoolcache/Python/3.13.7/x64/bin/python
cachedir: .pytest_cache
metadata: {'Python': '3.13.7', 'Platform': 'Linux-6.11.0-1018-azure-x86_64-with-glibc2.39', 'Packages': {'pytest': '8.3.5', 'pluggy': '1.6.0'}, 'Plugins': {'html': '4.1.1', 'rerunfailures': '16.1', 'Faker': '37.12.0', 'xdist': '3.8.0', 'metadata': '3.1.1'}, 'CI': 'true', 'JAVA_HOME': '/usr/lib/jvm/temurin-17-jdk-amd64'}
rootdir: /home/runner/work/Mocha_accounting/Mocha_accounting
plugins: html-4.1.1, rerunfailures-16.1, Faker-37.12.0, xdist-3.8.0, metadata-3.1.1
collecting ... collected 15 items

tests/test_signup_login/test_login.py::test_valid_login[ranjeet.gupta@mochatechnologies.com-Ais@1234] PASSED [  6%]
tests/test_signup_login/test_login.py::test_valid_login[samatakamble9@gmail.com-Samata@16] PASSED [ 13%]
tests/test_signup_login/test_login.py::test_valid_login[shubhamdabir07@gmail.com-Shubham@1234] PASSED [ 20%]
tests/test_signup_login/test_login.py::test_valid_login[hrishikesh.shinde1607@gmail.com-Hrishikesh@1234] PASSED [ 26%]
tests/test_signup_login/test_login.py::test_invalid_email_login[username0] PASSED [ 33%]
tests/test_signup_login/test_login.py::test_invalid_email_login[username1] PASSED [ 40%]
tests/test_signup_login/test_login.py::test_invalid_email_login[username2] PASSED [ 46%]
tests/test_signup_login/test_login.py::test_invalid_email_login[username3] PASSED [ 53%]
tests/test_signup_login/test_login.py::test_blank_username_validation FAILED [ 60%]
tests/test_signup_login/test_login.py::test_blank_password_validation FAILED [ 66%]
tests/test_signup_login/test_login.py::test_invalid_email_validation[username0] FAILED [ 73%]
tests/test_signup_login/test_login.py::test_invalid_email_validation[username1] FAILED [ 80%]
tests/test_signup_login/test_login.py::test_invalid_email_validation[username2] FAILED [ 86%]
tests/test_signup_login/test_login.py::test_invalid_email_validation[username3] FAILED [ 93%]
tests/test_signup_login/test_login.py::test_invalid_email_validation[username4] FAILED [100%]

=================================== FAILURES ===================================
________________________ test_blank_username_validation ________________________

sign_login_setup = <selenium.webdriver.chrome.webdriver.WebDriver (session="b13eab6fe8fd3a8b627950c4e49f6d6f")>
login_test_data = {'expected_password_validation': 'Password is required', 'expected_username_validation': 'Email is required.', 'expect...ect_email_verification_msg': "Please check your email address. If you don't have an account, you can create one.", ...}

    def test_blank_username_validation(sign_login_setup, login_test_data):
        driver = sign_login_setup
        login_page = LoginPage(driver)
        #login_page.enter_password(valid_password[0])
        login_page.click_username()
        login_page.disabled_click_login_button()
>       login_page.username_blank_validation(login_test_data)

tests/test_signup_login/test_login.py:51: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <pages.login_page.LoginPage object at 0x7fc3e6c4b550>
login_test_data = {'expected_password_validation': 'Password is required', 'expected_username_validation': 'Email is required.', 'expect...ect_email_verification_msg': "Please check your email address. If you don't have an account, you can create one.", ...}

    def username_blank_validation(self, login_test_data):
>       self.actions.wait_for_element(self.username_validation)

pages/login_page.py:73: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <actions.actions.Actions object at 0x7fc3e6c4bd50>
locator = ('xpath', "//div[normalize-space()='Email is required.']")
timeout = 100

    def wait_for_element(self, locator, timeout=100):
>       WebDriverWait(self.driver, timeout).until(EC.visibility_of_element_located(locator))

actions/actions.py:80: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <selenium.webdriver.support.wait.WebDriverWait (session="b13eab6fe8fd3a8b627950c4e49f6d6f")>
method = <function visibility_of_element_located.<locals>._predicate at 0x7fc3e5a42fc0>
message = ''

    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = "") -> T:
        """Wait until the method returns a value that is not False.
    
        Calls the method provided with the driver as an argument until the
        return value does not evaluate to ``False``.
    
        Parameters:
        ----------
        method: callable(WebDriver)
            - A callable object that takes a WebDriver instance as an argument.
    
        message: str
            - Optional message for :exc:`TimeoutException`
    
        Return:
        -------
        object: T
            - The result of the last call to `method`
    
        Raises:
        -------
        TimeoutException
            - If 'method' does not return a truthy value within the WebDriverWait
            object's timeout
    
        Example:
        --------
        >>> from selenium.webdriver.common.by import By
        >>> from selenium.webdriver.support.ui import WebDriverWait
        >>> from selenium.webdriver.support import expected_conditions as EC
    
        # Wait until an element is visible on the page
        >>> wait = WebDriverWait(driver, 10)
        >>> element = wait.until(EC.visibility_of_element_located((By.ID, "exampleId")))
        >>> print(element.text)
        """
        screen = None
        stacktrace = None
    
        end_time = time.monotonic() + self._timeout
        while True:
            try:
                value = method(self._driver)
                if value:
                    return value
            except self._ignored_exceptions as exc:
                screen = getattr(exc, "screen", None)
                stacktrace = getattr(exc, "stacktrace", None)
            if time.monotonic() > end_time:
                break
            time.sleep(self._poll)
>       raise TimeoutException(message, screen, stacktrace)
E       selenium.common.exceptions.TimeoutException: Message: 
E       Stacktrace:
E       #0 0x5624b2b4efea <unknown>
E       #1 0x5624b25ccd06 <unknown>
E       #2 0x5624b261ee6d <unknown>
E       #3 0x5624b261f101 <unknown>
E       #4 0x5624b266d6b4 <unknown>
E       #5 0x5624b2644e3d <unknown>
E       #6 0x5624b266ab3b <unknown>
E       #7 0x5624b2644be3 <unknown>
E       #8 0x5624b26112d2 <unknown>
E       #9 0x5624b2611f91 <unknown>
E       #10 0x5624b2b129e8 <unknown>
E       #11 0x5624b2b1684f <unknown>
E       #12 0x5624b2af9ec9 <unknown>
E       #13 0x5624b2b173f5 <unknown>
E       #14 0x5624b2adf74f <unknown>
E       #15 0x5624b2b3bcc8 <unknown>
E       #16 0x5624b2b3bea3 <unknown>
E       #17 0x5624b2b4df83 <unknown>
E       #18 0x7f61ea69caa4 <unknown>
E       #19 0x7f61ea729c6c <unknown>

/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/selenium/webdriver/support/wait.py:146: TimeoutException
---------------------------- Captured stderr setup -----------------------------
2025-10-25 03:49:45,950 - INFO - Starting test with Chrome browser
2025-10-25 03:49:45,950 - INFO - ====== WebDriver manager ======
2025-10-25 03:49:46,016 - INFO - Get LATEST chromedriver version for google-chrome
2025-10-25 03:49:46,059 - INFO - Get LATEST chromedriver version for google-chrome
2025-10-25 03:49:46,098 - INFO - Driver [/home/runner/.wdm/drivers/chromedriver/linux64/141.0.7390.122/chromedriver-linux64/chromedriver] found in cache
2025-10-25 03:49:47,173 - INFO - Navigated to: https://app.mochaaccounting.com/login
------------------------------ Captured log setup ------------------------------
INFO     tests.test_signup_login.conftest:conftest.py:78 Starting test with Chrome browser
INFO     WDM:logger.py:11 ====== WebDriver manager ======
INFO     WDM:logger.py:11 Get LATEST chromedriver version for google-chrome
INFO     WDM:logger.py:11 Get LATEST chromedriver version for google-chrome
INFO     WDM:logger.py:11 Driver [/home/runner/.wdm/drivers/chromedriver/linux64/141.0.7390.122/chromedriver-linux64/chromedriver] found in cache
INFO     tests.test_signup_login.conftest:conftest.py:134 Navigated to: https://app.mochaaccounting.com/login
--------------------------- Captured stderr teardown ---------------------------
2025-10-25 03:51:32,202 - INFO - Closing browser
---------------------------- Captured log teardown -----------------------------
INFO     tests.test_signup_login.conftest:conftest.py:144 Closing browser
________________________ test_blank_password_validation ________________________

sign_login_setup = <selenium.webdriver.chrome.webdriver.WebDriver (session="b4ef3563c4bd56ea17e4e34d791225de")>
login_test_data = {'expected_password_validation': 'Password is required', 'expected_username_validation': 'Email is required.', 'expect...ect_email_verification_msg': "Please check your email address. If you don't have an account, you can create one.", ...}

    def test_blank_password_validation(sign_login_setup,login_test_data):
        driver = sign_login_setup
        login_page = LoginPage(driver)
        login_page.enter_username(valid_username[0])
        login_page.click_password()
        login_page.disabled_click_login_button()
>       login_page.password_blank_validation(login_test_data)

tests/test_signup_login/test_login.py:60: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <pages.login_page.LoginPage object at 0x7fc3e691c450>
login_test_data = {'expected_password_validation': 'Password is required', 'expected_username_validation': 'Email is required.', 'expect...ect_email_verification_msg': "Please check your email address. If you don't have an account, you can create one.", ...}

    def password_blank_validation(self, login_test_data):
>       self.actions.wait_for_element(self.password_validation)

pages/login_page.py:79: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <actions.actions.Actions object at 0x7fc3e691cc50>
locator = ('xpath', "//div[normalize-space()='Password is required']")
timeout = 100

    def wait_for_element(self, locator, timeout=100):
>       WebDriverWait(self.driver, timeout).until(EC.visibility_of_element_located(locator))

actions/actions.py:80: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <selenium.webdriver.support.wait.WebDriverWait (session="b4ef3563c4bd56ea17e4e34d791225de")>
method = <function visibility_of_element_located.<locals>._predicate at 0x7fc3e5a43240>
message = ''

    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = "") -> T:
        """Wait until the method returns a value that is not False.
    
        Calls the method provided with the driver as an argument until the
        return value does not evaluate to ``False``.
    
        Parameters:
        ----------
        method: callable(WebDriver)
            - A callable object that takes a WebDriver instance as an argument.
    
        message: str
            - Optional message for :exc:`TimeoutException`
    
        Return:
        -------
        object: T
            - The result of the last call to `method`
    
        Raises:
        -------
        TimeoutException
            - If 'method' does not return a truthy value within the WebDriverWait
            object's timeout
    
        Example:
        --------
        >>> from selenium.webdriver.common.by import By
        >>> from selenium.webdriver.support.ui import WebDriverWait
        >>> from selenium.webdriver.support import expected_conditions as EC
    
        # Wait until an element is visible on the page
        >>> wait = WebDriverWait(driver, 10)
        >>> element = wait.until(EC.visibility_of_element_located((By.ID, "exampleId")))
        >>> print(element.text)
        """
        screen = None
        stacktrace = None
    
        end_time = time.monotonic() + self._timeout
        while True:
            try:
                value = method(self._driver)
                if value:
                    return value
            except self._ignored_exceptions as exc:
                screen = getattr(exc, "screen", None)
                stacktrace = getattr(exc, "stacktrace", None)
            if time.monotonic() > end_time:
                break
            time.sleep(self._poll)
>       raise TimeoutException(message, screen, stacktrace)
E       selenium.common.exceptions.TimeoutException: Message: 
E       Stacktrace:
E       #0 0x55fc7f16afea <unknown>
E       #1 0x55fc7ebe8d06 <unknown>
E       #2 0x55fc7ec3ae6d <unknown>
E       #3 0x55fc7ec3b101 <unknown>
E       #4 0x55fc7ec896b4 <unknown>
E       #5 0x55fc7ec60e3d <unknown>
E       #6 0x55fc7ec86b3b <unknown>
E       #7 0x55fc7ec60be3 <unknown>
E       #8 0x55fc7ec2d2d2 <unknown>
E       #9 0x55fc7ec2df91 <unknown>
E       #10 0x55fc7f12e9e8 <unknown>
E       #11 0x55fc7f13284f <unknown>
E       #12 0x55fc7f115ec9 <unknown>
E       #13 0x55fc7f1333f5 <unknown>
E       #14 0x55fc7f0fb74f <unknown>
E       #15 0x55fc7f157cc8 <unknown>
E       #16 0x55fc7f157ea3 <unknown>
E       #17 0x55fc7f169f83 <unknown>
E       #18 0x7f36cc89caa4 <unknown>
E       #19 0x7f36cc929c6c <unknown>

/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/selenium/webdriver/support/wait.py:146: TimeoutException
---------------------------- Captured stderr setup -----------------------------
2025-10-25 03:51:32,294 - INFO - Starting test with Chrome browser
2025-10-25 03:51:32,294 - INFO - ====== WebDriver manager ======
2025-10-25 03:51:32,360 - INFO - Get LATEST chromedriver version for google-chrome
2025-10-25 03:51:32,398 - INFO - Get LATEST chromedriver version for google-chrome
2025-10-25 03:51:32,435 - INFO - Driver [/home/runner/.wdm/drivers/chromedriver/linux64/141.0.7390.122/chromedriver-linux64/chromedriver] found in cache
2025-10-25 03:51:33,675 - INFO - Navigated to: https://app.mochaaccounting.com/login
------------------------------ Captured log setup ------------------------------
INFO     tests.test_signup_login.conftest:conftest.py:78 Starting test with Chrome browser
INFO     WDM:logger.py:11 ====== WebDriver manager ======
INFO     WDM:logger.py:11 Get LATEST chromedriver version for google-chrome
INFO     WDM:logger.py:11 Get LATEST chromedriver version for google-chrome
INFO     WDM:logger.py:11 Driver [/home/runner/.wdm/drivers/chromedriver/linux64/141.0.7390.122/chromedriver-linux64/chromedriver] found in cache
INFO     tests.test_signup_login.conftest:conftest.py:134 Navigated to: https://app.mochaaccounting.com/login
--------------------------- Captured stderr teardown ---------------------------
2025-10-25 03:53:19,973 - INFO - Closing browser
---------------------------- Captured log teardown -----------------------------
INFO     tests.test_signup_login.conftest:conftest.py:144 Closing browser
___________________ test_invalid_email_validation[username0] ___________________

sign_login_setup = <selenium.webdriver.chrome.webdriver.WebDriver (session="cc26b50c6d5e1fd4dcf8d50117156542")>
login_test_data = {'expected_password_validation': 'Password is required', 'expected_username_validation': 'Email is required.', 'expect...ect_email_verification_msg': "Please check your email address. If you don't have an account, you can create one.", ...}
username = ('yash10%gmail.com',)

    @pytest.mark.parametrize("username", zip(invalid_format_username))
    def test_invalid_email_validation(sign_login_setup, login_test_data, username):
        driver = sign_login_setup
        login_page = LoginPage(driver)
        login_page.enter_username(username)
        login_page.disabled_click_login_button()
>       login_page.invalid_email_validation(login_test_data)

tests/test_signup_login/test_login.py:76: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <pages.login_page.LoginPage object at 0x7fc3e6bdda90>
login_test_data = {'expected_password_validation': 'Password is required', 'expected_username_validation': 'Email is required.', 'expect...ect_email_verification_msg': "Please check your email address. If you don't have an account, you can create one.", ...}

    def invalid_email_validation(self, login_test_data):
>       self.actions.wait_for_element(self.invalid_email_verification_msg)

pages/login_page.py:91: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <actions.actions.Actions object at 0x7fc3e6bdcc80>
locator = ('xpath', "//div[@class='invalid-feedback']"), timeout = 100

    def wait_for_element(self, locator, timeout=100):
>       WebDriverWait(self.driver, timeout).until(EC.visibility_of_element_located(locator))

actions/actions.py:80: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <selenium.webdriver.support.wait.WebDriverWait (session="cc26b50c6d5e1fd4dcf8d50117156542")>
method = <function visibility_of_element_located.<locals>._predicate at 0x7fc3e6920220>
message = ''

    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = "") -> T:
        """Wait until the method returns a value that is not False.
    
        Calls the method provided with the driver as an argument until the
        return value does not evaluate to ``False``.
    
        Parameters:
        ----------
        method: callable(WebDriver)
            - A callable object that takes a WebDriver instance as an argument.
    
        message: str
            - Optional message for :exc:`TimeoutException`
    
        Return:
        -------
        object: T
            - The result of the last call to `method`
    
        Raises:
        -------
        TimeoutException
            - If 'method' does not return a truthy value within the WebDriverWait
            object's timeout
    
        Example:
        --------
        >>> from selenium.webdriver.common.by import By
        >>> from selenium.webdriver.support.ui import WebDriverWait
        >>> from selenium.webdriver.support import expected_conditions as EC
    
        # Wait until an element is visible on the page
        >>> wait = WebDriverWait(driver, 10)
        >>> element = wait.until(EC.visibility_of_element_located((By.ID, "exampleId")))
        >>> print(element.text)
        """
        screen = None
        stacktrace = None
    
        end_time = time.monotonic() + self._timeout
        while True:
            try:
                value = method(self._driver)
                if value:
                    return value
            except self._ignored_exceptions as exc:
                screen = getattr(exc, "screen", None)
                stacktrace = getattr(exc, "stacktrace", None)
            if time.monotonic() > end_time:
                break
            time.sleep(self._poll)
>       raise TimeoutException(message, screen, stacktrace)
E       selenium.common.exceptions.TimeoutException: Message: 
E       Stacktrace:
E       #0 0x55c844149fea <unknown>
E       #1 0x55c843bc7d06 <unknown>
E       #2 0x55c843c19e6d <unknown>
E       #3 0x55c843c1a101 <unknown>
E       #4 0x55c843c686b4 <unknown>
E       #5 0x55c843c3fe3d <unknown>
E       #6 0x55c843c65b3b <unknown>
E       #7 0x55c843c3fbe3 <unknown>
E       #8 0x55c843c0c2d2 <unknown>
E       #9 0x55c843c0cf91 <unknown>
E       #10 0x55c84410d9e8 <unknown>
E       #11 0x55c84411184f <unknown>
E       #12 0x55c8440f4ec9 <unknown>
E       #13 0x55c8441123f5 <unknown>
E       #14 0x55c8440da74f <unknown>
E       #15 0x55c844136cc8 <unknown>
E       #16 0x55c844136ea3 <unknown>
E       #17 0x55c844148f83 <unknown>
E       #18 0x7f526369caa4 <unknown>
E       #19 0x7f5263729c6c <unknown>

/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/selenium/webdriver/support/wait.py:146: TimeoutException
---------------------------- Captured stderr setup -----------------------------
2025-10-25 03:53:20,069 - INFO - Starting test with Chrome browser
2025-10-25 03:53:20,069 - INFO - ====== WebDriver manager ======
2025-10-25 03:53:20,135 - INFO - Get LATEST chromedriver version for google-chrome
2025-10-25 03:53:20,173 - INFO - Get LATEST chromedriver version for google-chrome
2025-10-25 03:53:20,213 - INFO - Driver [/home/runner/.wdm/drivers/chromedriver/linux64/141.0.7390.122/chromedriver-linux64/chromedriver] found in cache
2025-10-25 03:53:20,905 - INFO - Navigated to: https://app.mochaaccounting.com/login
------------------------------ Captured log setup ------------------------------
INFO     tests.test_signup_login.conftest:conftest.py:78 Starting test with Chrome browser
INFO     WDM:logger.py:11 ====== WebDriver manager ======
INFO     WDM:logger.py:11 Get LATEST chromedriver version for google-chrome
INFO     WDM:logger.py:11 Get LATEST chromedriver version for google-chrome
INFO     WDM:logger.py:11 Driver [/home/runner/.wdm/drivers/chromedriver/linux64/141.0.7390.122/chromedriver-linux64/chromedriver] found in cache
INFO     tests.test_signup_login.conftest:conftest.py:134 Navigated to: https://app.mochaaccounting.com/login
--------------------------- Captured stderr teardown ---------------------------
2025-10-25 03:55:06,233 - INFO - Closing browser
---------------------------- Captured log teardown -----------------------------
INFO     tests.test_signup_login.conftest:conftest.py:144 Closing browser
___________________ test_invalid_email_validation[username1] ___________________

sign_login_setup = <selenium.webdriver.chrome.webdriver.WebDriver (session="082f9dbad5204ca194f493bd6e692660")>
login_test_data = {'expected_password_validation': 'Password is required', 'expected_username_validation': 'Email is required.', 'expect...ect_email_verification_msg': "Please check your email address. If you don't have an account, you can create one.", ...}
username = ('payeryash1gmail.com',)

    @pytest.mark.parametrize("username", zip(invalid_format_username))
    def test_invalid_email_validation(sign_login_setup, login_test_data, username):
        driver = sign_login_setup
        login_page = LoginPage(driver)
        login_page.enter_username(username)
        login_page.disabled_click_login_button()
>       login_page.invalid_email_validation(login_test_data)

tests/test_signup_login/test_login.py:76: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <pages.login_page.LoginPage object at 0x7fc3e6bdf020>
login_test_data = {'expected_password_validation': 'Password is required', 'expected_username_validation': 'Email is required.', 'expect...ect_email_verification_msg': "Please check your email address. If you don't have an account, you can create one.", ...}

    def invalid_email_validation(self, login_test_data):
>       self.actions.wait_for_element(self.invalid_email_verification_msg)

pages/login_page.py:91: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <actions.actions.Actions object at 0x7fc3e6bdd7c0>
locator = ('xpath', "//div[@class='invalid-feedback']"), timeout = 100

    def wait_for_element(self, locator, timeout=100):
>       WebDriverWait(self.driver, timeout).until(EC.visibility_of_element_located(locator))

actions/actions.py:80: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <selenium.webdriver.support.wait.WebDriverWait (session="082f9dbad5204ca194f493bd6e692660")>
method = <function visibility_of_element_located.<locals>._predicate at 0x7fc3e6920680>
message = ''

    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = "") -> T:
        """Wait until the method returns a value that is not False.
    
        Calls the method provided with the driver as an argument until the
        return value does not evaluate to ``False``.
    
        Parameters:
        ----------
        method: callable(WebDriver)
            - A callable object that takes a WebDriver instance as an argument.
    
        message: str
            - Optional message for :exc:`TimeoutException`
    
        Return:
        -------
        object: T
            - The result of the last call to `method`
    
        Raises:
        -------
        TimeoutException
            - If 'method' does not return a truthy value within the WebDriverWait
            object's timeout
    
        Example:
        --------
        >>> from selenium.webdriver.common.by import By
        >>> from selenium.webdriver.support.ui import WebDriverWait
        >>> from selenium.webdriver.support import expected_conditions as EC
    
        # Wait until an element is visible on the page
        >>> wait = WebDriverWait(driver, 10)
        >>> element = wait.until(EC.visibility_of_element_located((By.ID, "exampleId")))
        >>> print(element.text)
        """
        screen = None
        stacktrace = None
    
        end_time = time.monotonic() + self._timeout
        while True:
            try:
                value = method(self._driver)
                if value:
                    return value
            except self._ignored_exceptions as exc:
                screen = getattr(exc, "screen", None)
                stacktrace = getattr(exc, "stacktrace", None)
            if time.monotonic() > end_time:
                break
            time.sleep(self._poll)
>       raise TimeoutException(message, screen, stacktrace)
E       selenium.common.exceptions.TimeoutException: Message: 
E       Stacktrace:
E       #0 0x55bba9587fea <unknown>
E       #1 0x55bba9005d06 <unknown>
E       #2 0x55bba9057e6d <unknown>
E       #3 0x55bba9058101 <unknown>
E       #4 0x55bba90a66b4 <unknown>
E       #5 0x55bba907de3d <unknown>
E       #6 0x55bba90a3b3b <unknown>
E       #7 0x55bba907dbe3 <unknown>
E       #8 0x55bba904a2d2 <unknown>
E       #9 0x55bba904af91 <unknown>
E       #10 0x55bba954b9e8 <unknown>
E       #11 0x55bba954f84f <unknown>
E       #12 0x55bba9532ec9 <unknown>
E       #13 0x55bba95503f5 <unknown>
E       #14 0x55bba951874f <unknown>
E       #15 0x55bba9574cc8 <unknown>
E       #16 0x55bba9574ea3 <unknown>
E       #17 0x55bba9586f83 <unknown>
E       #18 0x7fd4cd09caa4 <unknown>
E       #19 0x7fd4cd129c6c <unknown>

/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/selenium/webdriver/support/wait.py:146: TimeoutException
---------------------------- Captured stderr setup -----------------------------
2025-10-25 03:55:06,328 - INFO - Starting test with Chrome browser
2025-10-25 03:55:06,328 - INFO - ====== WebDriver manager ======
2025-10-25 03:55:06,393 - INFO - Get LATEST chromedriver version for google-chrome
2025-10-25 03:55:06,436 - INFO - Get LATEST chromedriver version for google-chrome
2025-10-25 03:55:06,472 - INFO - Driver [/home/runner/.wdm/drivers/chromedriver/linux64/141.0.7390.122/chromedriver-linux64/chromedriver] found in cache
2025-10-25 03:55:08,147 - INFO - Navigated to: https://app.mochaaccounting.com/login
------------------------------ Captured log setup ------------------------------
INFO     tests.test_signup_login.conftest:conftest.py:78 Starting test with Chrome browser
INFO     WDM:logger.py:11 ====== WebDriver manager ======
INFO     WDM:logger.py:11 Get LATEST chromedriver version for google-chrome
INFO     WDM:logger.py:11 Get LATEST chromedriver version for google-chrome
INFO     WDM:logger.py:11 Driver [/home/runner/.wdm/drivers/chromedriver/linux64/141.0.7390.122/chromedriver-linux64/chromedriver] found in cache
INFO     tests.test_signup_login.conftest:conftest.py:134 Navigated to: https://app.mochaaccounting.com/login
--------------------------- Captured stderr teardown ---------------------------
2025-10-25 03:56:53,019 - INFO - Closing browser
---------------------------- Captured log teardown -----------------------------
INFO     tests.test_signup_login.conftest:conftest.py:144 Closing browser
___________________ test_invalid_email_validation[username2] ___________________

sign_login_setup = <selenium.webdriver.chrome.webdriver.WebDriver (session="d49fa7be94a98e8f10b9b256c2479225")>
login_test_data = {'expected_password_validation': 'Password is required', 'expected_username_validation': 'Email is required.', 'expect...ect_email_verification_msg': "Please check your email address. If you don't have an account, you can create one.", ...}
username = (' payeryash10@gmai|com',)

    @pytest.mark.parametrize("username", zip(invalid_format_username))
    def test_invalid_email_validation(sign_login_setup, login_test_data, username):
        driver = sign_login_setup
        login_page = LoginPage(driver)
        login_page.enter_username(username)
        login_page.disabled_click_login_button()
>       login_page.invalid_email_validation(login_test_data)

tests/test_signup_login/test_login.py:76: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <pages.login_page.LoginPage object at 0x7fc3e6bef3f0>
login_test_data = {'expected_password_validation': 'Password is required', 'expected_username_validation': 'Email is required.', 'expect...ect_email_verification_msg': "Please check your email address. If you don't have an account, you can create one.", ...}

    def invalid_email_validation(self, login_test_data):
>       self.actions.wait_for_element(self.invalid_email_verification_msg)

pages/login_page.py:91: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <actions.actions.Actions object at 0x7fc3e6befbd0>
locator = ('xpath', "//div[@class='invalid-feedback']"), timeout = 100

    def wait_for_element(self, locator, timeout=100):
>       WebDriverWait(self.driver, timeout).until(EC.visibility_of_element_located(locator))

actions/actions.py:80: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <selenium.webdriver.support.wait.WebDriverWait (session="d49fa7be94a98e8f10b9b256c2479225")>
method = <function visibility_of_element_located.<locals>._predicate at 0x7fc3e6920c20>
message = ''

    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = "") -> T:
        """Wait until the method returns a value that is not False.
    
        Calls the method provided with the driver as an argument until the
        return value does not evaluate to ``False``.
    
        Parameters:
        ----------
        method: callable(WebDriver)
            - A callable object that takes a WebDriver instance as an argument.
    
        message: str
            - Optional message for :exc:`TimeoutException`
    
        Return:
        -------
        object: T
            - The result of the last call to `method`
    
        Raises:
        -------
        TimeoutException
            - If 'method' does not return a truthy value within the WebDriverWait
            object's timeout
    
        Example:
        --------
        >>> from selenium.webdriver.common.by import By
        >>> from selenium.webdriver.support.ui import WebDriverWait
        >>> from selenium.webdriver.support import expected_conditions as EC
    
        # Wait until an element is visible on the page
        >>> wait = WebDriverWait(driver, 10)
        >>> element = wait.until(EC.visibility_of_element_located((By.ID, "exampleId")))
        >>> print(element.text)
        """
        screen = None
        stacktrace = None
    
        end_time = time.monotonic() + self._timeout
        while True:
            try:
                value = method(self._driver)
                if value:
                    return value
            except self._ignored_exceptions as exc:
                screen = getattr(exc, "screen", None)
                stacktrace = getattr(exc, "stacktrace", None)
            if time.monotonic() > end_time:
                break
            time.sleep(self._poll)
>       raise TimeoutException(message, screen, stacktrace)
E       selenium.common.exceptions.TimeoutException: Message: 
E       Stacktrace:
E       #0 0x555d03706fea <unknown>
E       #1 0x555d03184d06 <unknown>
E       #2 0x555d031d6e6d <unknown>
E       #3 0x555d031d7101 <unknown>
E       #4 0x555d032256b4 <unknown>
E       #5 0x555d031fce3d <unknown>
E       #6 0x555d03222b3b <unknown>
E       #7 0x555d031fcbe3 <unknown>
E       #8 0x555d031c92d2 <unknown>
E       #9 0x555d031c9f91 <unknown>
E       #10 0x555d036ca9e8 <unknown>
E       #11 0x555d036ce84f <unknown>
E       #12 0x555d036b1ec9 <unknown>
E       #13 0x555d036cf3f5 <unknown>
E       #14 0x555d0369774f <unknown>
E       #15 0x555d036f3cc8 <unknown>
E       #16 0x555d036f3ea3 <unknown>
E       #17 0x555d03705f83 <unknown>
E       #18 0x7fa57969caa4 <unknown>
E       #19 0x7fa579729c6c <unknown>

/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/selenium/webdriver/support/wait.py:146: TimeoutException
---------------------------- Captured stderr setup -----------------------------
2025-10-25 03:56:53,115 - INFO - Starting test with Chrome browser
2025-10-25 03:56:53,115 - INFO - ====== WebDriver manager ======
2025-10-25 03:56:53,182 - INFO - Get LATEST chromedriver version for google-chrome
2025-10-25 03:56:53,222 - INFO - Get LATEST chromedriver version for google-chrome
2025-10-25 03:56:53,260 - INFO - Driver [/home/runner/.wdm/drivers/chromedriver/linux64/141.0.7390.122/chromedriver-linux64/chromedriver] found in cache
2025-10-25 03:56:54,656 - INFO - Navigated to: https://app.mochaaccounting.com/login
------------------------------ Captured log setup ------------------------------
INFO     tests.test_signup_login.conftest:conftest.py:78 Starting test with Chrome browser
INFO     WDM:logger.py:11 ====== WebDriver manager ======
INFO     WDM:logger.py:11 Get LATEST chromedriver version for google-chrome
INFO     WDM:logger.py:11 Get LATEST chromedriver version for google-chrome
INFO     WDM:logger.py:11 Driver [/home/runner/.wdm/drivers/chromedriver/linux64/141.0.7390.122/chromedriver-linux64/chromedriver] found in cache
INFO     tests.test_signup_login.conftest:conftest.py:134 Navigated to: https://app.mochaaccounting.com/login
--------------------------- Captured stderr teardown ---------------------------
2025-10-25 03:58:39,754 - INFO - Closing browser
---------------------------- Captured log teardown -----------------------------
INFO     tests.test_signup_login.conftest:conftest.py:144 Closing browser
___________________ test_invalid_email_validation[username3] ___________________

sign_login_setup = <selenium.webdriver.chrome.webdriver.WebDriver (session="7a09081502fdffe6671ce536ce70d817")>
login_test_data = {'expected_password_validation': 'Password is required', 'expected_username_validation': 'Email is required.', 'expect...ect_email_verification_msg': "Please check your email address. If you don't have an account, you can create one.", ...}
username = ('payergmail.com',)

    @pytest.mark.parametrize("username", zip(invalid_format_username))
    def test_invalid_email_validation(sign_login_setup, login_test_data, username):
        driver = sign_login_setup
        login_page = LoginPage(driver)
        login_page.enter_username(username)
        login_page.disabled_click_login_button()
>       login_page.invalid_email_validation(login_test_data)

tests/test_signup_login/test_login.py:76: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <pages.login_page.LoginPage object at 0x7fc3e68c0bb0>
login_test_data = {'expected_password_validation': 'Password is required', 'expected_username_validation': 'Email is required.', 'expect...ect_email_verification_msg': "Please check your email address. If you don't have an account, you can create one.", ...}

    def invalid_email_validation(self, login_test_data):
>       self.actions.wait_for_element(self.invalid_email_verification_msg)

pages/login_page.py:91: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <actions.actions.Actions object at 0x7fc3e68c1390>
locator = ('xpath', "//div[@class='invalid-feedback']"), timeout = 100

    def wait_for_element(self, locator, timeout=100):
>       WebDriverWait(self.driver, timeout).until(EC.visibility_of_element_located(locator))

actions/actions.py:80: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <selenium.webdriver.support.wait.WebDriverWait (session="7a09081502fdffe6671ce536ce70d817")>
method = <function visibility_of_element_located.<locals>._predicate at 0x7fc3e6921260>
message = ''

    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = "") -> T:
        """Wait until the method returns a value that is not False.
    
        Calls the method provided with the driver as an argument until the
        return value does not evaluate to ``False``.
    
        Parameters:
        ----------
        method: callable(WebDriver)
            - A callable object that takes a WebDriver instance as an argument.
    
        message: str
            - Optional message for :exc:`TimeoutException`
    
        Return:
        -------
        object: T
            - The result of the last call to `method`
    
        Raises:
        -------
        TimeoutException
            - If 'method' does not return a truthy value within the WebDriverWait
            object's timeout
    
        Example:
        --------
        >>> from selenium.webdriver.common.by import By
        >>> from selenium.webdriver.support.ui import WebDriverWait
        >>> from selenium.webdriver.support import expected_conditions as EC
    
        # Wait until an element is visible on the page
        >>> wait = WebDriverWait(driver, 10)
        >>> element = wait.until(EC.visibility_of_element_located((By.ID, "exampleId")))
        >>> print(element.text)
        """
        screen = None
        stacktrace = None
    
        end_time = time.monotonic() + self._timeout
        while True:
            try:
                value = method(self._driver)
                if value:
                    return value
            except self._ignored_exceptions as exc:
                screen = getattr(exc, "screen", None)
                stacktrace = getattr(exc, "stacktrace", None)
            if time.monotonic() > end_time:
                break
            time.sleep(self._poll)
>       raise TimeoutException(message, screen, stacktrace)
E       selenium.common.exceptions.TimeoutException: Message: 
E       Stacktrace:
E       #0 0x555631791fea <unknown>
E       #1 0x55563120fd06 <unknown>
E       #2 0x555631261e6d <unknown>
E       #3 0x555631262101 <unknown>
E       #4 0x5556312b06b4 <unknown>
E       #5 0x555631287e3d <unknown>
E       #6 0x5556312adb3b <unknown>
E       #7 0x555631287be3 <unknown>
E       #8 0x5556312542d2 <unknown>
E       #9 0x555631254f91 <unknown>
E       #10 0x5556317559e8 <unknown>
E       #11 0x55563175984f <unknown>
E       #12 0x55563173cec9 <unknown>
E       #13 0x55563175a3f5 <unknown>
E       #14 0x55563172274f <unknown>
E       #15 0x55563177ecc8 <unknown>
E       #16 0x55563177eea3 <unknown>
E       #17 0x555631790f83 <unknown>
E       #18 0x7f021f49caa4 <unknown>
E       #19 0x7f021f529c6c <unknown>

/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/selenium/webdriver/support/wait.py:146: TimeoutException
---------------------------- Captured stderr setup -----------------------------
2025-10-25 03:58:39,846 - INFO - Starting test with Chrome browser
2025-10-25 03:58:39,846 - INFO - ====== WebDriver manager ======
2025-10-25 03:58:39,909 - INFO - Get LATEST chromedriver version for google-chrome
2025-10-25 03:58:39,947 - INFO - Get LATEST chromedriver version for google-chrome
2025-10-25 03:58:39,984 - INFO - Driver [/home/runner/.wdm/drivers/chromedriver/linux64/141.0.7390.122/chromedriver-linux64/chromedriver] found in cache
2025-10-25 03:58:41,090 - INFO - Navigated to: https://app.mochaaccounting.com/login
------------------------------ Captured log setup ------------------------------
INFO     tests.test_signup_login.conftest:conftest.py:78 Starting test with Chrome browser
INFO     WDM:logger.py:11 ====== WebDriver manager ======
INFO     WDM:logger.py:11 Get LATEST chromedriver version for google-chrome
INFO     WDM:logger.py:11 Get LATEST chromedriver version for google-chrome
INFO     WDM:logger.py:11 Driver [/home/runner/.wdm/drivers/chromedriver/linux64/141.0.7390.122/chromedriver-linux64/chromedriver] found in cache
INFO     tests.test_signup_login.conftest:conftest.py:134 Navigated to: https://app.mochaaccounting.com/login
--------------------------- Captured stderr teardown ---------------------------
2025-10-25 04:00:26,151 - INFO - Closing browser
---------------------------- Captured log teardown -----------------------------
INFO     tests.test_signup_login.conftest:conftest.py:144 Closing browser
___________________ test_invalid_email_validation[username4] ___________________

sign_login_setup = <selenium.webdriver.chrome.webdriver.WebDriver (session="f88f94ba63f83e46fa878bb60b6f8ac4")>
login_test_data = {'expected_password_validation': 'Password is required', 'expected_username_validation': 'Email is required.', 'expect...ect_email_verification_msg': "Please check your email address. If you don't have an account, you can create one.", ...}
username = ('payeryash10@gmail/com',)

    @pytest.mark.parametrize("username", zip(invalid_format_username))
    def test_invalid_email_validation(sign_login_setup, login_test_data, username):
        driver = sign_login_setup
        login_page = LoginPage(driver)
        login_page.enter_username(username)
        login_page.disabled_click_login_button()
>       login_page.invalid_email_validation(login_test_data)

tests/test_signup_login/test_login.py:76: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <pages.login_page.LoginPage object at 0x7fc3e68bb2b0>
login_test_data = {'expected_password_validation': 'Password is required', 'expected_username_validation': 'Email is required.', 'expect...ect_email_verification_msg': "Please check your email address. If you don't have an account, you can create one.", ...}

    def invalid_email_validation(self, login_test_data):
>       self.actions.wait_for_element(self.invalid_email_verification_msg)

pages/login_page.py:91: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <actions.actions.Actions object at 0x7fc3e68b98b0>
locator = ('xpath', "//div[@class='invalid-feedback']"), timeout = 100

    def wait_for_element(self, locator, timeout=100):
>       WebDriverWait(self.driver, timeout).until(EC.visibility_of_element_located(locator))

actions/actions.py:80: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <selenium.webdriver.support.wait.WebDriverWait (session="f88f94ba63f83e46fa878bb60b6f8ac4")>
method = <function visibility_of_element_located.<locals>._predicate at 0x7fc3e6921620>
message = ''

    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = "") -> T:
        """Wait until the method returns a value that is not False.
    
        Calls the method provided with the driver as an argument until the
        return value does not evaluate to ``False``.
    
        Parameters:
        ----------
        method: callable(WebDriver)
            - A callable object that takes a WebDriver instance as an argument.
    
        message: str
            - Optional message for :exc:`TimeoutException`
    
        Return:
        -------
        object: T
            - The result of the last call to `method`
    
        Raises:
        -------
        TimeoutException
            - If 'method' does not return a truthy value within the WebDriverWait
            object's timeout
    
        Example:
        --------
        >>> from selenium.webdriver.common.by import By
        >>> from selenium.webdriver.support.ui import WebDriverWait
        >>> from selenium.webdriver.support import expected_conditions as EC
    
        # Wait until an element is visible on the page
        >>> wait = WebDriverWait(driver, 10)
        >>> element = wait.until(EC.visibility_of_element_located((By.ID, "exampleId")))
        >>> print(element.text)
        """
        screen = None
        stacktrace = None
    
        end_time = time.monotonic() + self._timeout
        while True:
            try:
                value = method(self._driver)
                if value:
                    return value
            except self._ignored_exceptions as exc:
                screen = getattr(exc, "screen", None)
                stacktrace = getattr(exc, "stacktrace", None)
            if time.monotonic() > end_time:
                break
            time.sleep(self._poll)
>       raise TimeoutException(message, screen, stacktrace)
E       selenium.common.exceptions.TimeoutException: Message: 
E       Stacktrace:
E       #0 0x557cdf51dfea <unknown>
E       #1 0x557cdef9bd06 <unknown>
E       #2 0x557cdefede6d <unknown>
E       #3 0x557cdefee101 <unknown>
E       #4 0x557cdf03c6b4 <unknown>
E       #5 0x557cdf013e3d <unknown>
E       #6 0x557cdf039b3b <unknown>
E       #7 0x557cdf013be3 <unknown>
E       #8 0x557cdefe02d2 <unknown>
E       #9 0x557cdefe0f91 <unknown>
E       #10 0x557cdf4e19e8 <unknown>
E       #11 0x557cdf4e584f <unknown>
E       #12 0x557cdf4c8ec9 <unknown>
E       #13 0x557cdf4e63f5 <unknown>
E       #14 0x557cdf4ae74f <unknown>
E       #15 0x557cdf50acc8 <unknown>
E       #16 0x557cdf50aea3 <unknown>
E       #17 0x557cdf51cf83 <unknown>
E       #18 0x7f26c5c9caa4 <unknown>
E       #19 0x7f26c5d29c6c <unknown>

/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/selenium/webdriver/support/wait.py:146: TimeoutException
---------------------------- Captured stderr setup -----------------------------
2025-10-25 04:00:26,243 - INFO - Starting test with Chrome browser
2025-10-25 04:00:26,243 - INFO - ====== WebDriver manager ======
2025-10-25 04:00:26,308 - INFO - Get LATEST chromedriver version for google-chrome
2025-10-25 04:00:26,346 - INFO - Get LATEST chromedriver version for google-chrome
2025-10-25 04:00:26,383 - INFO - Driver [/home/runner/.wdm/drivers/chromedriver/linux64/141.0.7390.122/chromedriver-linux64/chromedriver] found in cache
2025-10-25 04:00:27,698 - INFO - Navigated to: https://app.mochaaccounting.com/login
------------------------------ Captured log setup ------------------------------
INFO     tests.test_signup_login.conftest:conftest.py:78 Starting test with Chrome browser
INFO     WDM:logger.py:11 ====== WebDriver manager ======
INFO     WDM:logger.py:11 Get LATEST chromedriver version for google-chrome
INFO     WDM:logger.py:11 Get LATEST chromedriver version for google-chrome
INFO     WDM:logger.py:11 Driver [/home/runner/.wdm/drivers/chromedriver/linux64/141.0.7390.122/chromedriver-linux64/chromedriver] found in cache
INFO     tests.test_signup_login.conftest:conftest.py:134 Navigated to: https://app.mochaaccounting.com/login
--------------------------- Captured stderr teardown ---------------------------
2025-10-25 04:02:12,816 - INFO - Closing browser
---------------------------- Captured log teardown -----------------------------
INFO     tests.test_signup_login.conftest:conftest.py:144 Closing browser
==================================== PASSES ====================================
________ test_valid_login[ranjeet.gupta@mochatechnologies.com-Ais@1234] ________
---------------------------- Captured stderr setup -----------------------------
2025-10-25 03:49:07,293 - INFO - Starting test with Chrome browser
2025-10-25 03:49:07,293 - INFO - ====== WebDriver manager ======
2025-10-25 03:49:07,414 - INFO - Get LATEST chromedriver version for google-chrome
2025-10-25 03:49:07,463 - INFO - Get LATEST chromedriver version for google-chrome
2025-10-25 03:49:07,500 - INFO - There is no [linux64] chromedriver "141.0.7390.122" for browser google-chrome "141.0.7390" in cache
2025-10-25 03:49:07,500 - INFO - Get LATEST chromedriver version for google-chrome
2025-10-25 03:49:07,605 - INFO - WebDriver version 141.0.7390.122 selected
2025-10-25 03:49:07,609 - INFO - Modern chrome version https://storage.googleapis.com/chrome-for-testing-public/141.0.7390.122/linux64/chromedriver-linux64.zip
2025-10-25 03:49:07,609 - INFO - About to download new driver from https://storage.googleapis.com/chrome-for-testing-public/141.0.7390.122/linux64/chromedriver-linux64.zip
2025-10-25 03:49:07,649 - INFO - Driver downloading response is 200
2025-10-25 03:49:07,696 - INFO - Get LATEST chromedriver version for google-chrome
2025-10-25 03:49:07,842 - INFO - Driver has been saved in cache [/home/runner/.wdm/drivers/chromedriver/linux64/141.0.7390.122]
2025-10-25 03:49:09,641 - INFO - Navigated to: https://app.mochaaccounting.com/login
------------------------------ Captured log setup ------------------------------
INFO     tests.test_signup_login.conftest:conftest.py:78 Starting test with Chrome browser
INFO     WDM:logger.py:11 ====== WebDriver manager ======
INFO     WDM:logger.py:11 Get LATEST chromedriver version for google-chrome
INFO     WDM:logger.py:11 Get LATEST chromedriver version for google-chrome
INFO     WDM:logger.py:11 There is no [linux64] chromedriver "141.0.7390.122" for browser google-chrome "141.0.7390" in cache
INFO     WDM:logger.py:11 Get LATEST chromedriver version for google-chrome
INFO     WDM:logger.py:11 WebDriver version 141.0.7390.122 selected
INFO     WDM:logger.py:11 Modern chrome version https://storage.googleapis.com/chrome-for-testing-public/141.0.7390.122/linux64/chromedriver-linux64.zip
INFO     WDM:logger.py:11 About to download new driver from https://storage.googleapis.com/chrome-for-testing-public/141.0.7390.122/linux64/chromedriver-linux64.zip
INFO     WDM:logger.py:11 Driver downloading response is 200
INFO     WDM:logger.py:11 Get LATEST chromedriver version for google-chrome
INFO     WDM:logger.py:11 Driver has been saved in cache [/home/runner/.wdm/drivers/chromedriver/linux64/141.0.7390.122]
INFO     tests.test_signup_login.conftest:conftest.py:134 Navigated to: https://app.mochaaccounting.com/login
----------------------------- Captured stderr call -----------------------------
2025-10-25 03:49:09,642 - INFO - Starting the test case for valid credentials
2025-10-25 03:49:09,808 - INFO - User enters the email-id
2025-10-25 03:49:11,261 - INFO - User enters the password
2025-10-25 03:49:11,349 - INFO - User clicks on login button
2025-10-25 03:49:13,964 - INFO - The test case passed
------------------------------ Captured log call -------------------------------
INFO     tests.test_signup_login.test_login:test_login.py:25 Starting the test case for valid credentials
INFO     tests.test_signup_login.test_login:test_login.py:27 User enters the email-id
INFO     tests.test_signup_login.test_login:test_login.py:29 User enters the password
INFO     tests.test_signup_login.test_login:test_login.py:31 User clicks on login button
INFO     tests.test_signup_login.test_login:test_login.py:33 The test case passed
--------------------------- Captured stderr teardown ---------------------------
2025-10-25 03:49:13,964 - INFO - Closing browser
---------------------------- Captured log teardown -----------------------------
INFO     tests.test_signup_login.conftest:conftest.py:144 Closing browser
_____________ test_valid_login[samatakamble9@gmail.com-Samata@16] ______________
---------------------------- Captured stderr setup -----------------------------
2025-10-25 03:49:14,050 - INFO - Starting test with Chrome browser
2025-10-25 03:49:14,051 - INFO - ====== WebDriver manager ======
2025-10-25 03:49:14,115 - INFO - Get LATEST chromedriver version for google-chrome
2025-10-25 03:49:14,152 - INFO - Get LATEST chromedriver version for google-chrome
2025-10-25 03:49:14,196 - INFO - Driver [/home/runner/.wdm/drivers/chromedriver/linux64/141.0.7390.122/chromedriver-linux64/chromedriver] found in cache
2025-10-25 03:49:15,431 - INFO - Navigated to: https://app.mochaaccounting.com/login
------------------------------ Captured log setup ------------------------------
INFO     tests.test_signup_login.conftest:conftest.py:78 Starting test with Chrome browser
INFO     WDM:logger.py:11 ====== WebDriver manager ======
INFO     WDM:logger.py:11 Get LATEST chromedriver version for google-chrome
INFO     WDM:logger.py:11 Get LATEST chromedriver version for google-chrome
INFO     WDM:logger.py:11 Driver [/home/runner/.wdm/drivers/chromedriver/linux64/141.0.7390.122/chromedriver-linux64/chromedriver] found in cache
INFO     tests.test_signup_login.conftest:conftest.py:134 Navigated to: https://app.mochaaccounting.com/login
----------------------------- Captured stderr call -----------------------------
2025-10-25 03:49:15,432 - INFO - Starting the test case for valid credentials
2025-10-25 03:49:15,570 - INFO - User enters the email-id
2025-10-25 03:49:17,017 - INFO - User enters the password
2025-10-25 03:49:17,104 - INFO - User clicks on login button
2025-10-25 03:49:19,308 - INFO - The test case passed
------------------------------ Captured log call -------------------------------
INFO     tests.test_signup_login.test_login:test_login.py:25 Starting the test case for valid credentials
INFO     tests.test_signup_login.test_login:test_login.py:27 User enters the email-id
INFO     tests.test_signup_login.test_login:test_login.py:29 User enters the password
INFO     tests.test_signup_login.test_login:test_login.py:31 User clicks on login button
INFO     tests.test_signup_login.test_login:test_login.py:33 The test case passed
--------------------------- Captured stderr teardown ---------------------------
2025-10-25 03:49:19,309 - INFO - Closing browser
---------------------------- Captured log teardown -----------------------------
INFO     tests.test_signup_login.conftest:conftest.py:144 Closing browser
___________ test_valid_login[shubhamdabir07@gmail.com-Shubham@1234] ____________
---------------------------- Captured stderr setup -----------------------------
2025-10-25 03:49:19,374 - INFO - Starting test with Chrome browser
2025-10-25 03:49:19,374 - INFO - ====== WebDriver manager ======
2025-10-25 03:49:19,440 - INFO - Get LATEST chromedriver version for google-chrome
2025-10-25 03:49:19,481 - INFO - Get LATEST chromedriver version for google-chrome
2025-10-25 03:49:19,517 - INFO - Driver [/home/runner/.wdm/drivers/chromedriver/linux64/141.0.7390.122/chromedriver-linux64/chromedriver] found in cache
2025-10-25 03:49:20,763 - INFO - Navigated to: https://app.mochaaccounting.com/login
------------------------------ Captured log setup ------------------------------
INFO     tests.test_signup_login.conftest:conftest.py:78 Starting test with Chrome browser
INFO     WDM:logger.py:11 ====== WebDriver manager ======
INFO     WDM:logger.py:11 Get LATEST chromedriver version for google-chrome
INFO     WDM:logger.py:11 Get LATEST chromedriver version for google-chrome
INFO     WDM:logger.py:11 Driver [/home/runner/.wdm/drivers/chromedriver/linux64/141.0.7390.122/chromedriver-linux64/chromedriver] found in cache
INFO     tests.test_signup_login.conftest:conftest.py:134 Navigated to: https://app.mochaaccounting.com/login
----------------------------- Captured stderr call -----------------------------
2025-10-25 03:49:20,763 - INFO - Starting the test case for valid credentials
2025-10-25 03:49:20,904 - INFO - User enters the email-id
2025-10-25 03:49:22,371 - INFO - User enters the password
2025-10-25 03:49:22,459 - INFO - User clicks on login button
2025-10-25 03:49:24,501 - INFO - The test case passed
------------------------------ Captured log call -------------------------------
INFO     tests.test_signup_login.test_login:test_login.py:25 Starting the test case for valid credentials
INFO     tests.test_signup_login.test_login:test_login.py:27 User enters the email-id
INFO     tests.test_signup_login.test_login:test_login.py:29 User enters the password
INFO     tests.test_signup_login.test_login:test_login.py:31 User clicks on login button
INFO     tests.test_signup_login.test_login:test_login.py:33 The test case passed
--------------------------- Captured stderr teardown ---------------------------
2025-10-25 03:49:24,501 - INFO - Closing browser
---------------------------- Captured log teardown -----------------------------
INFO     tests.test_signup_login.conftest:conftest.py:144 Closing browser
______ test_valid_login[hrishikesh.shinde1607@gmail.com-Hrishikesh@1234] _______
---------------------------- Captured stderr setup -----------------------------
2025-10-25 03:49:24,567 - INFO - Starting test with Chrome browser
2025-10-25 03:49:24,567 - INFO - ====== WebDriver manager ======
2025-10-25 03:49:24,631 - INFO - Get LATEST chromedriver version for google-chrome
2025-10-25 03:49:24,668 - INFO - Get LATEST chromedriver version for google-chrome
2025-10-25 03:49:24,707 - INFO - Driver [/home/runner/.wdm/drivers/chromedriver/linux64/141.0.7390.122/chromedriver-linux64/chromedriver] found in cache
2025-10-25 03:49:25,901 - INFO - Navigated to: https://app.mochaaccounting.com/login
------------------------------ Captured log setup ------------------------------
INFO     tests.test_signup_login.conftest:conftest.py:78 Starting test with Chrome browser
INFO     WDM:logger.py:11 ====== WebDriver manager ======
INFO     WDM:logger.py:11 Get LATEST chromedriver version for google-chrome
INFO     WDM:logger.py:11 Get LATEST chromedriver version for google-chrome
INFO     WDM:logger.py:11 Driver [/home/runner/.wdm/drivers/chromedriver/linux64/141.0.7390.122/chromedriver-linux64/chromedriver] found in cache
INFO     tests.test_signup_login.conftest:conftest.py:134 Navigated to: https://app.mochaaccounting.com/login
----------------------------- Captured stderr call -----------------------------
2025-10-25 03:49:25,901 - INFO - Starting the test case for valid credentials
2025-10-25 03:49:26,055 - INFO - User enters the email-id
2025-10-25 03:49:27,509 - INFO - User enters the password
2025-10-25 03:49:27,597 - INFO - User clicks on login button
2025-10-25 03:49:29,407 - INFO - The test case passed
------------------------------ Captured log call -------------------------------
INFO     tests.test_signup_login.test_login:test_login.py:25 Starting the test case for valid credentials
INFO     tests.test_signup_login.test_login:test_login.py:27 User enters the email-id
INFO     tests.test_signup_login.test_login:test_login.py:29 User enters the password
INFO     tests.test_signup_login.test_login:test_login.py:31 User clicks on login button
INFO     tests.test_signup_login.test_login:test_login.py:33 The test case passed
--------------------------- Captured stderr teardown ---------------------------
2025-10-25 03:49:29,408 - INFO - Closing browser
---------------------------- Captured log teardown -----------------------------
INFO     tests.test_signup_login.conftest:conftest.py:144 Closing browser
_____________________ test_invalid_email_login[username0] ______________________
---------------------------- Captured stderr setup -----------------------------
2025-10-25 03:49:29,476 - INFO - Starting test with Chrome browser
2025-10-25 03:49:29,476 - INFO - ====== WebDriver manager ======
2025-10-25 03:49:29,539 - INFO - Get LATEST chromedriver version for google-chrome
2025-10-25 03:49:29,577 - INFO - Get LATEST chromedriver version for google-chrome
2025-10-25 03:49:29,613 - INFO - Driver [/home/runner/.wdm/drivers/chromedriver/linux64/141.0.7390.122/chromedriver-linux64/chromedriver] found in cache
2025-10-25 03:49:30,850 - INFO - Navigated to: https://app.mochaaccounting.com/login
------------------------------ Captured log setup ------------------------------
INFO     tests.test_signup_login.conftest:conftest.py:78 Starting test with Chrome browser
INFO     WDM:logger.py:11 ====== WebDriver manager ======
INFO     WDM:logger.py:11 Get LATEST chromedriver version for google-chrome
INFO     WDM:logger.py:11 Get LATEST chromedriver version for google-chrome
INFO     WDM:logger.py:11 Driver [/home/runner/.wdm/drivers/chromedriver/linux64/141.0.7390.122/chromedriver-linux64/chromedriver] found in cache
INFO     tests.test_signup_login.conftest:conftest.py:134 Navigated to: https://app.mochaaccounting.com/login
--------------------------- Captured stderr teardown ---------------------------
2025-10-25 03:49:33,628 - INFO - Closing browser
---------------------------- Captured log teardown -----------------------------
INFO     tests.test_signup_login.conftest:conftest.py:144 Closing browser
_____________________ test_invalid_email_login[username1] ______________________
---------------------------- Captured stderr setup -----------------------------
2025-10-25 03:49:33,690 - INFO - Starting test with Chrome browser
2025-10-25 03:49:33,690 - INFO - ====== WebDriver manager ======
2025-10-25 03:49:33,754 - INFO - Get LATEST chromedriver version for google-chrome
2025-10-25 03:49:33,793 - INFO - Get LATEST chromedriver version for google-chrome
2025-10-25 03:49:33,829 - INFO - Driver [/home/runner/.wdm/drivers/chromedriver/linux64/141.0.7390.122/chromedriver-linux64/chromedriver] found in cache
2025-10-25 03:49:34,472 - INFO - Navigated to: https://app.mochaaccounting.com/login
------------------------------ Captured log setup ------------------------------
INFO     tests.test_signup_login.conftest:conftest.py:78 Starting test with Chrome browser
INFO     WDM:logger.py:11 ====== WebDriver manager ======
INFO     WDM:logger.py:11 Get LATEST chromedriver version for google-chrome
INFO     WDM:logger.py:11 Get LATEST chromedriver version for google-chrome
INFO     WDM:logger.py:11 Driver [/home/runner/.wdm/drivers/chromedriver/linux64/141.0.7390.122/chromedriver-linux64/chromedriver] found in cache
INFO     tests.test_signup_login.conftest:conftest.py:134 Navigated to: https://app.mochaaccounting.com/login
--------------------------- Captured stderr teardown ---------------------------
2025-10-25 03:49:37,532 - INFO - Closing browser
---------------------------- Captured log teardown -----------------------------
INFO     tests.test_signup_login.conftest:conftest.py:144 Closing browser
_____________________ test_invalid_email_login[username2] ______________________
---------------------------- Captured stderr setup -----------------------------
2025-10-25 03:49:37,597 - INFO - Starting test with Chrome browser
2025-10-25 03:49:37,597 - INFO - ====== WebDriver manager ======
2025-10-25 03:49:37,661 - INFO - Get LATEST chromedriver version for google-chrome
2025-10-25 03:49:37,699 - INFO - Get LATEST chromedriver version for google-chrome
2025-10-25 03:49:37,737 - INFO - Driver [/home/runner/.wdm/drivers/chromedriver/linux64/141.0.7390.122/chromedriver-linux64/chromedriver] found in cache
2025-10-25 03:49:38,901 - INFO - Navigated to: https://app.mochaaccounting.com/login
------------------------------ Captured log setup ------------------------------
INFO     tests.test_signup_login.conftest:conftest.py:78 Starting test with Chrome browser
INFO     WDM:logger.py:11 ====== WebDriver manager ======
INFO     WDM:logger.py:11 Get LATEST chromedriver version for google-chrome
INFO     WDM:logger.py:11 Get LATEST chromedriver version for google-chrome
INFO     WDM:logger.py:11 Driver [/home/runner/.wdm/drivers/chromedriver/linux64/141.0.7390.122/chromedriver-linux64/chromedriver] found in cache
INFO     tests.test_signup_login.conftest:conftest.py:134 Navigated to: https://app.mochaaccounting.com/login
--------------------------- Captured stderr teardown ---------------------------
2025-10-25 03:49:41,661 - INFO - Closing browser
---------------------------- Captured log teardown -----------------------------
INFO     tests.test_signup_login.conftest:conftest.py:144 Closing browser
_____________________ test_invalid_email_login[username3] ______________________
---------------------------- Captured stderr setup -----------------------------
2025-10-25 03:49:41,724 - INFO - Starting test with Chrome browser
2025-10-25 03:49:41,724 - INFO - ====== WebDriver manager ======
2025-10-25 03:49:41,789 - INFO - Get LATEST chromedriver version for google-chrome
2025-10-25 03:49:41,826 - INFO - Get LATEST chromedriver version for google-chrome
2025-10-25 03:49:41,864 - INFO - Driver [/home/runner/.wdm/drivers/chromedriver/linux64/141.0.7390.122/chromedriver-linux64/chromedriver] found in cache
2025-10-25 03:49:43,069 - INFO - Navigated to: https://app.mochaaccounting.com/login
------------------------------ Captured log setup ------------------------------
INFO     tests.test_signup_login.conftest:conftest.py:78 Starting test with Chrome browser
INFO     WDM:logger.py:11 ====== WebDriver manager ======
INFO     WDM:logger.py:11 Get LATEST chromedriver version for google-chrome
INFO     WDM:logger.py:11 Get LATEST chromedriver version for google-chrome
INFO     WDM:logger.py:11 Driver [/home/runner/.wdm/drivers/chromedriver/linux64/141.0.7390.122/chromedriver-linux64/chromedriver] found in cache
INFO     tests.test_signup_login.conftest:conftest.py:134 Navigated to: https://app.mochaaccounting.com/login
--------------------------- Captured stderr teardown ---------------------------
2025-10-25 03:49:45,887 - INFO - Closing browser
---------------------------- Captured log teardown -----------------------------
INFO     tests.test_signup_login.conftest:conftest.py:144 Closing browser
- Generated html report: file:///home/runner/work/Mocha_accounting/Mocha_accounting/C%3A%5CUsers%5CTaurus13%5CPycharmProjects%5CPythonProject%5Creports/20251025_034906/report.html -
=================== 7 failed, 8 passed in 785.70s (0:13:05) ====================
=== LOGIN TESTS COMPLETED ===
Exit Code: 1
