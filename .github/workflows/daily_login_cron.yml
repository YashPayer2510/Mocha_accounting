name: Mocha_Accounting_suite

on:
  schedule:
    # Runs daily at 9:00 AM IST (03:30 UTC)
    - cron: '30 3 * * *'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  run-all-tests:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.13
      uses: actions/setup-python@v3
      with:
        python-version: "3.13"

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y wget unzip xvfb libnss3 libxss1 libasound2t64 libxtst6 fonts-liberation

    - name: Install Chrome
      run: |
        wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
        echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest chromedriver-autoinstaller selenium
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Setup ChromeDriver
      run: |
        echo "Setting up ChromeDriver..."
        python -c "import chromedriver_autoinstaller; chromedriver_autoinstaller.install()"
        echo "ChromeDriver setup completed"

    - name: Login Tests
      continue-on-error: true
      env:
        GH_TOKEN: ${{ secrets.GH_PAT }}
      run: |
        set +e
        LOG_DIR=daily_test_logs
        LOG_FILE=$LOG_DIR/login_tests_$(date -u +'%Y-%m-%d').log
        mkdir -p $LOG_DIR

        START_TIME=$(date -u +"%Y-%m-%d %H:%M:%S")
        
        {
          echo "=== LOGIN TESTS STARTED: $START_TIME ==="
          pytest tests/test_signup_login/test_login.py -v --tb=long -rP
          TEST_EXIT_CODE=$?
          echo "=== LOGIN TESTS COMPLETED ==="
          echo "Exit Code: $TEST_EXIT_CODE"
        } >> $LOG_FILE 2>&1
        
        echo "=== Login Tests Summary ==="
        cat $LOG_FILE | tail -10
        exit $TEST_EXIT_CODE

    - name: Registration Tests
      continue-on-error: true
      env:
        GH_TOKEN: ${{ secrets.GH_PAT }}
      run: |
        set +e
        LOG_DIR=daily_test_logs
        LOG_FILE=$LOG_DIR/registration_tests_$(date -u +'%Y-%m-%d').log
        mkdir -p $LOG_DIR

        START_TIME=$(date -u +"%Y-%m-%d %H:%M:%S")
        
        {
          echo "=== REGISTRATION TESTS STARTED: $START_TIME ==="
          pytest tests/test_signup_login/test_sign_up.py -v --tb=long -rP
          TEST_EXIT_CODE=$?
          echo "=== REGISTRATION TESTS COMPLETED ==="
          echo "Exit Code: $TEST_EXIT_CODE"
        } >> $LOG_FILE 2>&1
        
        echo "=== Registration Tests Summary ==="
        cat $LOG_FILE | tail -10
        exit $TEST_EXIT_CODE

    - name: Commit and Push Test Results
      if: always()
      env:
        GH_TOKEN: ${{ secrets.GH_PAT }}
      run: |
        git config user.name "YashPayer2510"
        git config user.email "yash.payer@mochatechnologies.com"
        
        # Check if there are any log files to commit
        if git status --porcelain | grep -q "daily_test_logs/"; then
          git add daily_test_logs/
          git commit -m "Daily test results - $(date -u +'%Y-%m-%d %H:%M:%S')"
          git push
          echo "Test logs committed successfully"
        else
          echo "No test logs to commit"
        fi

    - name: Upload test logs as artifact
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-logs
        path: daily_test_logs/
        retention-days: 30
